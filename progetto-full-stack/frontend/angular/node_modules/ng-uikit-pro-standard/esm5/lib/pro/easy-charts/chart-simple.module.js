import { __decorate } from "tslib";
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { SimpleChartComponent } from './chart-simple.component';
import { EasyPieChartComponent } from './chart-smallpie.component';
import * as ɵngcc0 from '@angular/core';
var ChartSimpleModule = /** @class */ (function () {
    function ChartSimpleModule() {
    }
ChartSimpleModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ChartSimpleModule });
ChartSimpleModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ChartSimpleModule_Factory(t) { return new (t || ChartSimpleModule)(); }, imports: [[CommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ChartSimpleModule, { declarations: function () { return [SimpleChartComponent, EasyPieChartComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [SimpleChartComponent, EasyPieChartComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ChartSimpleModule, [{
        type: NgModule,
        args: [{
                declarations: [SimpleChartComponent, EasyPieChartComponent],
                exports: [SimpleChartComponent, EasyPieChartComponent],
                imports: [CommonModule]
            }]
    }], function () { return []; }, null); })();
    return ChartSimpleModule;
}());
export { ChartSimpleModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hhcnQtc2ltcGxlLm1vZHVsZS5qcyIsInNvdXJjZXMiOlsibmctdWlraXQtcHJvLXN0YW5kYXJkL2xpYi9wcm8vZWFzeS1jaGFydHMvY2hhcnQtc2ltcGxlLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFekMsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDaEUsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7O0FBT25FO0FBQ29CLElBRHBCO0FBQWdDLElBQUEsQ0FBQztLQUFwQixpQkFBaUIseUJBTDdCLFFBQVEsQ0FBQyxlQUNSO0lBQVksRUFBRSxDQUFDLG9CQUFvQixFQUFFLHFCQUFxQixDQUFDLGVBQzNELE9BQU8sRUFBRSxDQUFDLG9CQUFvQixFQUFFLHFCQUFxQixDQUFDLGVBQ3RELE9BQU8sRUFBRSxDQUFDLFlBQVksQ0FBQyxZQUN4QixDQUFDO1FBQ1csaUJBQWlCLENBQUc7Ozs7Ozs7O2dEQUNqQztBQUFFLElBRDhCLHdCQUFDO0FBQy9CLENBRCtCLEFBQWpDLElBQWlDOztBQVhBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBRUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFPQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFMQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBTaW1wbGVDaGFydENvbXBvbmVudCB9IGZyb20gJy4vY2hhcnQtc2ltcGxlLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBFYXN5UGllQ2hhcnRDb21wb25lbnQgfSBmcm9tICcuL2NoYXJ0LXNtYWxscGllLmNvbXBvbmVudCc7XG5cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogW1NpbXBsZUNoYXJ0Q29tcG9uZW50LCBFYXN5UGllQ2hhcnRDb21wb25lbnRdLFxuICBleHBvcnRzOiBbU2ltcGxlQ2hhcnRDb21wb25lbnQsIEVhc3lQaWVDaGFydENvbXBvbmVudF0sXG4gIGltcG9ydHM6IFtDb21tb25Nb2R1bGVdLFxufSlcbmV4cG9ydCBjbGFzcyBDaGFydFNpbXBsZU1vZHVsZSB7fVxuIl19