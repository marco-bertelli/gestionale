import { __decorate } from "tslib";
import { NgModule } from '@angular/core';
import { FormsModule } from '@angular/forms';
import { CommonModule } from '@angular/common';
import { MdbStickyDirective } from './sticky-content.directive';
import * as ɵngcc0 from '@angular/core';
export { MdbStickyDirective };
var StickyContentModule = /** @class */ (function () {
    function StickyContentModule() {
    }
StickyContentModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: StickyContentModule });
StickyContentModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function StickyContentModule_Factory(t) { return new (t || StickyContentModule)(); }, imports: [[CommonModule, FormsModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(StickyContentModule, { declarations: function () { return [MdbStickyDirective]; }, imports: function () { return [CommonModule, FormsModule]; }, exports: function () { return [MdbStickyDirective]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(StickyContentModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, FormsModule],
                declarations: [MdbStickyDirective],
                exports: [MdbStickyDirective]
            }]
    }], function () { return []; }, null); })();
    return StickyContentModule;
}());
export { StickyContentModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RpY2t5LWNvbnRlbnQubW9kdWxlLmpzIiwic291cmNlcyI6WyJuZy11aWtpdC1wcm8tc3RhbmRhcmQvbGliL3Byby9zdGlja3ktY29udGVudC9zdGlja3ktY29udGVudC5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzdDLE9BQU8sRUFBRSxZQUFZLEVBQUcsTUFBTSxpQkFBaUIsQ0FBQztBQUVoRCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQzs7QUFFaEUsT0FBTyxFQUFFLGtCQUFrQixFQUFFLENBQUM7QUFROUI7QUFDb0IsSUFEcEI7QUFBa0MsSUFBQSxDQUFDO0tBQXRCLG1CQUFtQix5QkFOL0IsUUFBUSxDQUFDLGVBQ1IsT0FBTyxFQUFFO0FBQUUsWUFBWSxFQUFFLFdBQVcsQ0FBRSxlQUN0QyxZQUFZLEVBQUUsQ0FBQyxrQkFBa0IsQ0FBQyxlQUNsQyxPQUFPLEVBQUUsQ0FBRSxrQkFBa0IsQ0FBRSxXQUNoQyxDQUFDLFNBRVcsbUJBQW1CLENBQUc7Ozs7Ozs7OztnREFDbkM7QUFBRSxJQURnQywwQkFBQztBQUNqQyxDQURpQyxBQUFuQyxJQUFtQzs7QUFkQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFFQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBRUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBUUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBTkEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFFQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGb3Jtc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSAgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuXG5pbXBvcnQgeyBNZGJTdGlja3lEaXJlY3RpdmUgfSBmcm9tICcuL3N0aWNreS1jb250ZW50LmRpcmVjdGl2ZSc7XG5cbmV4cG9ydCB7IE1kYlN0aWNreURpcmVjdGl2ZSB9O1xuXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbIENvbW1vbk1vZHVsZSwgRm9ybXNNb2R1bGUgXSxcbiAgZGVjbGFyYXRpb25zOiBbTWRiU3RpY2t5RGlyZWN0aXZlXSxcbiAgZXhwb3J0czogWyBNZGJTdGlja3lEaXJlY3RpdmUgXVxufSlcblxuZXhwb3J0IGNsYXNzIFN0aWNreUNvbnRlbnRNb2R1bGUge31cbiJdfQ==