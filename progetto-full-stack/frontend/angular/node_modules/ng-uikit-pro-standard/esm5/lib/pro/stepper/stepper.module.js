import { __decorate } from "tslib";
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { MdbStepComponent } from './step.component';
import { MdbStepperComponent } from './stepper.component';
import * as ɵngcc0 from '@angular/core';
var StepperModule = /** @class */ (function () {
    function StepperModule() {
    }
StepperModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: StepperModule });
StepperModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function StepperModule_Factory(t) { return new (t || StepperModule)(); }, imports: [[
            CommonModule,
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(StepperModule, { declarations: function () { return [MdbStepperComponent,
        MdbStepComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [MdbStepperComponent,
        MdbStepComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(StepperModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    MdbStepperComponent,
                    MdbStepComponent
                ],
                exports: [
                    MdbStepperComponent,
                    MdbStepComponent
                ],
                imports: [
                    CommonModule,
                ]
            }]
    }], function () { return []; }, null); })();
    return StepperModule;
}());
export { StepperModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RlcHBlci5tb2R1bGUuanMiLCJzb3VyY2VzIjpbIm5nLXVpa2l0LXByby1zdGFuZGFyZC9saWIvcHJvL3N0ZXBwZXIvc3RlcHBlci5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBRS9DLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ3BELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHFCQUFxQixDQUFDOztBQWdCMUQ7QUFDbUIsSUFEbkI7QUFBNEIsSUFBQyxDQUFDO0tBQWpCLGFBQWEseUJBYnpCLFFBQVEsQ0FBQyxlQUNSO1FBQVksRUFBRSxtQkFDWixtQkFBbUIsbUJBQ25CLGdCQUFnQixlQUNqQixlQUNELE9BQU8sRUFBRSxtQkFDUDtrQkFBbUI7V0FDbkI7WUFBZ0IsZUFDakIsZUFDRCxPQUFPLEVBQUUsbUJBQ1AsWUFBWSxnQkFDYixXQUNGLENBQUMsU0FDVyxhQUFhLENBQUk7Ozs7Ozs7Ozs7Ozs7Ozs7OztnREFDOUI7QUFBRSxJQUQyQixvQkFBQztBQUM1QixDQUQ0QixBQUE5QixJQUE4Qjs7QUFwQkEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFFQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQWdCQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFiQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQ0EsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUNBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuXG5pbXBvcnQgeyBNZGJTdGVwQ29tcG9uZW50IH0gZnJvbSAnLi9zdGVwLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBNZGJTdGVwcGVyQ29tcG9uZW50IH0gZnJvbSAnLi9zdGVwcGVyLmNvbXBvbmVudCc7XG5cblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbXG4gICAgTWRiU3RlcHBlckNvbXBvbmVudCxcbiAgICBNZGJTdGVwQ29tcG9uZW50XG4gIF0sXG4gIGV4cG9ydHM6IFtcbiAgICBNZGJTdGVwcGVyQ29tcG9uZW50LFxuICAgIE1kYlN0ZXBDb21wb25lbnRcbiAgXSxcbiAgaW1wb3J0czogW1xuICAgIENvbW1vbk1vZHVsZSxcbiAgXVxufSlcbmV4cG9ydCBjbGFzcyBTdGVwcGVyTW9kdWxlIHsgfVxuIl19