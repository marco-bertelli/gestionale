import { __decorate, __metadata } from "tslib";
import { Component, Input, ViewChild, TemplateRef, ElementRef, OnInit, ChangeDetectionStrategy, } from '@angular/core';
import { FormGroup } from '@angular/forms';
import * as ɵngcc0 from '@angular/core';

function MdbStepComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵprojection(0);
} }
var _c0 = ["*"];
var MdbStepComponent = /** @class */ (function () {
    function MdbStepComponent(el) {
        this.el = el;
        this.editable = true;
        this._isActive = false;
    }
    Object.defineProperty(MdbStepComponent.prototype, "isDone", {
        get: function () {
            return this._isDone;
        },
        set: function (value) {
            this._isDone = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdbStepComponent.prototype, "isWrong", {
        get: function () {
            return this._isWrong;
        },
        set: function (value) {
            this._isWrong = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdbStepComponent.prototype, "isActive", {
        get: function () {
            return this._isActive;
        },
        set: function (value) {
            this._isActive = value;
        },
        enumerable: true,
        configurable: true
    });
    MdbStepComponent.prototype._removeClasses = function () {
        this.isActive = false;
        this.isDone = false;
        this.isWrong = false;
    };
    MdbStepComponent.prototype.reset = function () {
        if (this.stepForm) {
            this.stepForm.reset();
        }
        this._removeClasses();
    };
    MdbStepComponent.prototype.ngOnInit = function () { };
    MdbStepComponent.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        ViewChild(TemplateRef, { static: true }),
        __metadata("design:type", TemplateRef)
    ], MdbStepComponent.prototype, "content", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], MdbStepComponent.prototype, "editable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], MdbStepComponent.prototype, "name", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], MdbStepComponent.prototype, "label", void 0);
    __decorate([
        Input(),
        __metadata("design:type", FormGroup)
    ], MdbStepComponent.prototype, "stepForm", void 0);
    MdbStepComponent = __decorate([ __metadata("design:paramtypes", [ElementRef])
    ], MdbStepComponent);
MdbStepComponent.ɵfac = function MdbStepComponent_Factory(t) { return new (t || MdbStepComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
MdbStepComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MdbStepComponent, selectors: [["mdb-step"]], viewQuery: function MdbStepComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(TemplateRef, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.content = _t.first);
    } }, inputs: { editable: "editable", name: "name", label: "label", stepForm: "stepForm" }, exportAs: ["mdbStep"], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MdbStepComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, MdbStepComponent_ng_template_0_Template, 1, 0, "ng-template");
    } }, encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MdbStepComponent, [{
        type: Component,
        args: [{
                selector: 'mdb-step',
                exportAs: 'mdbStep',
                template: '<ng-template><ng-content></ng-content></ng-template>',
                changeDetection: ChangeDetectionStrategy.OnPush
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { editable: [{
            type: Input
        }], content: [{
            type: ViewChild,
            args: [TemplateRef, { static: true }]
        }], name: [{
            type: Input
        }], label: [{
            type: Input
        }], stepForm: [{
            type: Input
        }] }); })();
    return MdbStepComponent;
}());
export { MdbStepComponent };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RlcC5jb21wb25lbnQuanMiLCJzb3VyY2VzIjpbIm5nLXVpa2l0LXByby1zdGFuZGFyZC9saWIvcHJvL3N0ZXBwZXIvc3RlcC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFDTCxTQUFTLEVBQ1QsS0FBSyxFQUNMLFNBQVMsRUFDVCxXQUFXLEVBQ1gsVUFBVSxFQUNWLE1BQU0sRUFDTix1QkFBdUIsR0FDeEIsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGdCQUFnQixDQUFDOzs7Ozs7O0FBUTNDO0FBQ0csSUFNRCwwQkFBbUIsRUFBYztBQUNuQyxRQURxQixPQUFFLEdBQUYsRUFBRSxDQUFZO0FBQUUsUUFMMUIsYUFBUSxHQUFHLElBQUksQ0FBQztBQUMxQixRQTRCUyxjQUFTLEdBQUcsS0FBSyxDQUFDO0FBRTVCLElBMUJzQyxDQUFDO0FBRXZDLElBQUUsc0JBQUksb0NBQU07QUFDWixhQURFO0FBQ0YsWUFBSSxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUM7QUFDdkIsUUFBQyxDQUFDO0FBQ0QsYUFBQSxVQUFXLEtBQWM7QUFDMUIsWUFBRyxJQUFJLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQztBQUN4QixRQUFDLENBQUM7QUFDRDtBQUVGO0FBQ1UsT0FQUDtBQUNGLElBS0Msc0JBQUkscUNBQU87QUFDYixhQURFO0FBQWUsWUFDYixPQUFPLElBQUksQ0FBQyxRQUFRLENBQUM7QUFDeEIsUUFBQyxDQUFDO0FBQ0QsYUFBQSxVQUFZLEtBQWM7QUFDM0IsWUFBRyxJQUFJLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQztBQUN6QixRQUFDLENBQUM7QUFDRDtBQUNGO0FBRVEsT0FQTDtBQUNGLElBS0Msc0JBQUksc0NBQVE7QUFDZCxhQURFO0FBQWUsWUFDYixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUM7QUFDekIsUUFBQyxDQUFDO0FBQ0QsYUFBQSxVQUFhLEtBQWM7QUFDNUIsWUFB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QUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFFQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBdkNBLEFBQUEsQUFOQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUxBLEFBQUEsQUFOQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBUUEsQUFBQSxBQVBBLEFBQUEsQUErQ0EsQUFBQSxBQUFBLEFBQUEsQUEvQ0EsQUErQ0EsQUEvQ0EsQUFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIENvbXBvbmVudCxcbiAgSW5wdXQsXG4gIFZpZXdDaGlsZCxcbiAgVGVtcGxhdGVSZWYsXG4gIEVsZW1lbnRSZWYsXG4gIE9uSW5pdCxcbiAgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRm9ybUdyb3VwIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdtZGItc3RlcCcsXG4gIGV4cG9ydEFzOiAnbWRiU3RlcCcsXG4gIHRlbXBsYXRlOiAnPG5nLXRlbXBsYXRlPjxuZy1jb250ZW50PjwvbmctY29udGVudD48L25nLXRlbXBsYXRlPicsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxufSlcbmV4cG9ydCBjbGFzcyBNZGJTdGVwQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgQFZpZXdDaGlsZChUZW1wbGF0ZVJlZiwgeyBzdGF0aWM6IHRydWUgfSkgY29udGVudDogVGVtcGxhdGVSZWY8YW55PjtcbiAgQElucHV0KCkgZWRpdGFibGUgPSB0cnVlO1xuICBASW5wdXQoKSBuYW1lOiBzdHJpbmc7XG4gIEBJbnB1dCgpIGxhYmVsOiBzdHJpbmc7XG4gIEBJbnB1dCgpIHN0ZXBGb3JtOiBGb3JtR3JvdXA7XG5cbiAgY29uc3RydWN0b3IocHVibGljIGVsOiBFbGVtZW50UmVmKSB7fVxuXG4gIGdldCBpc0RvbmUoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2lzRG9uZTtcbiAgfVxuICBzZXQgaXNEb25lKHZhbHVlOiBib29sZWFuKSB7XG4gICAgdGhpcy5faXNEb25lID0gdmFsdWU7XG4gIH1cbiAgcHJpdmF0ZSBfaXNEb25lOiBib29sZWFuO1xuXG4gIGdldCBpc1dyb25nKCkge1xuICAgIHJldHVybiB0aGlzLl9pc1dyb25nO1xuICB9XG4gIHNldCBpc1dyb25nKHZhbHVlOiBib29sZWFuKSB7XG4gICAgdGhpcy5faXNXcm9uZyA9IHZhbHVlO1xuICB9XG4gIHByaXZhdGUgX2lzV3Jvbmc6IGJvb2xlYW47XG5cbiAgZ2V0IGlzQWN0aXZlKCkge1xuICAgIHJldHVybiB0aGlzLl9pc0FjdGl2ZTtcbiAgfVxuICBzZXQgaXNBY3RpdmUodmFsdWU6IGJvb2xlYW4pIHtcbiAgICB0aGlzLl9pc0FjdGl2ZSA9IHZhbHVlO1xuICB9XG4gIHByaXZhdGUgX2lzQWN0aXZlID0gZmFsc2U7XG5cbiAgcHJpdmF0ZSBfcmVtb3ZlQ2xhc3NlcygpIHtcbiAgICB0aGlzLmlzQWN0aXZlID0gZmFsc2U7XG4gICAgdGhpcy5pc0RvbmUgPSBmYWxzZTtcbiAgICB0aGlzLmlzV3JvbmcgPSBmYWxzZTtcbiAgfVxuXG4gIHJlc2V0KCkge1xuICAgIGlmICh0aGlzLnN0ZXBGb3JtKSB7XG4gICAgICB0aGlzLnN0ZXBGb3JtLnJlc2V0KCk7XG4gICAgfVxuICAgIHRoaXMuX3JlbW92ZUNsYXNzZXMoKTtcbiAgfVxuXG4gIG5nT25Jbml0KCkge31cbn1cbiJdfQ==