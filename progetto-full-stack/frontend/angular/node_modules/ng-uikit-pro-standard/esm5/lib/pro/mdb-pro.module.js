import { __decorate } from "tslib";
import { NgModule, NO_ERRORS_SCHEMA } from '@angular/core';
import { AnimatedCardsModule } from './animated-cards/animated-cards.module';
import { FileInputModule } from './file-input/module/mdb-uploader.module';
import { ChipsModule } from './chips/chips.module';
import { ProgressBars } from './progressbars/index';
import { TabsModule } from './tabs-pills/tabset.module';
import { SelectModule } from './material-select/select.module';
import { DatepickerModule } from './date-picker/datepicker.module';
import { TimePickerModule } from './time-picker/timepicker.module';
import { MdbTimePickerModule } from './timepicker/timepicker.module';
import { LightBoxModule } from './lightbox/light-box.module';
import { SidenavModule } from './sidenav/sidenav.module';
import { ChartSimpleModule } from './easy-charts/chart-simple.module';
import { AccordionModule } from './accordion/index';
import { StickyContentModule } from './sticky-content/sticky-content.module';
import { SmoothscrollModule } from './smoothscroll/index';
import { CharCounterModule } from './inputs/char-counter.module';
import { ScrollSpyModule } from './scroll-spy/scroll-spy.module';
import { AutoFormatModule } from './auto-format/auto-format.module';
import { RangeModule } from './range/range.module';
import { AutoCompleterModule } from './auto-completer/auto-completer.module';
import { StepperModule } from './stepper/stepper.module';
import { MdbTreeModule } from './tree-view/tree-view.module';
import { MdbSelectModule } from './select/select.module';
import { MdbOptionModule } from './option/option.module';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './animated-cards/animated-cards.module';
import * as ɵngcc2 from './progressbars/index';
import * as ɵngcc3 from './tabs-pills/tabset.module';
import * as ɵngcc4 from './smoothscroll/mdb-page-scroll.module';
import * as ɵngcc5 from './inputs/char-counter.module';
export { MdbSelectModule, MdbSelectComponent, MdbSelectFilterComponent, MDB_SELECT_FILTER_VALUE_ACCESSOR, } from './select/index';
export { OptionComponent, OptionGroupComponent, SelectAllOptionComponent, MdbOptionModule, } from './option/index';
export { MdbTreeModule, MdbTreeComponent } from './tree-view/index';
export { MdbStepperComponent, MdbStepComponent, StepperModule } from './stepper/index';
export { MdbAutoCompleterComponent, MdbOptionComponent, MdbAutoCompleterDirective, AutoCompleterModule, MdbAutoCompleterOptionDirective, } from './auto-completer/index';
export { RangeModule, MdbRangeInputComponent } from './range/index';
export { AutoFormatModule, MdbDateFormatDirective, MdbCreditCardDirective, MdbCvvDirective, } from './auto-format/index';
export { ScrollSpyModule, ScrollSpyDirective, ScrollSpyWindowDirective, ScrollSpyElementDirective, ScrollSpyLinkDirective, ScrollSpyService, } from './scroll-spy/index';
export { AnimatedCardsModule, CardRotatingComponent, CardRevealComponent, } from './animated-cards/index';
export { ProgressbarComponent, ProgressbarConfigComponent, ProgressbarModule, ProgressBars, ProgressDirective, ProgressSpinnerComponent, BarComponent, } from './progressbars/index';
export { MaterialChipsComponent, ChipsModule } from './chips/index';
export { TabDirective, TabHeadingDirective, TabsetComponent, TabsetConfig, TabsModule, NgTranscludeDirective, } from './tabs-pills/index';
export { MDBSpinningPreloader } from './preloader/preloader.service';
export { SelectModule, Diacritics, Option, OptionList, SELECT_VALUE_ACCESSOR, SelectComponent, SelectDropdownComponent, } from './material-select/index';
export { MDBDatePickerComponent, DatepickerModule, InputAutoFillDirective, MYDP_VALUE_ACCESSOR, UtilService, LocaleService, FocusDirective, } from './date-picker/index';
export { TimePickerModule, ClockPickerComponent } from './time-picker/index';
export { MdbTimePickerModule, MdbTimePickerDirective, MdbTimePickerComponent, MdbTimepickerToggleComponent, MDB_TIMEPICKER_VALUE_ACCESSOR, MdbTimePickerContentComponent, } from './timepicker/index';
export { LightBoxModule, ImageModalComponent } from './lightbox/index';
export { SidenavComponent, SidenavModule } from './sidenav/index';
export { ChartSimpleModule, EasyPieChartComponent, SimpleChartComponent, } from './easy-charts/index';
export { SBItemComponent, SBItemBodyComponent, SBItemHeadComponent, SqueezeBoxComponent, AccordionModule, } from './accordion/index';
export { MdbStickyDirective, StickyContentModule } from './sticky-content/index';
export { SmoothscrollModule, PageScrollDirective, PageScrollConfig, PageScrollInstance, PageScrollService, PageScrollUtilService, EasingLogic, } from './smoothscroll/index';
export { CharCounterDirective, CharCounterModule } from './inputs/index';
export { MDBFileDropDirective, MDBFileSelectDirective, FileInputModule, MDBUploaderService, humanizeBytes, } from './file-input/index';
var MODULES = [
    AnimatedCardsModule,
    FileInputModule,
    ChipsModule,
    // tslint:disable-next-line: deprecation
    ProgressBars,
    TabsModule,
    SelectModule,
    DatepickerModule,
    TimePickerModule,
    MdbTimePickerModule,
    LightBoxModule,
    SidenavModule,
    ChartSimpleModule,
    AccordionModule,
    StickyContentModule,
    SmoothscrollModule,
    CharCounterModule,
    ScrollSpyModule,
    AutoFormatModule,
    RangeModule,
    AutoCompleterModule,
    StepperModule,
    MdbTreeModule,
    MdbSelectModule,
    MdbOptionModule,
];
var MDBRootModulePro = /** @class */ (function () {
    function MDBRootModulePro() {
    }
MDBRootModulePro.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MDBRootModulePro });
MDBRootModulePro.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MDBRootModulePro_Factory(t) { return new (t || MDBRootModulePro)(); }, providers: [], imports: [[
            AnimatedCardsModule.forRoot(),
            ChipsModule,
            // tslint:disable-next-line: deprecation
            ProgressBars.forRoot(),
            TabsModule.forRoot(),
            SelectModule,
            DatepickerModule,
            TimePickerModule,
            MdbTimePickerModule,
            LightBoxModule,
            SidenavModule,
            ChartSimpleModule,
            AccordionModule,
            StickyContentModule,
            SmoothscrollModule.forRoot(),
            CharCounterModule.forRoot(),
            ScrollSpyModule,
            AutoFormatModule,
            RangeModule,
            AutoCompleterModule,
            StepperModule,
            MdbTreeModule,
            MdbSelectModule,
            MdbOptionModule,
        ], AnimatedCardsModule,
        FileInputModule,
        ChipsModule,
        // tslint:disable-next-line: deprecation
        ProgressBars,
        TabsModule,
        SelectModule,
        DatepickerModule,
        TimePickerModule,
        MdbTimePickerModule,
        LightBoxModule,
        SidenavModule,
        ChartSimpleModule,
        AccordionModule,
        StickyContentModule,
        SmoothscrollModule,
        CharCounterModule,
        ScrollSpyModule,
        AutoFormatModule,
        RangeModule,
        AutoCompleterModule,
        StepperModule,
        MdbTreeModule,
        MdbSelectModule,
        MdbOptionModule] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MDBRootModulePro, { imports: function () { return [ɵngcc1.AnimatedCardsModule, ChipsModule, ɵngcc2.PreloadersModule, ɵngcc3.TabsModule, SelectModule,
        DatepickerModule,
        TimePickerModule,
        MdbTimePickerModule,
        LightBoxModule,
        SidenavModule,
        ChartSimpleModule,
        AccordionModule,
        StickyContentModule, ɵngcc4.SmoothscrollModule, ɵngcc5.CharCounterModule, ScrollSpyModule,
        AutoFormatModule,
        RangeModule,
        AutoCompleterModule,
        StepperModule,
        MdbTreeModule,
        MdbSelectModule,
        MdbOptionModule]; }, exports: function () { return [AnimatedCardsModule,
        FileInputModule,
        ChipsModule,
        // tslint:disable-next-line: deprecation
        ProgressBars,
        TabsModule,
        SelectModule,
        DatepickerModule,
        TimePickerModule,
        MdbTimePickerModule,
        LightBoxModule,
        SidenavModule,
        ChartSimpleModule,
        AccordionModule,
        StickyContentModule,
        SmoothscrollModule,
        CharCounterModule,
        ScrollSpyModule,
        AutoFormatModule,
        RangeModule,
        AutoCompleterModule,
        StepperModule,
        MdbTreeModule,
        MdbSelectModule,
        MdbOptionModule]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MDBRootModulePro, [{
        type: NgModule,
        args: [{
                imports: [
                    AnimatedCardsModule.forRoot(),
                    ChipsModule,
                    // tslint:disable-next-line: deprecation
                    ProgressBars.forRoot(),
                    TabsModule.forRoot(),
                    SelectModule,
                    DatepickerModule,
                    TimePickerModule,
                    MdbTimePickerModule,
                    LightBoxModule,
                    SidenavModule,
                    ChartSimpleModule,
                    AccordionModule,
                    StickyContentModule,
                    SmoothscrollModule.forRoot(),
                    CharCounterModule.forRoot(),
                    ScrollSpyModule,
                    AutoFormatModule,
                    RangeModule,
                    AutoCompleterModule,
                    StepperModule,
                    MdbTreeModule,
                    MdbSelectModule,
                    MdbOptionModule,
                ],
                exports: [MODULES],
                providers: [],
                schemas: [NO_ERRORS_SCHEMA]
            }]
    }], function () { return []; }, null); })();
    return MDBRootModulePro;
}());
export { MDBRootModulePro };
var MDBBootstrapModulePro = /** @class */ (function () {
    function MDBBootstrapModulePro() {
    }
    MDBBootstrapModulePro.forRoot = function () {
        return { ngModule: MDBRootModulePro };
    };
MDBBootstrapModulePro.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MDBBootstrapModulePro });
MDBBootstrapModulePro.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MDBBootstrapModulePro_Factory(t) { return new (t || MDBBootstrapModulePro)(); }, imports: [AnimatedCardsModule,
        FileInputModule,
        ChipsModule,
        // tslint:disable-next-line: deprecation
        ProgressBars,
        TabsModule,
        SelectModule,
        DatepickerModule,
        TimePickerModule,
        MdbTimePickerModule,
        LightBoxModule,
        SidenavModule,
        ChartSimpleModule,
        AccordionModule,
        StickyContentModule,
        SmoothscrollModule,
        CharCounterModule,
        ScrollSpyModule,
        AutoFormatModule,
        RangeModule,
        AutoCompleterModule,
        StepperModule,
        MdbTreeModule,
        MdbSelectModule,
        MdbOptionModule] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MDBBootstrapModulePro, { exports: [AnimatedCardsModule,
        FileInputModule,
        ChipsModule,
        // tslint:disable-next-line: deprecation
        ProgressBars,
        TabsModule,
        SelectModule,
        DatepickerModule,
        TimePickerModule,
        MdbTimePickerModule,
        LightBoxModule,
        SidenavModule,
        ChartSimpleModule,
        AccordionModule,
        StickyContentModule,
        SmoothscrollModule,
        CharCounterModule,
        ScrollSpyModule,
        AutoFormatModule,
        RangeModule,
        AutoCompleterModule,
        StepperModule,
        MdbTreeModule,
        MdbSelectModule,
        MdbOptionModule] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MDBBootstrapModulePro, [{
        type: NgModule,
        args: [{ exports: [MODULES] }]
    }], function () { return []; }, null); })();
    return MDBBootstrapModulePro;
}());
export { MDBBootstrapModulePro };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,