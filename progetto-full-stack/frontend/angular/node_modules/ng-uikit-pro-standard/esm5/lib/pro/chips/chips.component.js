import { __decorate, __metadata } from "tslib";
import { Component, EventEmitter, forwardRef, Input, Output, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, ViewChild, ElementRef, } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { BACKSPACE, DELETE } from '../../free/utils/keyboard-navigation';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from '@angular/forms';

var _c0 = ["box"];
var _c1 = ["tbox"];
function MaterialChipsComponent_div_0_span_2_Template(rf, ctx) { if (rf & 1) {
    var _r7 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "span", 7);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementStart(2, "i", 8);
    ɵngcc0.ɵɵlistener("click", function MaterialChipsComponent_div_0_span_2_Template_i_click_2_listener() { ɵngcc0.ɵɵrestoreView(_r7); var value_r5 = ctx.$implicit; var ctx_r6 = ɵngcc0.ɵɵnextContext(2); return ctx_r6.removeValue(value_r5); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var value_r5 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", value_r5, " ");
} }
function MaterialChipsComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    var _r9 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 2, 3);
    ɵngcc0.ɵɵtemplate(2, MaterialChipsComponent_div_0_span_2_Template, 3, 1, "span", 4);
    ɵngcc0.ɵɵelementStart(3, "span");
    ɵngcc0.ɵɵelementStart(4, "input", 5, 6);
    ɵngcc0.ɵɵlistener("blur", function MaterialChipsComponent_div_0_Template_input_blur_4_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); var _r4 = ɵngcc0.ɵɵreference(5); var ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8.addValue(_r4.value, $event); })("ngModelChange", function MaterialChipsComponent_div_0_Template_input_ngModelChange_4_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); var ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10.labelToAdd = $event; })("keyup.enter", function MaterialChipsComponent_div_0_Template_input_keyup_enter_4_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); var _r4 = ɵngcc0.ɵɵreference(5); var ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11.addValue(_r4.value, $event); })("focus", function MaterialChipsComponent_div_0_Template_input_focus_4_listener() { ɵngcc0.ɵɵrestoreView(_r9); var ctx_r12 = ɵngcc0.ɵɵnextContext(); return ctx_r12.onFocus(); })("focusout", function MaterialChipsComponent_div_0_Template_input_focusout_4_listener() { ɵngcc0.ɵɵrestoreView(_r9); var ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13.focusOutFunction(); })("keydown", function MaterialChipsComponent_div_0_Template_input_keydown_4_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); var ctx_r14 = ɵngcc0.ɵɵnextContext(); return ctx_r14.handleKeydown($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ctx_r0.focused);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r0.values);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngModel", ctx_r0.labelToAdd);
} }
function MaterialChipsComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    var _r17 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementStart(1, "input", 9, 10);
    ɵngcc0.ɵɵlistener("blur", function MaterialChipsComponent_div_1_Template_input_blur_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r17); var _r15 = ɵngcc0.ɵɵreference(2); var ctx_r16 = ɵngcc0.ɵɵnextContext(); return ctx_r16.addValue(_r15.value, $event); })("keyup.enter", function MaterialChipsComponent_div_1_Template_input_keyup_enter_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r17); var _r15 = ɵngcc0.ɵɵreference(2); var ctx_r18 = ɵngcc0.ɵɵnextContext(); return ctx_r18.addValue(_r15.value, $event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("placeholder", ctx_r1.placeholder);
} }
export var CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR = {
    provide: NG_VALUE_ACCESSOR,
    // tslint:disable-next-line: no-use-before-declare
    useExisting: forwardRef(function () { return MaterialChipsComponent; }),
    multi: true,
};
var MaterialChipsComponent = /** @class */ (function () {
    function MaterialChipsComponent(_cdRef) {
        this._cdRef = _cdRef;
        this.placeholder = '';
        this.isTagsFocused = false;
        this.keyCodes = {
            backspace: BACKSPACE,
            delete: DELETE,
        };
        this.tagsfocusedChange = new EventEmitter();
        this.labelsChange = new EventEmitter();
        this.onTouchedCallback = this.noop;
        this.onChangeCallback = this.noop;
        this.onTouchedCallback =
            this.onTouchedCallback === undefined ? this.noop : this.onTouchedCallback;
        this.onChangeCallback = this.onChangeCallback === undefined ? this.noop : this.onChangeCallback;
    }
    Object.defineProperty(MaterialChipsComponent.prototype, "tagsfocused", {
        get: function () {
            return this.isTagsFocused;
        },
        enumerable: true,
        configurable: true
    });
    MaterialChipsComponent.prototype.registerOnChange = function (fn) {
        this.onChangeCallback = fn;
    };
    MaterialChipsComponent.prototype.registerOnTouched = function (fn) {
        this.onTouchedCallback = fn;
    };
    MaterialChipsComponent.prototype.removeValue = function (value) {
        var index = this.values.indexOf(value, 0);
        if (index !== undefined) {
            this.values.splice(index, 1);
            this.labelsChange.emit(this.values);
        }
    };
    MaterialChipsComponent.prototype.handleKeydown = function (event) {
        if (event.keyCode === this.keyCodes.backspace || event.keyCode === this.keyCodes.delete) {
            if (event.target.value === '') {
                this._removeLast();
                event.preventDefault();
            }
        }
    };
    MaterialChipsComponent.prototype._removeLast = function () {
        var _this = this;
        var lastChip = this.values[this.values.length];
        var index = this.values.indexOf(lastChip);
        this.values.splice(index, 1);
        this.labelsChange.emit(this.values);
        if (this.values.length === 0) {
            setTimeout(function () {
                _this.initialInput.nativeElement.focus();
            }, 0);
        }
    };
    MaterialChipsComponent.prototype.addValue = function (value, event) {
        var _this = this;
        event.preventDefault();
        if (!value || value.trim() === '') {
            return;
        }
        this.values.push(value);
        this.labelsChange.emit(this.values);
        this.labelToAdd = '';
        if (this.values.length === 1) {
            setTimeout(function () {
                _this.chipsInput.nativeElement.focus();
            }, 0);
        }
    };
    MaterialChipsComponent.prototype.writeValue = function (value) {
        if (value !== this.values) {
            this.values = value;
        }
        this._cdRef.markForCheck();
    };
    MaterialChipsComponent.prototype.onFocus = function () {
        this.focused = 'md-focused';
        this.isTagsFocused = true;
        this.tagsfocusedChange.emit(this.isTagsFocused);
    };
    MaterialChipsComponent.prototype.focusOutFunction = function () {
        this.focused = '';
        this.isTagsFocused = false;
        this.tagsfocusedChange.emit(this.isTagsFocused);
    };
    MaterialChipsComponent.ctorParameters = function () { return [
        { type: ChangeDetectorRef }
    ]; };
    __decorate([
        ViewChild('box'),
        __metadata("design:type", ElementRef)
    ], MaterialChipsComponent.prototype, "chipsInput", void 0);
    __decorate([
        ViewChild('tbox'),
        __metadata("design:type", ElementRef)
    ], MaterialChipsComponent.prototype, "initialInput", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], MaterialChipsComponent.prototype, "placeholder", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], MaterialChipsComponent.prototype, "tagsfocusedChange", void 0);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], MaterialChipsComponent.prototype, "labelsChange", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [])
    ], MaterialChipsComponent.prototype, "tagsfocused", null);
    MaterialChipsComponent = __decorate([ __metadata("design:paramtypes", [ChangeDetectorRef])
    ], MaterialChipsComponent);
MaterialChipsComponent.ɵfac = function MaterialChipsComponent_Factory(t) { return new (t || MaterialChipsComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };
MaterialChipsComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MaterialChipsComponent, selectors: [["mdb-material-chips"]], viewQuery: function MaterialChipsComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c0, true);
        ɵngcc0.ɵɵviewQuery(_c1, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chipsInput = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.initialInput = _t.first);
    } }, inputs: { placeholder: "placeholder", tagsfocused: "tagsfocused" }, outputs: { tagsfocusedChange: "tagsfocusedChange", labelsChange: "labelsChange" }, features: [ɵngcc0.ɵɵProvidersFeature([CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR])], decls: 2, vars: 2, consts: [["class", "md-chip-list", 3, "ngClass", 4, "ngIf"], [4, "ngIf"], [1, "md-chip-list", 3, "ngClass"], ["chipComponent", ""], ["class", "md-chip", "selected", "", 4, "ngFor", "ngForOf"], [3, "ngModel", "blur", "ngModelChange", "keyup.enter", "focus", "focusout", "keydown"], ["box", ""], ["selected", "", 1, "md-chip"], ["aria-hidden", "true", 1, "close", "fas", "fa-times", 3, "click"], [1, "md-chips-input", 3, "placeholder", "blur", "keyup.enter"], ["tbox", ""]], template: function MaterialChipsComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, MaterialChipsComponent_div_0_Template, 6, 3, "div", 0);
        ɵngcc0.ɵɵtemplate(1, MaterialChipsComponent_div_1_Template, 3, 1, "div", 1);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.values && ctx.values.length);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.values || !ctx.values.length);
    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgClass, ɵngcc1.NgForOf, ɵngcc2.DefaultValueAccessor, ɵngcc2.NgControlStatus, ɵngcc2.NgModel], encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MaterialChipsComponent, [{
        type: Component,
        args: [{
                selector: 'mdb-material-chips',
                template: "<div *ngIf=\"values && values.length\" class=\"md-chip-list\" [ngClass]=\"focused\" #chipComponent>\n  <span *ngFor=\"let value of values\" class=\"md-chip\" selected>\n    {{ value }} <i class=\"close fas fa-times\" aria-hidden=\"true\" (click)=\"removeValue(value)\"></i>\n  </span>\n\n  <span>\n    <input\n      (blur)=\"addValue(box.value, $event)\"\n      [(ngModel)]=\"labelToAdd\"\n      (keyup.enter)=\"addValue(box.value, $event)\"\n      (focus)=\"onFocus()\"\n      (focusout)=\"focusOutFunction()\"\n      (keydown)=\"handleKeydown($event)\"\n      #box\n    />\n  </span>\n</div>\n<div *ngIf=\"!values || !values.length\">\n  <input\n    (blur)=\"addValue(tbox.value, $event)\"\n    class=\"md-chips-input\"\n    placeholder=\"{{ placeholder }}\"\n    #tbox\n    (keyup.enter)=\"addValue(tbox.value, $event)\"\n  />\n</div>\n",
                encapsulation: ViewEncapsulation.None,
                providers: [CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR],
                changeDetection: ChangeDetectionStrategy.OnPush
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }]; }, { placeholder: [{
            type: Input
        }], tagsfocusedChange: [{
            type: Output
        }], labelsChange: [{
            type: Output
        }], tagsfocused: [{
            type: Input
        }], chipsInput: [{
            type: ViewChild,
            args: ['box']
        }], initialInput: [{
            type: ViewChild,
            args: ['tbox']
        }] }); })();
    return MaterialChipsComponent;
}());
export { MaterialChipsComponent };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,