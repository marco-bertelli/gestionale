import { __decorate, __metadata } from "tslib";
import { Component, Input, ViewEncapsulation, ChangeDetectionStrategy, } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from './chart-smallpie.component';

var _c0 = function (a0, a1, a2) { return { "line-height": a0, "width": a1, "height": a2 }; };
function SimpleChartComponent_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 4);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngStyle", ɵngcc0.ɵɵpureFunction3(2, _c0, ctx_r0.size + "px", ctx_r0.size + "px", ctx_r0.size + "px"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r0.customText);
} }
function SimpleChartComponent_span_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 5);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r1.percent);
} }
var SimpleChartComponent = /** @class */ (function () {
    function SimpleChartComponent() {
        this.options = {
            barColor: null,
            trackColor: null,
            scaleColor: null,
            scaleLength: '',
            lineCap: null,
            lineWidth: null,
            trackWidth: null,
            size: null,
            rotate: null,
            duration: null,
            enableAnimation: null,
            animate: {
                duration: 1000,
                enabled: true,
            },
        };
    }
    SimpleChartComponent.prototype.ngOnInit = function () {
        this.options.barColor = '#' + this.barColor;
        this.options.trackColor = '#' + this.trackColor;
        this.options.scaleColor = '#' + this.scaleColor;
        this.options.scaleLength = this.scaleLength;
        this.options.lineCap = this.lineCap;
        this.options.lineWidth = this.lineWidth;
        this.options.trackWidth = this.trackWidth;
        this.options.size = this.size;
        this.options.rotate = this.rotate;
        this.options.animate.duration = this.animate.duration;
        this.options.animate.enabled = this.animate.enabled;
    };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SimpleChartComponent.prototype, "customText", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], SimpleChartComponent.prototype, "percent", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SimpleChartComponent.prototype, "barColor", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SimpleChartComponent.prototype, "trackColor", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SimpleChartComponent.prototype, "scaleColor", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], SimpleChartComponent.prototype, "scaleLength", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SimpleChartComponent.prototype, "lineCap", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], SimpleChartComponent.prototype, "lineWidth", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], SimpleChartComponent.prototype, "trackWidth", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], SimpleChartComponent.prototype, "size", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], SimpleChartComponent.prototype, "rotate", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], SimpleChartComponent.prototype, "animate", void 0);
    SimpleChartComponent = __decorate([ __metadata("design:paramtypes", [])
    ], SimpleChartComponent);
SimpleChartComponent.ɵfac = function SimpleChartComponent_Factory(t) { return new (t || SimpleChartComponent)(); };
SimpleChartComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SimpleChartComponent, selectors: [["mdb-simple-chart"]], inputs: { customText: "customText", percent: "percent", barColor: "barColor", trackColor: "trackColor", scaleColor: "scaleColor", scaleLength: "scaleLength", lineCap: "lineCap", lineWidth: "lineWidth", trackWidth: "trackWidth", size: "size", rotate: "rotate", animate: "animate" }, decls: 4, vars: 4, consts: [[1, "min-chart"], ["class", "chart-custom-text", 3, "ngStyle", 4, "ngIf"], ["class", "percent", 4, "ngIf"], [3, "percent", "options"], [1, "chart-custom-text", 3, "ngStyle"], [1, "percent"]], template: function SimpleChartComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "span", 0);
        ɵngcc0.ɵɵtemplate(1, SimpleChartComponent_span_1_Template, 2, 6, "span", 1);
        ɵngcc0.ɵɵtemplate(2, SimpleChartComponent_span_2_Template, 2, 1, "span", 2);
        ɵngcc0.ɵɵelement(3, "mdb-easy-pie-chart", 3);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.customText);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.customText);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("percent", ctx.percent)("options", ctx.options);
    } }, directives: [ɵngcc1.NgIf, ɵngcc2.EasyPieChartComponent, ɵngcc1.NgStyle], styles: [".min-chart{position:relative;display:inline-block;width:110px;height:110px;margin-top:50px;margin-bottom:50px;text-align:center}.min-chart canvas{position:absolute;top:0;left:0}.min-chart .percent{display:inline-block;line-height:110px;z-index:2}.min-chart .percent:after{content:\"%\";margin-left:.1em;font-size:.8rem}.chart-custom-text{display:inline-block;overflow:hidden;z-index:2}"], encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SimpleChartComponent, [{
        type: Component,
        args: [{
                selector: 'mdb-simple-chart',
                template: "<span class=\"min-chart\">\n  <span \n  *ngIf=\"customText\"  \n  class=\"chart-custom-text\"\n  [ngStyle]=\"{\n  'line-height': size + 'px',\n  'width': size + 'px',\n  'height': size + 'px'}\">{{ customText }}</span>\n  <span \n  *ngIf=\"!customText\" \n  class=\"percent\">{{ percent }}</span>\n  <mdb-easy-pie-chart [percent]=\"percent\" [options]=\"options\"></mdb-easy-pie-chart>\n</span>",
                encapsulation: ViewEncapsulation.None,
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [".min-chart{position:relative;display:inline-block;width:110px;height:110px;margin-top:50px;margin-bottom:50px;text-align:center}.min-chart canvas{position:absolute;top:0;left:0}.min-chart .percent{display:inline-block;line-height:110px;z-index:2}.min-chart .percent:after{content:\"%\";margin-left:.1em;font-size:.8rem}.chart-custom-text{display:inline-block;overflow:hidden;z-index:2}"]
            }]
    }], function () { return []; }, { customText: [{
            type: Input
        }], percent: [{
            type: Input
        }], barColor: [{
            type: Input
        }], trackColor: [{
            type: Input
        }], scaleColor: [{
            type: Input
        }], scaleLength: [{
            type: Input
        }], lineCap: [{
            type: Input
        }], lineWidth: [{
            type: Input
        }], trackWidth: [{
            type: Input
        }], size: [{
            type: Input
        }], rotate: [{
            type: Input
        }], animate: [{
            type: Input
        }] }); })();
    return SimpleChartComponent;
}());
export { SimpleChartComponent };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hhcnQtc2ltcGxlLmNvbXBvbmVudC5qcyIsInNvdXJjZXMiOlsibmctdWlraXQtcHJvLXN0YW5kYXJkL2xpYi9wcm8vZWFzeS1jaGFydHMvY2hhcnQtc2ltcGxlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUNMLFNBQVMsRUFDVCxLQUFLLEVBRUwsaUJBQWlCLEVBQ2pCLHVCQUF1QixHQUN4QixNQUFNLGVBQWUsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQVN2QjtBQUNHLElBOEJEO0FBR0EsUUFyQk8sWUFBTyxHQUFRO0FBQ3ZCLFlBQUcsUUFBUSxFQUFFLElBQUk7QUFDakIsWUFBRyxVQUFVLEVBQUUsSUFBSTtBQUNuQixZQUFHLFVBQVUsRUFBRSxJQUFJO0FBQ25CLFlBQUcsV0FBVyxFQUFFLEVBQUU7QUFDbEIsWUFBRyxPQUFPLEVBQUUsSUFBSTtBQUNoQixZQUFHLFNBQVMsRUFBRSxJQUFJO0FBQ2xCLFlBQUcsVUFBVSxFQUFFLElBQUk7QUFDbkIsWUFBRyxJQUFJLEVBQUUsSUFBSTtBQUNiLFlBQUcsTUFBTSxFQUFFLElBQUk7QUFDZixZQUFHLFFBQVEsRUFBRSxJQUFJO0FBQ2pCLFlBQUcsZUFBZSxFQUFFLElBQUk7QUFDeEIsWUFBRyxPQUFPLEVBQUU7QUFDWixnQkFBSyxRQUFRLEVBQUUsSUFBSTtBQUNuQixnQkFBSyxPQUFPLEVBQUUsSUFBSTtBQUNsQixhQUFJO0FBQ0osU0FBRSxDQUFDO0FBRUosSUFBaUIsQ0FBQztBQUVsQixJQUFFLHVDQUFRLEdBQVI7QUFDQSxRQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxHQUFHLEdBQUcsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDO0FBQy9DLFFBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxVQUFVLEdBQUcsR0FBRyxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUM7QUFDbkQsUUFBRyxJQUFJLENBQUMsT0FBTyxDQUFDLFVBQVUsR0FBRyxHQUFH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Q0EsQUFBQSxBQUVBLEFBQUEsQUFFQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBNUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQVpBLEFBQUEsQUFQQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFFQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQThDQSxBQUFBLEFBQUEsQUFBQSxBQTlDQSxBQThDQSxBQTlDQSxBQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQ29tcG9uZW50LFxuICBJbnB1dCxcbiAgT25Jbml0LFxuICBWaWV3RW5jYXBzdWxhdGlvbixcbiAgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdtZGItc2ltcGxlLWNoYXJ0JyxcbiAgdGVtcGxhdGVVcmw6ICcuL2NoYXJ0LXNpbXBsZS5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL2Vhc3ktY2hhcnRzLW1vZHVsZS5zY3NzJ10sXG4gIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmUsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxufSlcbmV4cG9ydCBjbGFzcyBTaW1wbGVDaGFydENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIEBJbnB1dCgpIGN1c3RvbVRleHQ6IHN0cmluZztcbiAgQElucHV0KCkgcGVyY2VudDogbnVtYmVyO1xuICBASW5wdXQoKSBiYXJDb2xvcjogc3RyaW5nO1xuICBASW5wdXQoKSB0cmFja0NvbG9yOiBzdHJpbmc7XG4gIEBJbnB1dCgpIHNjYWxlQ29sb3I6IHN0cmluZztcbiAgQElucHV0KCkgc2NhbGVMZW5ndGg6IG51bWJlcjtcbiAgQElucHV0KCkgbGluZUNhcDogc3RyaW5nO1xuICBASW5wdXQoKSBsaW5lV2lkdGg6IG51bWJlcjtcbiAgQElucHV0KCkgdHJhY2tXaWR0aDogbnVtYmVyO1xuICBASW5wdXQoKSBzaXplOiBudW1iZXI7XG4gIEBJbnB1dCgpIHJvdGF0ZTogbnVtYmVyO1xuICBASW5wdXQoKSBhbmltYXRlOiB7IGR1cmF0aW9uOiBzdHJpbmc7IGVuYWJsZWQ6IGJvb2xlYW4gfTtcbiAgcHVibGljIG9wdGlvbnM6IGFueSA9IHtcbiAgICBiYXJDb2xvcjogbnVsbCxcbiAgICB0cmFja0NvbG9yOiBudWxsLFxuICAgIHNjYWxlQ29sb3I6IG51bGwsXG4gICAgc2NhbGVMZW5ndGg6ICcnLFxuICAgIGxpbmVDYXA6IG51bGwsXG4gICAgbGluZVdpZHRoOiBudWxsLFxuICAgIHRyYWNrV2lkdGg6IG51bGwsXG4gICAgc2l6ZTogbnVsbCxcbiAgICByb3RhdGU6IG51bGwsXG4gICAgZHVyYXRpb246IG51bGwsXG4gICAgZW5hYmxlQW5pbWF0aW9uOiBudWxsLFxuICAgIGFuaW1hdGU6IHtcbiAgICAgIGR1cmF0aW9uOiAxMDAwLFxuICAgICAgZW5hYmxlZDogdHJ1ZSxcbiAgICB9LFxuICB9O1xuXG4gIGNvbnN0cnVjdG9yKCkge31cblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLm9wdGlvbnMuYmFyQ29sb3IgPSAnIycgKyB0aGlzLmJhckNvbG9yO1xuICAgIHRoaXMub3B0aW9ucy50cmFja0NvbG9yID0gJyMnICsgdGhpcy50cmFja0NvbG9yO1xuICAgIHRoaXMub3B0aW9ucy5zY2FsZUNvbG9yID0gJyMnICsgdGhpcy5zY2FsZUNvbG9yO1xuICAgIHRoaXMub3B0aW9ucy5zY2FsZUxlbmd0aCA9IHRoaXMuc2NhbGVMZW5ndGg7XG4gICAgdGhpcy5vcHRpb25zLmxpbmVDYXAgPSB0aGlzLmxpbmVDYXA7XG4gICAgdGhpcy5vcHRpb25zLmxpbmVXaWR0aCA9IHRoaXMubGluZVdpZHRoO1xuICAgIHRoaXMub3B0aW9ucy50cmFja1dpZHRoID0gdGhpcy50cmFja1dpZHRoO1xuICAgIHRoaXMub3B0aW9ucy5zaXplID0gdGhpcy5zaXplO1xuICAgIHRoaXMub3B0aW9ucy5yb3RhdGUgPSB0aGlzLnJvdGF0ZTtcbiAgICB0aGlzLm9wdGlvbnMuYW5pbWF0ZS5kdXJhdGlvbiA9IHRoaXMuYW5pbWF0ZS5kdXJhdGlvbjtcbiAgICB0aGlzLm9wdGlvbnMuYW5pbWF0ZS5lbmFibGVkID0gdGhpcy5hbmltYXRlLmVuYWJsZWQ7XG4gIH1cbn1cbiJdfQ==