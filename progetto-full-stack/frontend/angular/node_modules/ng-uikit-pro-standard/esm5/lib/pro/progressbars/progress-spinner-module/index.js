import { __decorate } from "tslib";
import { NgModule } from '@angular/core';
import { MdProgressSpinnerComponent, MdSpinnerComponent, MdProgressSpinnerCssMatStylerDirective, } from './progress-spinner.component';
import { ProgressSpinnerComponent } from '../progress-spinner.component';
import * as ɵngcc0 from '@angular/core';
var MdProgressSpinnerModule = /** @class */ (function () {
    function MdProgressSpinnerModule() {
    }
    MdProgressSpinnerModule_1 = MdProgressSpinnerModule;
    MdProgressSpinnerModule.forRoot = function () {
        return {
            ngModule: MdProgressSpinnerModule_1,
            providers: [],
        };
    };
    var MdProgressSpinnerModule_1;
MdProgressSpinnerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MdProgressSpinnerModule });
MdProgressSpinnerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MdProgressSpinnerModule_Factory(t) { return new (t || MdProgressSpinnerModule)(); } });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MdProgressSpinnerModule, { declarations: function () { return [MdProgressSpinnerComponent,
        MdSpinnerComponent,
        MdProgressSpinnerCssMatStylerDirective,
        ProgressSpinnerComponent]; }, exports: function () { return [MdProgressSpinnerComponent,
        MdSpinnerComponent,
        MdProgressSpinnerCssMatStylerDirective,
        ProgressSpinnerComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MdProgressSpinnerModule, [{
        type: NgModule,
        args: [{
                exports: [
                    MdProgressSpinnerComponent,
                    MdSpinnerComponent,
                    MdProgressSpinnerCssMatStylerDirective,
                    ProgressSpinnerComponent,
                ],
                declarations: [
                    MdProgressSpinnerComponent,
                    MdSpinnerComponent,
                    MdProgressSpinnerCssMatStylerDirective,
                    ProgressSpinnerComponent,
                ]
            }]
    }], function () { return []; }, null); })();
    return MdProgressSpinnerModule;
}());
export { MdProgressSpinnerModule };
export { MdProgressSpinnerCssMatStylerDirective, MdProgressSpinnerComponent, MdSpinnerComponent, } from './progress-spinner.component';
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzIjpbIm5nLXVpa2l0LXByby1zdGFuZGFyZC9saWIvcHJvL3Byb2dyZXNzYmFycy9wcm9ncmVzcy1zcGlubmVyLW1vZHVsZS9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBdUIsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUNMLDBCQUEwQixFQUMxQixrQkFBa0IsRUFDbEIsc0NBQXNDLEdBQ3ZDLE1BQU0sOEJBQThCLENBQUM7QUFFdEMsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sK0JBQStCLENBQUM7O0FBZ0J6RTtBQUM0QixJQUQ1QjtBQUNNLElBTU4sQ0FBQztBQUVELGdDQVRNLHVCQUF1QjtBQUM3QixJQUFTLCtCQUFPLEdBQWQ7QUFBZSxRQUNiLE9BQU87QUFDVixZQUFLLFFBQVEsRUFBRSx5QkFBdUI7QUFDdEMsWUFBSyxTQUFTLEVBQUUsRUFBRTtBQUNsQixTQUFJLENBQUM7QUFDTCxJQUFDLENBQUM7QUFFSDtLQVJNLHVCQUF1QixxREFkNUIsUUFBUSxDQUFDO2NBQ1IsT0FBTyxFQUFFLG1CQUNQLDBCQUEwQixtQkFDMUIsa0JBQWtCLG1CQUNsQixzQ0FBc0M7a0JBQ3RDLHdCQUF3QixnQkFDekIsZUFDRCxZQUFZLEVBQUUsbUJBQ1osMEJBQTBCLG1CQUMxQixrQkFBa0I7S0FDbEI7ZUFBc0MsbUJBQ3RDO1VBQXdCLGdCQUN6QixZQUNGLENBQUMsU0FDSSx1QkFBdUIsQ0FPNUI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2dEQUNEO0FBQ0MsSUFGRCw4QkFBQztBQUVBLENBRkEsQUFQRCxJQU9DO0FBRUQsT0FBTyxFQUFFLHVCQUF1QixFQUFFLENBQUM7O0FBaENBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFFQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBZ0JBLEFBQUEsQUFPQSxBQUFBLEFBUEEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFOQSxBQUFBLEFBZEEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQ0EsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFPQSxBQUFBLEFBQUEsQUFBQSxBQVBBLEFBT0EsQUFFQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBRUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSwgTW9kdWxlV2l0aFByb3ZpZGVycyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtcbiAgTWRQcm9ncmVzc1NwaW5uZXJDb21wb25lbnQsXG4gIE1kU3Bpbm5lckNvbXBvbmVudCxcbiAgTWRQcm9ncmVzc1NwaW5uZXJDc3NNYXRTdHlsZXJEaXJlY3RpdmUsXG59IGZyb20gJy4vcHJvZ3Jlc3Mtc3Bpbm5lci5jb21wb25lbnQnO1xuXG5pbXBvcnQgeyBQcm9ncmVzc1NwaW5uZXJDb21wb25lbnQgfSBmcm9tICcuLi9wcm9ncmVzcy1zcGlubmVyLmNvbXBvbmVudCc7XG5cbkBOZ01vZHVsZSh7XG4gIGV4cG9ydHM6IFtcbiAgICBNZFByb2dyZXNzU3Bpbm5lckNvbXBvbmVudCxcbiAgICBNZFNwaW5uZXJDb21wb25lbnQsXG4gICAgTWRQcm9ncmVzc1NwaW5uZXJDc3NNYXRTdHlsZXJEaXJlY3RpdmUsXG4gICAgUHJvZ3Jlc3NTcGlubmVyQ29tcG9uZW50LFxuICBdLFxuICBkZWNsYXJhdGlvbnM6IFtcbiAgICBNZFByb2dyZXNzU3Bpbm5lckNvbXBvbmVudCxcbiAgICBNZFNwaW5uZXJDb21wb25lbnQsXG4gICAgTWRQcm9ncmVzc1NwaW5uZXJDc3NNYXRTdHlsZXJEaXJlY3RpdmUsXG4gICAgUHJvZ3Jlc3NTcGlubmVyQ29tcG9uZW50LFxuICBdLFxufSlcbmNsYXNzIE1kUHJvZ3Jlc3NTcGlubmVyTW9kdWxlIHtcbiAgc3RhdGljIGZvclJvb3QoKTogTW9kdWxlV2l0aFByb3ZpZGVyczxNZFByb2dyZXNzU3Bpbm5lck1vZHVsZT4ge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogTWRQcm9ncmVzc1NwaW5uZXJNb2R1bGUsXG4gICAgICBwcm92aWRlcnM6IFtdLFxuICAgIH07XG4gIH1cbn1cblxuZXhwb3J0IHsgTWRQcm9ncmVzc1NwaW5uZXJNb2R1bGUgfTtcbmV4cG9ydCB7XG4gIFByb2dyZXNzU3Bpbm5lck1vZGUsXG4gIE1kUHJvZ3Jlc3NTcGlubmVyQ3NzTWF0U3R5bGVyRGlyZWN0aXZlLFxuICBNZFByb2dyZXNzU3Bpbm5lckNvbXBvbmVudCxcbiAgTWRTcGlubmVyQ29tcG9uZW50LFxufSBmcm9tICcuL3Byb2dyZXNzLXNwaW5uZXIuY29tcG9uZW50JztcbiJdfQ==