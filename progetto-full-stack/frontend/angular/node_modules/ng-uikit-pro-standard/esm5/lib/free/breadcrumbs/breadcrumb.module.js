import { __decorate } from "tslib";
import { CommonModule } from '@angular/common';
import { MdbBreadcrumbComponent } from './mdb-breadcrumb.component';
import { MdbBreadcrumbItemComponent } from './mdb-breadcrumb-item.component';
import { NgModule } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
var BreadcrumbModule = /** @class */ (function () {
    function BreadcrumbModule() {
    }
BreadcrumbModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: BreadcrumbModule });
BreadcrumbModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function BreadcrumbModule_Factory(t) { return new (t || BreadcrumbModule)(); }, imports: [[CommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BreadcrumbModule, { declarations: function () { return [MdbBreadcrumbComponent, MdbBreadcrumbItemComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [MdbBreadcrumbComponent, MdbBreadcrumbItemComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BreadcrumbModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule],
                declarations: [MdbBreadcrumbComponent, MdbBreadcrumbItemComponent],
                exports: [MdbBreadcrumbComponent, MdbBreadcrumbItemComponent]
            }]
    }], function () { return []; }, null); })();
    return BreadcrumbModule;
}());
export { BreadcrumbModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnJlYWRjcnVtYi5tb2R1bGUuanMiLCJzb3VyY2VzIjpbIm5nLXVpa2l0LXByby1zdGFuZGFyZC9saWIvZnJlZS9icmVhZGNydW1icy9icmVhZGNydW1iLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQ3BFLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQzdFLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7O0FBU3pDO0FBR2tCLElBSGxCO0FBQStCLElBRS9CLENBQUM7S0FGWSxnQkFBZ0IseUJBTjVCLFFBQVEsQ0FBQyxlQUNOO0FBQU8sRUFBRSxDQUFDLFlBQVksQ0FBQyxlQUN2QixZQUFZLEVBQUUsQ0FBQyxzQkFBc0IsRUFBRSwwQkFBMEIsQ0FBQyxlQUNsRSxPQUFPLEVBQUUsQ0FBQyxzQkFBc0IsRUFBRTtHQUEwQixDQUFDLFdBQ2hFLENBQUMsU0FFVyxnQkFBZ0IsQ0FFNUI7Ozs7Ozs7O2dEQUNEO0FBQUUsSUFERix1QkFBQztBQUNDLENBREQsQUFGRCxJQUVDOztBQWRBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFTQSxBQUFBLEFBRUEsQUFBQSxBQUZBLEFBQUEsQUFOQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFFQSxBQUFBLEFBRUEsQUFBQSxBQUFBLEFBQUEsQUFGQSxBQUVBLEFBRkEsQUFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBNZGJCcmVhZGNydW1iQ29tcG9uZW50IH0gZnJvbSAnLi9tZGItYnJlYWRjcnVtYi5jb21wb25lbnQnO1xuaW1wb3J0IHsgTWRiQnJlYWRjcnVtYkl0ZW1Db21wb25lbnQgfSBmcm9tICcuL21kYi1icmVhZGNydW1iLWl0ZW0uY29tcG9uZW50JztcbmltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cblxuQE5nTW9kdWxlKHtcbiAgICBpbXBvcnRzOiBbQ29tbW9uTW9kdWxlXSxcbiAgICBkZWNsYXJhdGlvbnM6IFtNZGJCcmVhZGNydW1iQ29tcG9uZW50LCBNZGJCcmVhZGNydW1iSXRlbUNvbXBvbmVudF0sXG4gICAgZXhwb3J0czogW01kYkJyZWFkY3J1bWJDb21wb25lbnQsIE1kYkJyZWFkY3J1bWJJdGVtQ29tcG9uZW50XVxufSlcblxuZXhwb3J0IGNsYXNzIEJyZWFkY3J1bWJNb2R1bGUge1xuXG59XG4iXX0=