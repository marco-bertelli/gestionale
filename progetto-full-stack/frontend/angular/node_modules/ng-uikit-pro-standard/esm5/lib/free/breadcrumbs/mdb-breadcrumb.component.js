import { __decorate, __metadata } from "tslib";
import { Component, Input, ChangeDetectionStrategy } from '@angular/core';
import * as ɵngcc0 from '@angular/core';

var _c0 = ["*"];
var MdbBreadcrumbComponent = /** @class */ (function () {
    function MdbBreadcrumbComponent() {
    }
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], MdbBreadcrumbComponent.prototype, "customClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], MdbBreadcrumbComponent.prototype, "textTransform", void 0);
MdbBreadcrumbComponent.ɵfac = function MdbBreadcrumbComponent_Factory(t) { return new (t || MdbBreadcrumbComponent)(); };
MdbBreadcrumbComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MdbBreadcrumbComponent, selectors: [["mdb-breadcrumb"]], inputs: { customClass: "customClass", textTransform: "textTransform" }, ngContentSelectors: _c0, decls: 2, vars: 4, template: function MdbBreadcrumbComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "ol");
        ɵngcc0.ɵɵprojection(1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵclassMapInterpolate2("breadcrumb list-inline list-unstyled ", ctx.customClass, " text-", ctx.textTransform, "");
    } }, encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MdbBreadcrumbComponent, [{
        type: Component,
        args: [{
                selector: 'mdb-breadcrumb',
                template: "<ol class=\"breadcrumb list-inline list-unstyled {{customClass}} text-{{textTransform}}\">\n  <ng-content></ng-content>\n</ol>\n",
                changeDetection: ChangeDetectionStrategy.OnPush
            }]
    }], function () { return []; }, { customClass: [{
            type: Input
        }], textTransform: [{
            type: Input
        }] }); })();
    return MdbBreadcrumbComponent;
}());
export { MdbBreadcrumbComponent };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWRiLWJyZWFkY3J1bWIuY29tcG9uZW50LmpzIiwic291cmNlcyI6WyJuZy11aWtpdC1wcm8tc3RhbmRhcmQvbGliL2ZyZWUvYnJlYWRjcnVtYnMvbWRiLWJyZWFkY3J1bWIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSx1QkFBdUIsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7OztBQU8xRTtBQUNxQixJQURyQjtBQUFxQyxJQUdyQyxDQUFDO0FBQ0EsSUFIVTtBQUFjLFFBQXRCLEtBQUssRUFBRTtBQUFHO0FBQ1csK0RBRE87QUFDN0IsSUFBUztBQUFjLFFBQXRCLEtBQUssRUFBRTtBQUFHO0FBRU8saUVBRmE7S0FGcEIsc0JBQXNCLHlCQUxsQyxTQUFTLENBQUMsZUFDVCxRQUFRLEVBQUUsZ0JBQWdCLGVBQzFCO3dJQUE4QyxlQUM5QyxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTSxXQUNoRCxDQUFDLFNBQ1csc0JBQXNCLENBR2xDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O29CQUNEO0FBQUUsSUFERiw2QkFBQztBQUNDLENBREQsQUFIRCxJQUdDOztBQVZBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQU9BLEFBQUEsQUFHQSxBQUFBLEFBRkEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFGQSxBQUFBLEFBTEEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFHQSxBQUFBLEFBQUEsQUFBQSxBQUhBLEFBR0EsQUFIQSxBQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbWRiLWJyZWFkY3J1bWInLFxuICB0ZW1wbGF0ZVVybDogJy4vbWRiLWJyZWFkY3J1bWIuY29tcG9uZW50Lmh0bWwnLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbn0pXG5leHBvcnQgY2xhc3MgTWRiQnJlYWRjcnVtYkNvbXBvbmVudCB7XG4gIEBJbnB1dCgpIGN1c3RvbUNsYXNzOiBzdHJpbmc7XG4gIEBJbnB1dCgpIHRleHRUcmFuc2Zvcm06IHN0cmluZztcbn1cbiJdfQ==