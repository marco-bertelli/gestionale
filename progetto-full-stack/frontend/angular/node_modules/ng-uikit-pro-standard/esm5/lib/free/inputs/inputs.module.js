import { __decorate } from "tslib";
import { NgModule, NO_ERRORS_SCHEMA } from '@angular/core';
import { EqualValidatorDirective } from './equal-validator.directive';
import { MdbInputDirective } from './mdb-input.directive';
import { MdbInput } from './input.directive';
import * as ɵngcc0 from '@angular/core';
var InputsModule = /** @class */ (function () {
    function InputsModule() {
    }
    InputsModule_1 = InputsModule;
    InputsModule.forRoot = function () {
        return { ngModule: InputsModule_1, providers: [] };
    };
    var InputsModule_1;
InputsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: InputsModule });
InputsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function InputsModule_Factory(t) { return new (t || InputsModule)(); } });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(InputsModule, { declarations: function () { return [MdbInput, MdbInputDirective, EqualValidatorDirective]; }, exports: function () { return [MdbInput, MdbInputDirective, EqualValidatorDirective]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(InputsModule, [{
        type: NgModule,
        args: [{
                declarations: [MdbInput, MdbInputDirective, EqualValidatorDirective],
                exports: [MdbInput, MdbInputDirective, EqualValidatorDirective],
                schemas: [NO_ERRORS_SCHEMA]
            }]
    }], function () { return []; }, null); })();
    return InputsModule;
}());
export { InputsModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXRzLm1vZHVsZS5qcyIsInNvdXJjZXMiOlsibmctdWlraXQtcHJvLXN0YW5kYXJkL2xpYi9mcmVlL2lucHV0cy9pbnB1dHMubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsUUFBUSxFQUF1QixnQkFBZ0IsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNoRixPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUN0RSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUMxRCxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7O0FBTzdDO0FBQ3FCLElBRHJCO0FBQTJCLElBSTNCLENBQUM7QUFDQSxxQkFMWSxZQUFZO0FBQ3pCLElBQWdCLG9CQUFPLEdBQXJCO0FBQWUsUUFDYixPQUFPLEVBQUUsUUFBUSxFQUFFLGNBQVksRUFBRSxTQUFTLEVBQUUsRUFBRSxFQUFFLENBQUM7QUFDcEQsSUFBQyxDQUFDO0FBRUg7S0FMYSxZQUFZLDBDQUx4QixRQUFRLENBQUM7Y0FDUixZQUFZLEVBQUUsQ0FBQyxRQUFRLEVBQUUsaUJBQWlCLEVBQUUsdUJBQXVCLENBQUMsZUFDcEUsT0FBTyxFQUFFLENBQUMsUUFBUSxFQUFFO0lBQWlCLEVBQUUsdUJBQXVCLENBQUMsZUFDL0QsT0FBTyxFQUFFLENBQUMsZ0JBQWdCLENBQUMsWUFDNUIsQ0FBQyxTQUNXLFlBQVksQ0FJeEI7Ozs7Ozs7O2dEQUNEO0FBQUUsSUFERixtQkFBQztBQUNDLENBREQsQUFKRCxJQUlDOztBQWRBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBT0EsQUFBQSxBQUlBLEFBQUEsQUFKQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUhBLEFBQUEsQUFMQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFJQSxBQUFBLEFBQUEsQUFBQSxBQUpBLEFBSUEsQUFKQSxBQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUsIE1vZHVsZVdpdGhQcm92aWRlcnMsIE5PX0VSUk9SU19TQ0hFTUEgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEVxdWFsVmFsaWRhdG9yRGlyZWN0aXZlIH0gZnJvbSAnLi9lcXVhbC12YWxpZGF0b3IuZGlyZWN0aXZlJztcbmltcG9ydCB7IE1kYklucHV0RGlyZWN0aXZlIH0gZnJvbSAnLi9tZGItaW5wdXQuZGlyZWN0aXZlJztcbmltcG9ydCB7IE1kYklucHV0IH0gZnJvbSAnLi9pbnB1dC5kaXJlY3RpdmUnO1xuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtNZGJJbnB1dCwgTWRiSW5wdXREaXJlY3RpdmUsIEVxdWFsVmFsaWRhdG9yRGlyZWN0aXZlXSxcbiAgZXhwb3J0czogW01kYklucHV0LCBNZGJJbnB1dERpcmVjdGl2ZSwgRXF1YWxWYWxpZGF0b3JEaXJlY3RpdmVdLFxuICBzY2hlbWFzOiBbTk9fRVJST1JTX1NDSEVNQV0sXG59KVxuZXhwb3J0IGNsYXNzIElucHV0c01vZHVsZSB7XG4gIHB1YmxpYyBzdGF0aWMgZm9yUm9vdCgpOiBNb2R1bGVXaXRoUHJvdmlkZXJzPElucHV0c01vZHVsZT4ge1xuICAgIHJldHVybiB7IG5nTW9kdWxlOiBJbnB1dHNNb2R1bGUsIHByb3ZpZGVyczogW10gfTtcbiAgfVxufVxuIl19