import { __decorate, __metadata } from "tslib";
import { Component, OnInit, Output, EventEmitter, Input, ChangeDetectorRef, OnChanges, SimpleChanges, AfterViewInit, OnDestroy, } from '@angular/core';
import { Observable, Subject } from 'rxjs';
import { MdbTableDirective } from '../directives/mdb-table.directive';
import { takeUntil } from 'rxjs/operators';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';

function MdbTablePaginationComponent_li_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "li");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate5(" ", ctx_r0.firstItemIndex, " ", ctx_r0.dashKeyword, " ", ctx_r0.lastVisibleItemIndex, " ", ctx_r0.ofKeyword, " ", ctx_r0.allItemsLength, " ");
} }
var _c0 = function (a0, a1) { return { "justify-content-end": a0, "justify-content-start": a1 }; };
var _c1 = function (a0) { return { disabled: a0 }; };
var MdbTablePaginationComponent = /** @class */ (function () {
    function MdbTablePaginationComponent(cdRef) {
        this.cdRef = cdRef;
        this.searchPagination = false;
        this.searchDataSource = null;
        this.ofKeyword = 'of';
        this.dashKeyword = '-';
        this.paginationAlign = '';
        this.hideDescription = false;
        this._destroy$ = new Subject();
        this.maxVisibleItems = 10;
        this.firstItemIndex = 0;
        this.lastItemIndex = this.maxVisibleItems;
        this.lastVisibleItemIndex = 5;
        this.activePageNumber = 1;
        this.allItemsLength = 0;
        this.nextShouldBeDisabled = false;
        this.previousShouldBeDisabled = true;
        this.searchText = '';
        this.pagination = new Subject();
        this.nextPageClick = new EventEmitter();
        this.previousPageClick = new EventEmitter();
        this.firstPageClick = new EventEmitter();
        this.lastPageClick = new EventEmitter();
    }
    MdbTablePaginationComponent.prototype.ngOnInit = function () {
        if (this.tableEl) {
            this.allItemsLength = this.tableEl.getDataSource().length;
        }
    };
    MdbTablePaginationComponent.prototype.ngAfterViewInit = function () {
        var _this = this;
        if (this.tableEl) {
            this.tableEl
                .dataSourceChange()
                .pipe(takeUntil(this._destroy$))
                .subscribe(function (data) {
                _this.allItemsLength = data.length;
                _this.lastVisibleItemIndex = data.length;
                _this.calculateFirstItemIndex();
                _this.calculateLastItemIndex();
                _this.disableNextButton(data);
                if (_this.searchDataSource) {
                    setTimeout(function () {
                        if (_this.searchDataSource.length !== data.length) {
                            _this.activePageNumber = 1;
                            _this.firstItemIndex = 1;
                        }
                    }, 0);
                }
            });
        }
        this.paginationChange()
            .pipe(takeUntil(this._destroy$))
            .subscribe(function (data) {
            _this.firstItemIndex = data.first;
            _this.lastVisibleItemIndex = data.last;
        });
    };
    MdbTablePaginationComponent.prototype.ngOnChanges = function (changes) {
        var searchDataSource = changes['searchDataSource'];
        if (searchDataSource.currentValue.length !== 0) {
            this.allItemsLength = searchDataSource.currentValue.length;
        }
        if (this.lastVisibleItemIndex > this.allItemsLength) {
            this.lastVisibleItemIndex = this.allItemsLength;
        }
        if (searchDataSource.currentValue.length === 0) {
            this.firstItemIndex = 0;
            this.lastItemIndex = 0;
            this.lastVisibleItemIndex = 0;
            this.allItemsLength = 0;
        }
        if (!searchDataSource.isFirstChange() &&
            searchDataSource.currentValue.length <= this.maxVisibleItems) {
            this.nextShouldBeDisabled = true;
            this.lastVisibleItemIndex = searchDataSource.currentValue.length;
        }
        else {
            this.nextShouldBeDisabled = false;
        }
    };
    MdbTablePaginationComponent.prototype.setMaxVisibleItemsNumberTo = function (value) {
        this.lastItemIndex = value;
        this.lastVisibleItemIndex = value;
        this.maxVisibleItems = value;
        this.cdRef.detectChanges();
    };
    MdbTablePaginationComponent.prototype.searchTextObs = function () {
        var _this = this;
        var observable = new Observable(function (observer) {
            observer.next(_this.searchText);
        });
        return observable;
    };
    MdbTablePaginationComponent.prototype.disableNextButton = function (data) {
        if (data.length <= this.maxVisibleItems) {
            this.nextShouldBeDisabled = true;
        }
        else {
            this.nextShouldBeDisabled = false;
        }
    };
    MdbTablePaginationComponent.prototype.calculateFirstItemIndex = function () {
        this.firstItemIndex = this.activePageNumber * this.maxVisibleItems - this.maxVisibleItems + 1;
        this.pagination.next({ first: this.firstItemIndex, last: this.lastItemIndex });
    };
    MdbTablePaginationComponent.prototype.calculateLastItemIndex = function () {
        this.lastItemIndex = this.activePageNumber * this.maxVisibleItems;
        this.lastVisibleItemIndex = this.lastItemIndex;
        if (this.searchDataSource && this.lastItemIndex > this.searchDataSource.length) {
            this.lastVisibleItemIndex = this.searchDataSource.length;
        }
        else if (!this.searchDataSource) {
            this.lastVisibleItemIndex = this.lastItemIndex;
        }
        if (this.lastItemIndex > this.tableEl.getDataSource().length) {
            this.lastItemIndex = this.tableEl.getDataSource().length;
            this.lastVisibleItemIndex = this.tableEl.getDataSource().length;
        }
        this.pagination.next({ first: this.firstItemIndex, last: this.lastItemIndex });
    };
    MdbTablePaginationComponent.prototype.paginationChange = function () {
        return this.pagination;
    };
    MdbTablePaginationComponent.prototype.calculateHowManyPagesShouldBe = function () {
        return Math.ceil(this.tableEl.getDataSource().length / this.maxVisibleItems);
    };
    MdbTablePaginationComponent.prototype.previousPage = function () {
        this.activePageNumber--;
        this.calculateFirstItemIndex();
        this.calculateLastItemIndex();
        this.previousPageClick.emit({ first: this.firstItemIndex, last: this.lastItemIndex });
    };
    MdbTablePaginationComponent.prototype.nextPage = function () {
        this.activePageNumber++;
        this.calculateFirstItemIndex();
        this.calculateLastItemIndex();
        if (this.lastItemIndex > this.tableEl.getDataSource().length) {
            this.lastItemIndex = this.tableEl.getDataSource().length;
        }
        if (this.lastVisibleItemIndex > this.allItemsLength) {
            this.lastVisibleItemIndex = this.allItemsLength;
        }
        this.nextPageClick.emit({ first: this.firstItemIndex, last: this.lastItemIndex });
    };
    MdbTablePaginationComponent.prototype.firstPage = function () {
        this.activePageNumber = 1;
        this.calculateFirstItemIndex();
        this.calculateLastItemIndex();
        this.firstPageClick.emit({ first: this.firstItemIndex, last: this.lastItemIndex });
    };
    MdbTablePaginationComponent.prototype.lastPage = function () {
        var lastPage = Math.ceil(this.allItemsLength / this.maxVisibleItems);
        this.activePageNumber = lastPage;
        this.calculateFirstItemIndex();
        this.calculateLastItemIndex();
        this.lastPageClick.emit({ first: this.firstItemIndex, last: this.lastItemIndex });
    };
    MdbTablePaginationComponent.prototype.nextPageObservable = function () {
        var _this = this;
        var obs = new Observable(function (observer) {
            observer.next(_this.firstItemIndex);
        });
        return obs;
    };
    MdbTablePaginationComponent.prototype.previousPageObservable = function () {
        var _this = this;
        var obs = new Observable(function (observer) {
            observer.next(_this.lastVisibleItemIndex);
        });
        return obs;
    };
    MdbTablePaginationComponent.prototype.checkIfNextShouldBeDisabled = function () {
        if (this.searchDataSource && this.lastVisibleItemIndex === this.searchDataSource.length) {
            return true;
        }
        if (this.activePageNumber >= this.calculateHowManyPagesShouldBe()) {
            return true;
        }
        if (this.nextShouldBeDisabled) {
            return this.nextShouldBeDisabled;
        }
    };
    MdbTablePaginationComponent.prototype.checkIfPreviousShouldBeDisabled = function () {
        if (this.activePageNumber === 1) {
            return true;
        }
    };
    MdbTablePaginationComponent.prototype.ngOnDestroy = function () {
        this._destroy$.next();
        this._destroy$.complete();
    };
    MdbTablePaginationComponent.ctorParameters = function () { return [
        { type: ChangeDetectorRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", MdbTableDirective)
    ], MdbTablePaginationComponent.prototype, "tableEl", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], MdbTablePaginationComponent.prototype, "searchPagination", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], MdbTablePaginationComponent.prototype, "searchDataSource", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], MdbTablePaginationComponent.prototype, "ofKeyword", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], MdbTablePaginationComponent.prototype, "dashKeyword", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], MdbTablePaginationComponent.prototype, "paginationAlign", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], MdbTablePaginationComponent.prototype, "hideDescription", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], MdbTablePaginationComponent.prototype, "nextPageClick", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], MdbTablePaginationComponent.prototype, "previousPageClick", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], MdbTablePaginationComponent.prototype, "firstPageClick", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], MdbTablePaginationComponent.prototype, "lastPageClick", void 0);
    MdbTablePaginationComponent = __decorate([ __metadata("design:paramtypes", [ChangeDetectorRef])
    ], MdbTablePaginationComponent);
MdbTablePaginationComponent.ɵfac = function MdbTablePaginationComponent_Factory(t) { return new (t || MdbTablePaginationComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };
MdbTablePaginationComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MdbTablePaginationComponent, selectors: [["mdb-table-pagination"]], inputs: { searchPagination: "searchPagination", searchDataSource: "searchDataSource", ofKeyword: "ofKeyword", dashKeyword: "dashKeyword", paginationAlign: "paginationAlign", hideDescription: "hideDescription", tableEl: "tableEl" }, outputs: { nextPageClick: "nextPageClick", previousPageClick: "previousPageClick", firstPageClick: "firstPageClick", lastPageClick: "lastPageClick" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 19, vars: 17, consts: [[1, "pagination", "pagination-circle", "pg-blue", "d-flex", "flex-center", 3, "ngClass"], [4, "ngIf"], [1, "page-item", 3, "ngClass"], ["mdbWavesEffect", "", "aria-label", "Previous", 1, "page-link", 3, "click"], ["aria-hidden", "true"], ["mdbWavesEffect", "", "aria-label", "Next", 1, "page-link", 3, "click"]], template: function MdbTablePaginationComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "nav");
        ɵngcc0.ɵɵelementStart(1, "ul", 0);
        ɵngcc0.ɵɵtemplate(2, MdbTablePaginationComponent_li_2_Template, 2, 5, "li", 1);
        ɵngcc0.ɵɵelementStart(3, "li", 2);
        ɵngcc0.ɵɵelementStart(4, "a", 3);
        ɵngcc0.ɵɵlistener("click", function MdbTablePaginationComponent_Template_a_click_4_listener() { return ctx.firstPage(); });
        ɵngcc0.ɵɵelementStart(5, "span", 4);
        ɵngcc0.ɵɵtext(6, "\u00AB");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(7, "li", 2);
        ɵngcc0.ɵɵelementStart(8, "a", 3);
        ɵngcc0.ɵɵlistener("click", function MdbTablePaginationComponent_Template_a_click_8_listener() { return ctx.previousPage(); });
        ɵngcc0.ɵɵelementStart(9, "span", 4);
        ɵngcc0.ɵɵtext(10, "\u2039");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(11, "li", 2);
        ɵngcc0.ɵɵelementStart(12, "a", 3);
        ɵngcc0.ɵɵlistener("click", function MdbTablePaginationComponent_Template_a_click_12_listener() { return ctx.nextPage(); });
        ɵngcc0.ɵɵelementStart(13, "span", 4);
        ɵngcc0.ɵɵtext(14, "\u203A");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(15, "li", 2);
        ɵngcc0.ɵɵelementStart(16, "a", 5);
        ɵngcc0.ɵɵlistener("click", function MdbTablePaginationComponent_Template_a_click_16_listener() { return ctx.lastPage(); });
        ɵngcc0.ɵɵelementStart(17, "span", 4);
        ɵngcc0.ɵɵtext(18, "\u00BB");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(6, _c0, ctx.paginationAlign == "end", ctx.paginationAlign == "start"));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.hideDescription);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(9, _c1, ctx.checkIfPreviousShouldBeDisabled()));
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(11, _c1, ctx.checkIfPreviousShouldBeDisabled()));
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(13, _c1, ctx.checkIfNextShouldBeDisabled()));
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(15, _c1, ctx.checkIfNextShouldBeDisabled()));
    } }, directives: [ɵngcc1.NgClass, ɵngcc1.NgIf], encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MdbTablePaginationComponent, [{
        type: Component,
        args: [{
                selector: 'mdb-table-pagination',
                template: "<!--Pagination -->\n<nav>\n  <ul\n    class=\"pagination pagination-circle pg-blue d-flex flex-center\"\n    [ngClass]=\"{\n      'justify-content-end': paginationAlign == 'end',\n      'justify-content-start': paginationAlign == 'start'\n    }\"\n  >\n    <li *ngIf=\"!hideDescription\">\n      {{ firstItemIndex }} {{ dashKeyword }} {{ lastVisibleItemIndex }} {{ ofKeyword }}\n      {{ allItemsLength }}\n    </li>\n    <!--Arrow left-->\n    <li class=\"page-item\" [ngClass]=\"{ disabled: checkIfPreviousShouldBeDisabled() }\">\n      <a class=\"page-link\" mdbWavesEffect aria-label=\"Previous\" (click)=\"firstPage()\">\n        <span aria-hidden=\"true\">\u00AB</span>\n      </a>\n    </li>\n\n    <li class=\"page-item\" [ngClass]=\"{ disabled: checkIfPreviousShouldBeDisabled() }\">\n      <a class=\"page-link\" mdbWavesEffect aria-label=\"Previous\" (click)=\"previousPage()\">\n        <span aria-hidden=\"true\">&#8249;</span>\n      </a>\n    </li>\n\n    <li class=\"page-item\" [ngClass]=\"{ disabled: checkIfNextShouldBeDisabled() }\">\n      <a class=\"page-link\" mdbWavesEffect aria-label=\"Previous\" (click)=\"nextPage()\">\n        <span aria-hidden=\"true\">&#8250;</span>\n      </a>\n    </li>\n\n    <!--Arrow right-->\n    <li class=\"page-item\" [ngClass]=\"{ disabled: checkIfNextShouldBeDisabled() }\">\n      <a class=\"page-link\" mdbWavesEffect aria-label=\"Next\" (click)=\"lastPage()\">\n        <span aria-hidden=\"true\">\u00BB</span>\n      </a>\n    </li>\n  </ul>\n</nav>\n<!--/Pagination -->\n"
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }]; }, { searchPagination: [{
            type: Input
        }], searchDataSource: [{
            type: Input
        }], ofKeyword: [{
            type: Input
        }], dashKeyword: [{
            type: Input
        }], paginationAlign: [{
            type: Input
        }], hideDescription: [{
            type: Input
        }], nextPageClick: [{
            type: Output
        }], previousPageClick: [{
            type: Output
        }], firstPageClick: [{
            type: Output
        }], lastPageClick: [{
            type: Output
        }], tableEl: [{
            type: Input
        }] }); })();
    return MdbTablePaginationComponent;
}());
export { MdbTablePaginationComponent };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,