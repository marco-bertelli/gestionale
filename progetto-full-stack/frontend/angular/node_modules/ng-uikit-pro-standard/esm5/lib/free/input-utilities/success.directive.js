import { __decorate, __metadata } from "tslib";
import { Input, HostBinding, ElementRef, Renderer2, OnInit, OnDestroy, Component, ViewEncapsulation, } from '@angular/core';
import { Utils } from '../utils';
import * as ɵngcc0 from '@angular/core';

var _c0 = ["*"];
var defaultIdNumber = 0;
var MdbSuccessDirective = /** @class */ (function () {
    function MdbSuccessDirective(el, renderer) {
        this.el = el;
        this.renderer = renderer;
        this.id = "mdb-success-" + defaultIdNumber++;
        this.successMsg = true;
        this.messageId = this.id;
        this.utils = new Utils();
    }
    MdbSuccessDirective.prototype._calculateMarginTop = function () {
        var parent = this.el.nativeElement.parentNode.querySelector('.form-check');
        var heightParent = parent ? parent.offsetHeight : null;
        if (heightParent) {
            var margin = heightParent / 12.5;
            this.el.nativeElement.style.top = heightParent + heightParent / margin + "px";
        }
    };
    MdbSuccessDirective.prototype.ngOnInit = function () {
        var _this = this;
        this.prefix = this.el.nativeElement.parentNode.querySelector('.prefix');
        if (this.prefix) {
            this.prefix.classList.add('success-message');
        }
        var textarea = this.utils.getClosestEl(this.el.nativeElement, '.md-textarea');
        this._calculateMarginTop();
        if (textarea) {
            var height_1 = textarea.offsetHeight + 4 + 'px';
            this.renderer.setStyle(this.el.nativeElement, 'top', height_1);
            this.textareaListenFunction = this.renderer.listen(textarea, 'keyup', function () {
                height_1 = textarea.offsetHeight + 4 + 'px';
                _this.renderer.setStyle(_this.el.nativeElement, 'top', height_1);
            });
        }
    };
    MdbSuccessDirective.prototype.ngOnDestroy = function () {
        if (this.textareaListenFunction) {
            this.textareaListenFunction();
        }
        if (this.prefix) {
            this.prefix.classList.remove('success-message');
        }
    };
    MdbSuccessDirective.ctorParameters = function () { return [
        { type: ElementRef },
        { type: Renderer2 }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], MdbSuccessDirective.prototype, "id", void 0);
    __decorate([
        HostBinding('class.success-message'),
        __metadata("design:type", Object)
    ], MdbSuccessDirective.prototype, "successMsg", void 0);
    __decorate([
        HostBinding('attr.id'),
        __metadata("design:type", Object)
    ], MdbSuccessDirective.prototype, "messageId", void 0);
    MdbSuccessDirective = __decorate([ __metadata("design:paramtypes", [ElementRef, Renderer2])
    ], MdbSuccessDirective);
MdbSuccessDirective.ɵfac = function MdbSuccessDirective_Factory(t) { return new (t || MdbSuccessDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };
MdbSuccessDirective.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MdbSuccessDirective, selectors: [["mdb-success"]], hostVars: 3, hostBindings: function MdbSuccessDirective_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵattribute("id", ctx.messageId);
        ɵngcc0.ɵɵclassProp("success-message", ctx.successMsg);
    } }, inputs: { id: "id" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function MdbSuccessDirective_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, styles: [".error-message,.success-message{position:absolute;top:40px;left:0;font-size:.8rem}textarea~.error-message,textarea~.success-message{top:unset;bottom:-20px}.error-message{color:#f44336}.success-message{color:#00c851}"], encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MdbSuccessDirective, [{
        type: Component,
        args: [{
                selector: 'mdb-success',
                template: '<ng-content></ng-content>',
                encapsulation: ViewEncapsulation.None,
                styles: [".error-message,.success-message{position:absolute;top:40px;left:0;font-size:.8rem}textarea~.error-message,textarea~.success-message{top:unset;bottom:-20px}.error-message{color:#f44336}.success-message{color:#00c851}"]
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, { id: [{
            type: Input
        }], successMsg: [{
            type: HostBinding,
            args: ['class.success-message']
        }], messageId: [{
            type: HostBinding,
            args: ['attr.id']
        }] }); })();
    return MdbSuccessDirective;
}());
export { MdbSuccessDirective };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,