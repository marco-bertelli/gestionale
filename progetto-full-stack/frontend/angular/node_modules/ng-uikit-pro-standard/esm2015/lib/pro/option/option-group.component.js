import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, HostBinding, Optional, Inject, } from '@angular/core';
import { MDB_OPTION_GROUP, MDB_OPTION_PARENT } from './option.component';
import * as ɵngcc0 from '@angular/core';

const _c0 = [[["mdb-select-option"]]];
const _c1 = ["mdb-select-option"];
export class OptionGroupComponent {
    constructor(_parent) {
        this._parent = _parent;
        this.optionGroup = true;
        this._optionHeight = 48;
        this._disabled = false;
    }
    get disabled() {
        return this._disabled;
    }
    set disabled(value) {
        this._disabled = value;
    }
    ngOnInit() {
        if (this._parent && this._parent.visibleOptions && this._parent.optionHeight) {
            this._optionHeight = this._parent.optionHeight;
        }
    }
    ngAfterContentInit() { }
}
OptionGroupComponent.ɵfac = function OptionGroupComponent_Factory(t) { return new (t || OptionGroupComponent)(ɵngcc0.ɵɵdirectiveInject(MDB_OPTION_PARENT, 8)); };
OptionGroupComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: OptionGroupComponent, selectors: [["mdb-option-group"]], hostVars: 2, hostBindings: function OptionGroupComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("mdb-option-group", ctx.optionGroup);
    } }, inputs: { disabled: "disabled", label: "label" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MDB_OPTION_GROUP, useExisting: OptionGroupComponent }])], ngContentSelectors: _c1, decls: 3, vars: 5, consts: [[1, "mdb-option-group-label"]], template: function OptionGroupComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c0);
        ɵngcc0.ɵɵelementStart(0, "label", 0);
        ɵngcc0.ɵɵtext(1);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵprojection(2);
    } if (rf & 2) {
        ɵngcc0.ɵɵstyleProp("height", ctx._optionHeight, "px")("line-height", ctx._optionHeight, "px");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate(ctx.label);
    } }, styles: [".mdb-option-group{display:flex;flex-direction:column}.mdb-option-group-label{border-top:1px solid #eee;color:#9e9e9e;margin:0;padding-left:16px;padding-right:16px;text-overflow:ellipsis;white-space:nowrap}.mdb-option-group:first-child .mdb-option-group-label{border-top:0}"], encapsulation: 2, changeDetection: 0 });
OptionGroupComponent.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MDB_OPTION_PARENT,] }] }
];
OptionGroupComponent.propDecorators = {
    optionGroup: [{ type: HostBinding, args: ['class.mdb-option-group',] }],
    label: [{ type: Input }],
    disabled: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OptionGroupComponent, [{
        type: Component,
        args: [{
                selector: 'mdb-option-group',
                template: "<label\n  class=\"mdb-option-group-label\"\n  [style.height.px]=\"_optionHeight\"\n  [style.line-height.px]=\"_optionHeight\"\n  >{{ label }}</label\n>\n<ng-content select=\"mdb-select-option\"></ng-content>\n",
                encapsulation: ViewEncapsulation.None,
                changeDetection: ChangeDetectionStrategy.OnPush,
                providers: [{ provide: MDB_OPTION_GROUP, useExisting: OptionGroupComponent }],
                styles: [".mdb-option-group{display:flex;flex-direction:column}.mdb-option-group-label{border-top:1px solid #eee;color:#9e9e9e;margin:0;padding-left:16px;padding-right:16px;text-overflow:ellipsis;white-space:nowrap}.mdb-option-group:first-child .mdb-option-group-label{border-top:0}"]
            }]
    }], function () { return [{ type: undefined, decorators: [{
                type: Optional
            }, {
                type: Inject,
                args: [MDB_OPTION_PARENT]
            }] }]; }, { optionGroup: [{
            type: HostBinding,
            args: ['class.mdb-option-group']
        }], disabled: [{
            type: Input
        }], label: [{
            type: Input
        }] }); })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3B0aW9uLWdyb3VwLmNvbXBvbmVudC5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmctdWlraXQtcHJvLXN0YW5kYXJkL3NyYy9saWIvcHJvL29wdGlvbi9vcHRpb24tZ3JvdXAuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDTCxTQUFTLEVBRVQsaUJBQWlCLEVBQ2pCLHVCQUF1QixFQUV2QixLQUFLLEVBQ0wsV0FBVyxFQUNYLFFBQVEsRUFDUixNQUFNLEdBQ1AsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFFLGdCQUFnQixFQUFFLGlCQUFpQixFQUFtQixNQUFNLG9CQUFvQixDQUFDOzs7OztBQVUxRixNQUFNLE9BQU8sb0JBQW9CO0FBQUksSUFnQm5DLFlBQTJELE9BQXdCO0FBQ3JGLFFBRDZELFlBQU8sR0FBUCxPQUFPLENBQWlCO0FBQUUsUUFkckYsZ0JBQVcsR0FBRyxJQUFJLENBQUM7QUFDcEIsUUFBQyxrQkFBYSxHQUFHLEVBQUUsQ0FBQztBQUVyQixRQVNVLGNBQVMsR0FBRyxLQUFLLENBQUM7QUFFNUIsSUFBd0YsQ0FBQztBQUV6RixJQVhFLElBQ0ksUUFBUTtBQUNiLFFBQUcsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDO0FBQ3pCLElBQUMsQ0FBQztBQUNGLElBQUMsSUFBSSxRQUFRLENBQUMsS0FBYztBQUM1QixRQUFHLElBQUksQ0FBQyxTQUFTLEdBQUcsS0FBSyxDQUFDO0FBQzFCLElBQUMsQ0FBQztBQUNGLElBSUMsUUFBUTtBQUNULFFBQUcsSUFBSSxJQUFJLENBQUMsT0FBTyxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsY0FBYyxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsWUFBWSxFQUFFO0FBQ2pGLFlBQUssSUFBSSxDQUFDLGFBQWEsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQztBQUNwRCxTQUFJO0FBQ0osSUFBQyxDQUFDO0FBRUgsSUFBRSxrQkFBa0IsS0FBSSxDQUFDO0FBQ3hCO2tEQWpDQSxTQUFTLFNBQUMsbUJBQ1QsUUFBUSxFQUFFLGtCQUFrQixtQkFDNUI7aU1BQTBDLG1CQUUxQztZQUFhLEVBQUUsaUJBQWlCLENBQUMsSUFBSSxtQkFDckM7S0FBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU0sbUJBQy9DLFNBQVMsRUFBRSxDQUFDLEVBQUUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLFdBQVcsRUFBRSxvQkFBb0IsRUFBRSxDQUFDOzs7O2lCQUM5RTs7Ozs7OytVQUNLO0FBQUU7QUFBK0MsNENBZ0J4QyxRQUFRLFlBQUksTUFBTSxTQUFDLGlCQUFpQjtBQUFTO0FBQUk7QUFFbEQsMEJBakJYLFdBQVcsU0FBQyx3QkFBd0I7QUFDakMsb0JBR0gsS0FBSztBQUFNLHVCQUVYLEtBQUs7QUFDTjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBN0JBLEFBQUEsQUFDQSxBQUFBLEFBRUEsQUFBQSxBQUNBLEFBQUEsQUFFQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQVVBLEFBQUEsQUFBQSxBQUFBLEFBZ0JBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFkQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQVdBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFFQSxBQUFBLEFBVEEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFLQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQ0EsQUFBQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBaENBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQWlCQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFmQSxBQUFBLEFBQUEsQUFBQSxBQUlBLEFBQUEsQUFFQSxBQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQ29tcG9uZW50LFxuICBPbkluaXQsXG4gIFZpZXdFbmNhcHN1bGF0aW9uLFxuICBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSxcbiAgQWZ0ZXJDb250ZW50SW5pdCxcbiAgSW5wdXQsXG4gIEhvc3RCaW5kaW5nLFxuICBPcHRpb25hbCxcbiAgSW5qZWN0LFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE1EQl9PUFRJT05fR1JPVVAsIE1EQl9PUFRJT05fUEFSRU5ULCBNZGJPcHRpb25QYXJlbnQgfSBmcm9tICcuL29wdGlvbi5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdtZGItb3B0aW9uLWdyb3VwJyxcbiAgdGVtcGxhdGVVcmw6ICdvcHRpb24tZ3JvdXAuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9vcHRpb24tZ3JvdXAuY29tcG9uZW50LnNjc3MnXSxcbiAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZSxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gIHByb3ZpZGVyczogW3sgcHJvdmlkZTogTURCX09QVElPTl9HUk9VUCwgdXNlRXhpc3Rpbmc6IE9wdGlvbkdyb3VwQ29tcG9uZW50IH1dLFxufSlcbmV4cG9ydCBjbGFzcyBPcHRpb25Hcm91cENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgQWZ0ZXJDb250ZW50SW5pdCB7XG4gIEBIb3N0QmluZGluZygnY2xhc3MubWRiLW9wdGlvbi1ncm91cCcpXG4gIG9wdGlvbkdyb3VwID0gdHJ1ZTtcbiAgX29wdGlvbkhlaWdodCA9IDQ4O1xuXG4gIEBJbnB1dCgpIGxhYmVsOiBzdHJpbmc7XG5cbiAgQElucHV0KClcbiAgZ2V0IGRpc2FibGVkKCkge1xuICAgIHJldHVybiB0aGlzLl9kaXNhYmxlZDtcbiAgfVxuICBzZXQgZGlzYWJsZWQodmFsdWU6IGJvb2xlYW4pIHtcbiAgICB0aGlzLl9kaXNhYmxlZCA9IHZhbHVlO1xuICB9XG4gIHByaXZhdGUgX2Rpc2FibGVkID0gZmFsc2U7XG5cbiAgY29uc3RydWN0b3IoQE9wdGlvbmFsKCkgQEluamVjdChNREJfT1BUSU9OX1BBUkVOVCkgcHJpdmF0ZSBfcGFyZW50OiBNZGJPcHRpb25QYXJlbnQpIHt9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgaWYgKHRoaXMuX3BhcmVudCAmJiB0aGlzLl9wYXJlbnQudmlzaWJsZU9wdGlvbnMgJiYgdGhpcy5fcGFyZW50Lm9wdGlvbkhlaWdodCkge1xuICAgICAgdGhpcy5fb3B0aW9uSGVpZ2h0ID0gdGhpcy5fcGFyZW50Lm9wdGlvbkhlaWdodDtcbiAgICB9XG4gIH1cblxuICBuZ0FmdGVyQ29udGVudEluaXQoKSB7fVxufVxuIl19