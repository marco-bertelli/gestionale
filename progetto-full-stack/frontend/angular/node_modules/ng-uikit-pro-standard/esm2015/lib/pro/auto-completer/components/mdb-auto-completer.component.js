import { Component, ContentChildren, ElementRef, EventEmitter, Inject, Input, Output, PLATFORM_ID, Renderer2, ViewChild, ViewEncapsulation, QueryList, } from '@angular/core';
import { MdbOptionComponent, MDB_OPTION_PARENT } from './mdb-option.component';
import { Subject, merge } from 'rxjs';
import { isPlatformBrowser } from '@angular/common';
import { document, window } from '../../../free/utils/facade/browser';
import { Utils } from './../../../free/utils/utils.class';
import { startWith, switchMap, takeUntil } from 'rxjs/operators';
import { DOWN_ARROW, ENTER, ESCAPE, UP_ARROW } from '../../../free/utils/keyboard-navigation';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';

const _c0 = ["dropdown"];
const _c1 = ["noResults"];
function MdbAutoCompleterComponent_div_0_div_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 6, 7);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r2.textNoResults, " ");
} }
const _c2 = function (a0, a1) { return { "pointer-events": a0, "max-height.px": a1 }; };
function MdbAutoCompleterComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 1);
    ɵngcc0.ɵɵelementStart(1, "div", 2, 3);
    ɵngcc0.ɵɵelementStart(3, "div", 4);
    ɵngcc0.ɵɵtemplate(4, MdbAutoCompleterComponent_div_0_div_4_Template, 3, 1, "div", 5);
    ɵngcc0.ɵɵprojection(5, 0, ["#content", ""]);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngStyle", ɵngcc0.ɵɵpureFunction2(2, _c2, ctx_r0.optionList.length === 0 ? "none" : "auto", ctx_r0._visibleOptions ? ctx_r0._visibleOptions * ctx_r0._optionHeight : ctx_r0._dropdownHeight));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.textNoResults && ctx_r0.optionList.length === 0);
} }
const _c3 = ["*"];
export class MdbAutoCompleterComponent {
    constructor(renderer, el, platformId) {
        this.renderer = renderer;
        this.el = el;
        this.clearButton = true;
        this.clearButtonTabIndex = 0;
        this.dropdownPosition = 'auto';
        this._optionHeight = 45;
        // equal to 4 * optionHeight (which is 45 by default)
        this._dropdownHeight = 180;
        this.select = new EventEmitter();
        this.selected = new EventEmitter();
        this._destroy = new Subject();
        this.utils = new Utils();
        this._isDropdownOpen = new Subject();
        this._allItems = [];
        this._isOpen = false;
        this._selectedItemIndex = -1;
        this._selectedItemChanged = new Subject();
        this._isBrowser = false;
        this._isBrowser = isPlatformBrowser(platformId);
        this.renderer.addClass(this.el.nativeElement, 'mdb-auto-completer');
    }
    get visibleOptions() {
        return this._visibleOptions;
    }
    set visibleOptions(value) {
        if (value !== 0) {
            this._visibleOptions = value;
        }
    }
    get optionHeight() {
        return this._optionHeight;
    }
    set optionHeight(value) {
        if (value !== 0) {
            this._optionHeight = value;
        }
    }
    get dropdownHeight() {
        return this._dropdownHeight;
    }
    set dropdownHeight(value) {
        if (value !== 0) {
            this._dropdownHeight = value;
        }
    }
    _listenToOptionClick() {
        this.mdbOptions.changes
            .pipe(startWith(this.mdbOptions), switchMap((options) => {
            return merge(...options.map((option) => option.click$));
        }), takeUntil(this._destroy))
            .subscribe((clickedOption) => this._handleOptionClick(clickedOption));
    }
    _handleOptionClick(option) {
        this.setSelectedItem({ text: option.value, element: option });
        this.highlightRow(0);
        this.select.emit({ text: option.value, element: option });
        this.selected.emit({ text: option.value, element: option });
    }
    setSelectedItem(item) {
        this._selectedItem = item;
        this._selectedItemChanged.next(this.getSelectedItem());
    }
    getSelectedItem() {
        return this._selectedItem;
    }
    selectedItemChanged() {
        return this._selectedItemChanged;
    }
    isOpen() {
        return this._isOpen;
    }
    _calculatePosition() {
        const modalEl = this.utils.getClosestEl(this.el.nativeElement, '.modal-dialog');
        const style = document.querySelector('.completer-dropdown')
            ? window.getComputedStyle(document.querySelector('.completer-dropdown'))
            : null;
        if (!style) {
            return;
        }
        const height = ['height', 'padding-top', 'padding-bottom', 'margin-top', 'margin-bottom']
            .map(key => parseInt(style.getPropertyValue(key), 10))
            .reduce((prev, cur) => prev + cur);
        const topRect = document.querySelector('.completer-dropdown').getBoundingClientRect().top;
        const bottom = modalEl ? window.innerHeight - height - topRect : this.parameters.bottom;
        const canOpenBelow = this.dropdown.nativeElement.clientHeight <= bottom;
        const belowPosition = this.parameters.inputHeight + 3;
        const abovePosition = `-${this.dropdown.nativeElement.clientHeight}`;
        let top;
        if (this.dropdownPosition === 'auto') {
            top = canOpenBelow ? belowPosition : abovePosition;
        }
        else if (this.dropdownPosition === 'below') {
            top = belowPosition;
        }
        else if (this.dropdownPosition === 'above') {
            top = abovePosition;
        }
        this.renderer.setStyle(this.dropdown.nativeElement, 'top', top + 'px');
        this.renderer.setStyle(this.dropdown.nativeElement, 'left', 0 + 'px');
        this.renderer.setStyle(this.dropdown.nativeElement, 'width', this.parameters.width + 'px');
    }
    _calculateAppendPosition() {
        if (this._isBrowser) {
            setTimeout(() => {
                const originRect = this.origin.nativeElement.getBoundingClientRect();
                const scrollTop = document.documentElement.scrollTop || document.body.scrollTop;
                const offsetTop = originRect.top + scrollTop;
                const height = originRect.height;
                const dropdownHeight = this.dropdown.nativeElement.offsetHeight;
                const inputMargin = 8;
                let top = 0;
                let left = 0;
                left = originRect.left;
                const canOpenBelow = offsetTop + dropdownHeight + height + inputMargin <=
                    scrollTop + document.documentElement.clientHeight;
                const belowPosition = offsetTop + height + inputMargin;
                const abovePosition = (top = offsetTop - dropdownHeight - inputMargin);
                if (this.dropdownPosition === 'auto') {
                    top = canOpenBelow ? belowPosition : abovePosition;
                }
                else if (this.dropdownPosition === 'below') {
                    top = belowPosition;
                }
                else if (this.dropdownPosition === 'above') {
                    top = abovePosition;
                }
                this.renderer.setStyle(this.dropdown.nativeElement, 'top', top + 'px');
                this.renderer.setStyle(this.dropdown.nativeElement, 'left', left + 'px');
                this.renderer.setStyle(this.dropdown.nativeElement, 'width', this.parameters.width + 'px');
            }, 0);
        }
    }
    show() {
        if (!this.disabled) {
            this._isOpen = true;
            this._isDropdownOpen.next(this.isOpen());
        }
        setTimeout(() => {
            if (this.dropdown && !this.appendToBody) {
                this._calculatePosition();
            }
            if (this.dropdown && this.appendToBody) {
                this._calculateAppendPosition();
            }
        }, 0);
    }
    hide() {
        if (!this.disabled) {
            this._isOpen = false;
            this._isDropdownOpen.next(this.isOpen());
        }
    }
    isDropdownOpen() {
        return this._isDropdownOpen;
    }
    removeHighlight(index) {
        setTimeout(() => {
            this.optionList.forEach((el, i) => {
                const completerRow = el.nativeElement.querySelectorAll('.completer-row');
                if (i === index) {
                    this.renderer.addClass(el.nativeElement.firstElementChild, 'highlight-row');
                }
                else if (i !== index) {
                    completerRow.forEach((elem) => {
                        this.renderer.removeClass(elem, 'highlight-row');
                    });
                }
            });
        }, 0);
    }
    highlightRow(index) {
        this._allItems = this.optionList
            .filter(el => el.nativeElement.firstElementChild.classList.contains('completer-row'))
            .map(elem => elem.nativeElement);
        if (this._allItems[index]) {
            this.optionList.forEach((el, i) => {
                const completerRow = el.nativeElement.querySelectorAll('.completer-row');
                if (index === i) {
                    this.removeHighlight(index);
                    this.renderer.addClass(completerRow[completerRow.length - 1], 'highlight-row');
                }
            });
        }
        this._selectedItemIndex = index;
    }
    navigateUsingKeyboard(event) {
        if (this.dropdown) {
            switch (event.keyCode) {
                case DOWN_ARROW:
                    event.preventDefault();
                    this.moveHighlightedIntoView(event.key);
                    if (!this.isOpen()) {
                        this.show();
                    }
                    if (this._selectedItemIndex + 1 <= this._allItems.length - 1) {
                        this.highlightRow(++this._selectedItemIndex);
                    }
                    else if (this._selectedItemIndex + 1 === this._allItems.length) {
                        this.highlightRow(0);
                    }
                    if (this._selectedItemIndex === 0) {
                        this.highlightRow(0);
                    }
                    const selectedElement = this.mdbOptions.find((el, index) => el && index === this._selectedItemIndex);
                    if (selectedElement) {
                        this.select.emit({ text: selectedElement.value, element: selectedElement });
                    }
                    break;
                case UP_ARROW:
                    event.preventDefault();
                    this.moveHighlightedIntoView(event.key);
                    if (this._selectedItemIndex === -1 || this._selectedItemIndex === 0) {
                        const lastItemIndex = this.mdbOptions.length;
                        this.highlightRow(lastItemIndex);
                    }
                    this.highlightRow(--this._selectedItemIndex);
                    const selectedItem = this.mdbOptions.find((el, index) => el && index === this._selectedItemIndex);
                    if (selectedItem) {
                        this.select.emit({ text: selectedItem.value, element: selectedItem });
                    }
                    break;
                case ESCAPE:
                    event.preventDefault();
                    this.hide();
                    break;
                case ENTER:
                    event.preventDefault();
                    const selectedOption = this.mdbOptions.map(el => el)[this._selectedItemIndex];
                    if (selectedOption) {
                        this.setSelectedItem({ text: selectedOption.value, element: selectedOption });
                        this.select.emit({ text: selectedOption.value, element: selectedOption });
                        this.selected.emit({ text: selectedOption.value, element: selectedOption });
                    }
                    this.hide();
                    break;
            }
        }
    }
    moveHighlightedIntoView(type) {
        let listHeight = 0;
        let itemIndex = this._selectedItemIndex;
        this.optionList.forEach((el) => {
            listHeight += el.nativeElement.offsetHeight;
        });
        if (itemIndex > -1) {
            let itemHeight = 0;
            this.optionList.forEach((el, i) => {
                if (i === itemIndex + 1) {
                    itemHeight = el.nativeElement.firstElementChild.clientHeight;
                }
            });
            const itemTop = (itemIndex + 1) * itemHeight;
            const viewTop = this.dropdown.nativeElement.scrollTop;
            const viewBottom = viewTop + listHeight;
            if (type === 'ArrowDown') {
                this.renderer.setProperty(this.dropdown.nativeElement, 'scrollTop', itemTop - itemHeight);
            }
            else if (type === 'ArrowUp') {
                if (itemIndex === 0) {
                    itemIndex = this.optionList.length - 1;
                }
                else {
                    itemIndex--;
                }
                if (itemIndex === this._allItems.length - 2) {
                    this.renderer.setProperty(this.dropdown.nativeElement, 'scrollTop', viewBottom - itemHeight);
                }
                else {
                    this.renderer.setProperty(this.dropdown.nativeElement, 'scrollTop', itemIndex * itemHeight);
                }
            }
        }
    }
    updatePosition(parameters) {
        setTimeout(() => {
            if (this.dropdown) {
                const top = this.dropdown.nativeElement.clientHeight > parameters.bottom
                    ? parameters.top - this.dropdown.nativeElement.clientHeight
                    : parameters.top;
                this.renderer.setStyle(this.dropdown.nativeElement, 'top', top + 'px');
                this.renderer.setStyle(this.dropdown.nativeElement, 'left', parameters.left + 'px');
                this.renderer.setStyle(this.dropdown.nativeElement, 'width', parameters.width + 'px');
            }
        }, 0);
    }
    appendDropdown() {
        if (this._isBrowser && this.appendToBody) {
            const body = document.querySelector('body');
            const dropdown = this.el.nativeElement;
            if (body) {
                this.renderer.appendChild(body, dropdown);
                this._calculateAppendPosition();
            }
        }
    }
    setSingleOptionHeight() {
        this.mdbOptions.forEach(option => {
            option._optionHeight = this._optionHeight;
        });
    }
    ngAfterContentInit() {
        this._listenToOptionClick();
        this.highlightRow(0);
    }
    ngOnDestroy() {
        this._destroy.next();
        this._destroy.complete();
    }
}
MdbAutoCompleterComponent.ɵfac = function MdbAutoCompleterComponent_Factory(t) { return new (t || MdbAutoCompleterComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID)); };
MdbAutoCompleterComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MdbAutoCompleterComponent, selectors: [["mdb-auto-completer"]], contentQueries: function MdbAutoCompleterComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, MdbOptionComponent, true, ElementRef);
        ɵngcc0.ɵɵcontentQuery(dirIndex, MdbOptionComponent, true);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.optionList = _t);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.mdbOptions = _t);
    } }, viewQuery: function MdbAutoCompleterComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c0, true);
        ɵngcc0.ɵɵviewQuery(_c1, true);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.dropdown = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.noResultsEl = _t.first);
    } }, inputs: { clearButton: "clearButton", clearButtonTabIndex: "clearButtonTabIndex", dropdownPosition: "dropdownPosition", visibleOptions: "visibleOptions", optionHeight: "optionHeight", dropdownHeight: "dropdownHeight", textNoResults: "textNoResults", appendToBody: "appendToBody", disabled: "disabled", displayValue: "displayValue" }, outputs: { select: "select", selected: "selected" }, exportAs: ["mdbAutoCompleter"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MDB_OPTION_PARENT, useExisting: MdbAutoCompleterComponent }])], ngContentSelectors: _c3, decls: 1, vars: 1, consts: [["class", "completer-dropdown-holder", 4, "ngIf"], [1, "completer-dropdown-holder"], [1, "completer-dropdown", 3, "ngStyle"], ["dropdown", ""], [1, "completer-row-wrapper"], ["class", "completer-no-results", 4, "ngIf"], [1, "completer-no-results"], ["noResults", ""]], template: function MdbAutoCompleterComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, MdbAutoCompleterComponent_div_0_Template, 6, 5, "div", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.isOpen());
    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgStyle], styles: ["@charset \"UTF-8\";.mdb-autocomplete{margin-bottom:1px}.mdb-autocomplete::-webkit-search-cancel-button,.mdb-autocomplete::-webkit-search-decoration,.mdb-autocomplete::-webkit-search-results-button,.mdb-autocomplete::-webkit-search-results-decoration{-webkit-appearance:none}button:focus{outline:0!important}button.mdb-autocomplete-clear{background-color:transparent;border:none;color:#000;cursor:pointer;font-size:1rem;outline:none;position:absolute;right:4px;top:13px}button.mdb-autocomplete-clear:focus{color:#4285f4;outline:none}button.mdb-autocomplete-clear:before{content:\"\u2715\"}.md-outline .mdb-autocomplete-clear{top:8px}.mdb-autocomplete-wrap{background:#fff;box-shadow:0 2px 5px 0 rgba(0,0,0,.16),0 2px 10px 0 rgba(0,0,0,.12);left:0;list-style-type:none;max-height:210px;overflow-y:auto;padding-left:0;position:absolute;right:0;z-index:100}.mdb-autocomplete-wrap li{cursor:pointer;font-size:.875rem;padding:12px 15px}.mdb-autocomplete-wrap li:hover{background:#eee}.mdb-autocomplete-wrap li.selected{background-color:#eee}.form-inline .md-form .form-control.mdb-autocomplete{width:15rem}ng2-completer .completer-dropdown-holder{margin-top:-1rem}ng2-completer .md-form label{z-index:-1}.mdb-autocomplete-clear:hover,.mdb-autocomplete:hover,mdb-auto-completer:hover{cursor:pointer}.completer-dropdown{background:#fff;box-shadow:0 2px 5px rgba(0,0,0,.25);left:0;margin-top:1px;overflow-x:hidden;overflow-y:auto;position:absolute;right:0;width:100%;z-index:110}.completer-dropdown .completer-row{align-items:center;display:flex;font-size:.875rem;justify-content:space-between;outline:none;padding:12px 15px;width:100%}.completer-dropdown .completer-row .completer-description{font-size:14px}.completer-dropdown .completer-row .completer-image-holder .completer-image-default{height:16px;width:16px}.completer-dropdown .completer-no-results,.completer-dropdown .completer-searching{font-size:.875rem;padding:12px 15px}.completer-selected-row{background-color:#eee}.completer-image{border-radius:50%;height:32px;width:32px}.validate-success.ng-valid .completer-input{border-bottom:1px solid #00c851!important;box-shadow:0 1px 0 0 #00c851!important}.validate-success.ng-valid .completer-holder label{color:#00c851!important}.form-submitted .validate-error.ng-invalid .completer-input,.validate-error.ng-invalid.ng-touched .completer-input{border-bottom:1px solid #f44336!important;box-shadow:0 1px 0 0 #f44336!important}.form-submitted .validate-error.ng-invalid .completer-holder label,.validate-error.ng-invalid.ng-touched .completer-holder label{color:#f44336!important}.completer-row:hover,.highlight-row{background-color:#eee}"], encapsulation: 2 });
MdbAutoCompleterComponent.ctorParameters = () => [
    { type: Renderer2 },
    { type: ElementRef },
    { type: String, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }
];
MdbAutoCompleterComponent.propDecorators = {
    textNoResults: [{ type: Input }],
    clearButton: [{ type: Input }],
    clearButtonTabIndex: [{ type: Input }],
    appendToBody: [{ type: Input }],
    dropdownPosition: [{ type: Input }],
    disabled: [{ type: Input }],
    visibleOptions: [{ type: Input }],
    optionHeight: [{ type: Input }],
    dropdownHeight: [{ type: Input }],
    displayValue: [{ type: Input }],
    select: [{ type: Output }],
    selected: [{ type: Output }],
    optionList: [{ type: ContentChildren, args: [MdbOptionComponent, { descendants: true, read: ElementRef },] }],
    mdbOptions: [{ type: ContentChildren, args: [MdbOptionComponent, { descendants: true },] }],
    dropdown: [{ type: ViewChild, args: ['dropdown',] }],
    noResultsEl: [{ type: ViewChild, args: ['noResults',] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MdbAutoCompleterComponent, [{
        type: Component,
        args: [{
                selector: 'mdb-auto-completer',
                template: "<div class=\"completer-dropdown-holder\" *ngIf=\"isOpen()\">\n  <div\n    class=\"completer-dropdown\"\n    #dropdown\n    [ngStyle]=\"{\n      'pointer-events': optionList.length === 0 ? 'none' : 'auto',\n      'max-height.px': _visibleOptions ? _visibleOptions * _optionHeight : _dropdownHeight\n    }\"\n  >\n    <div class=\"completer-row-wrapper\">\n      <div *ngIf=\"textNoResults && optionList.length === 0\" class=\"completer-no-results\" #noResults>\n        {{ textNoResults }}\n      </div>\n      <ng-content #content></ng-content>\n    </div>\n  </div>\n</div>\n",
                encapsulation: ViewEncapsulation.None,
                exportAs: 'mdbAutoCompleter',
                providers: [{ provide: MDB_OPTION_PARENT, useExisting: MdbAutoCompleterComponent }],
                styles: ["@charset \"UTF-8\";.mdb-autocomplete{margin-bottom:1px}.mdb-autocomplete::-webkit-search-cancel-button,.mdb-autocomplete::-webkit-search-decoration,.mdb-autocomplete::-webkit-search-results-button,.mdb-autocomplete::-webkit-search-results-decoration{-webkit-appearance:none}button:focus{outline:0!important}button.mdb-autocomplete-clear{background-color:transparent;border:none;color:#000;cursor:pointer;font-size:1rem;outline:none;position:absolute;right:4px;top:13px}button.mdb-autocomplete-clear:focus{color:#4285f4;outline:none}button.mdb-autocomplete-clear:before{content:\"\u2715\"}.md-outline .mdb-autocomplete-clear{top:8px}.mdb-autocomplete-wrap{background:#fff;box-shadow:0 2px 5px 0 rgba(0,0,0,.16),0 2px 10px 0 rgba(0,0,0,.12);left:0;list-style-type:none;max-height:210px;overflow-y:auto;padding-left:0;position:absolute;right:0;z-index:100}.mdb-autocomplete-wrap li{cursor:pointer;font-size:.875rem;padding:12px 15px}.mdb-autocomplete-wrap li:hover{background:#eee}.mdb-autocomplete-wrap li.selected{background-color:#eee}.form-inline .md-form .form-control.mdb-autocomplete{width:15rem}ng2-completer .completer-dropdown-holder{margin-top:-1rem}ng2-completer .md-form label{z-index:-1}.mdb-autocomplete-clear:hover,.mdb-autocomplete:hover,mdb-auto-completer:hover{cursor:pointer}.completer-dropdown{background:#fff;box-shadow:0 2px 5px rgba(0,0,0,.25);left:0;margin-top:1px;overflow-x:hidden;overflow-y:auto;position:absolute;right:0;width:100%;z-index:110}.completer-dropdown .completer-row{align-items:center;display:flex;font-size:.875rem;justify-content:space-between;outline:none;padding:12px 15px;width:100%}.completer-dropdown .completer-row .completer-description{font-size:14px}.completer-dropdown .completer-row .completer-image-holder .completer-image-default{height:16px;width:16px}.completer-dropdown .completer-no-results,.completer-dropdown .completer-searching{font-size:.875rem;padding:12px 15px}.completer-selected-row{background-color:#eee}.completer-image{border-radius:50%;height:32px;width:32px}.validate-success.ng-valid .completer-input{border-bottom:1px solid #00c851!important;box-shadow:0 1px 0 0 #00c851!important}.validate-success.ng-valid .completer-holder label{color:#00c851!important}.form-submitted .validate-error.ng-invalid .completer-input,.validate-error.ng-invalid.ng-touched .completer-input{border-bottom:1px solid #f44336!important;box-shadow:0 1px 0 0 #f44336!important}.form-submitted .validate-error.ng-invalid .completer-holder label,.validate-error.ng-invalid.ng-touched .completer-holder label{color:#f44336!important}.completer-row:hover,.highlight-row{background-color:#eee}"]
            }]
    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }, { type: String, decorators: [{
                type: Inject,
                args: [PLATFORM_ID]
            }] }]; }, { clearButton: [{
            type: Input
        }], clearButtonTabIndex: [{
            type: Input
        }], dropdownPosition: [{
            type: Input
        }], select: [{
            type: Output
        }], selected: [{
            type: Output
        }], visibleOptions: [{
            type: Input
        }], optionHeight: [{
            type: Input
        }], dropdownHeight: [{
            type: Input
        }], textNoResults: [{
            type: Input
        }], appendToBody: [{
            type: Input
        }], disabled: [{
            type: Input
        }], displayValue: [{
            type: Input
        }], optionList: [{
            type: ContentChildren,
            args: [MdbOptionComponent, { descendants: true, read: ElementRef }]
        }], mdbOptions: [{
            type: ContentChildren,
            args: [MdbOptionComponent, { descendants: true }]
        }], dropdown: [{
            type: ViewChild,
            args: ['dropdown']
        }], noResultsEl: [{
            type: ViewChild,
            args: ['noResults']
        }] }); })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,