import { Component, EventEmitter, Input, Output, ViewChild, ViewEncapsulation, ElementRef, HostListener, Renderer2, ChangeDetectorRef, ChangeDetectionStrategy, } from '@angular/core';
import { trigger, state, style, transition, animate } from '@angular/animations';
import { OptionList } from './option-list';
import { Subject } from 'rxjs';
import { debounceTime, takeUntil, tap, map } from 'rxjs/operators';
import { A, NINE, Z, ZERO } from '../../free/utils/keyboard-navigation';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';

const _c0 = ["filterInput"];
const _c1 = ["optionsList"];
const _c2 = ["dropdownContent"];
const _c3 = ["customContent"];
function SelectDropdownComponent_div_2_Template(rf, ctx) { if (rf & 1) {
    const _r9 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 11);
    ɵngcc0.ɵɵelementStart(1, "input", 12, 13);
    ɵngcc0.ɵɵlistener("input", function SelectDropdownComponent_div_2_Template_input_input_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8.onSingleFilterInput($event); })("keydown", function SelectDropdownComponent_div_2_Template_input_keydown_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10.onSingleFilterKeydown($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("placeholder", ctx_r1.placeholder);
    ɵngcc0.ɵɵattribute("autocomplete", ctx_r1.filterAutocomplete ? "on" : "off")("role", "searchbox");
} }
function SelectDropdownComponent_li_6_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 16);
    ɵngcc0.ɵɵelement(1, "input", 17);
    ɵngcc0.ɵɵelement(2, "label");
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r11 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMapInterpolate1("form-check-input ", ctx_r11.customClass, "");
    ɵngcc0.ɵɵproperty("checked", ctx_r11.selectAllSelected);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r11.selectAllLabel, " ");
} }
const _c4 = function (a0) { return { "height.px": a0 }; };
function SelectDropdownComponent_li_6_Template(rf, ctx) { if (rf & 1) {
    const _r13 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li", 14);
    ɵngcc0.ɵɵlistener("click", function SelectDropdownComponent_li_6_Template_li_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r13); const ctx_r12 = ɵngcc0.ɵɵnextContext(); return ctx_r12.onSelectAllClick(); });
    ɵngcc0.ɵɵtemplate(1, SelectDropdownComponent_li_6_span_1_Template, 4, 5, "span", 15);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngStyle", ɵngcc0.ɵɵpureFunction1(2, _c4, ctx_r3.optionHeight));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r3.multiple);
} }
function SelectDropdownComponent_li_7_img_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "img", 21);
} if (rf & 2) {
    const option_r14 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("src", option_r14.icon, ɵngcc0.ɵɵsanitizeUrl);
} }
const _c5 = function (a0, a1) { return { "background-color": a0, color: a1 }; };
function SelectDropdownComponent_li_7_span_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 22);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const option_r14 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r16 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngStyle", ɵngcc0.ɵɵpureFunction2(2, _c5, ctx_r16.getOptionStyle(option_r14)["background-color"], ctx_r16.getOptionStyle(option_r14)["color"]));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(option_r14.label);
} }
function SelectDropdownComponent_li_7_span_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 22);
    ɵngcc0.ɵɵelement(1, "input", 23);
    ɵngcc0.ɵɵelement(2, "label");
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const option_r14 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r17 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngStyle", ɵngcc0.ɵɵpureFunction2(7, _c5, ctx_r17.getOptionStyle(option_r14)["background-color"], ctx_r17.getOptionStyle(option_r14)["color"]));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMapInterpolate1("form-check-input ", ctx_r17.customClass, "");
    ɵngcc0.ɵɵproperty("checked", option_r14.selected)("disabled", option_r14.disabled);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", option_r14.label, " ");
} }
const _c6 = function (a0, a1, a2, a3, a4, a5) { return { "heavy-rain-gradient": a0, active: a1, selected: a2, disabled: a3, optgroup: a4, "d-flex justify-content-between flex-row-reverse align-items-center": a5 }; };
const _c7 = function (a0, a1, a2, a3) { return { "height.px": a0, "line-height.px": a1, "background-color": a2, color: a3 }; };
function SelectDropdownComponent_li_7_Template(rf, ctx) { if (rf & 1) {
    const _r22 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li", 18);
    ɵngcc0.ɵɵlistener("click", function SelectDropdownComponent_li_7_Template_li_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r22); const option_r14 = ctx.$implicit; const ctx_r21 = ɵngcc0.ɵɵnextContext(); return ctx_r21.onOptionClick(option_r14); })("mouseover", function SelectDropdownComponent_li_7_Template_li_mouseover_0_listener() { const option_r14 = ctx.$implicit; return option_r14.hovered = true; })("mouseleave", function SelectDropdownComponent_li_7_Template_li_mouseleave_0_listener() { const option_r14 = ctx.$implicit; return option_r14.hovered = false; });
    ɵngcc0.ɵɵtemplate(1, SelectDropdownComponent_li_7_img_1_Template, 1, 1, "img", 19);
    ɵngcc0.ɵɵtemplate(2, SelectDropdownComponent_li_7_span_2_Template, 2, 5, "span", 20);
    ɵngcc0.ɵɵtemplate(3, SelectDropdownComponent_li_7_span_3_Template, 4, 10, "span", 20);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const option_r14 = ctx.$implicit;
    const ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction6(8, _c6, option_r14.highlighted && !ctx_r4.highlightColor, option_r14.highlighted, option_r14.selected, option_r14.disabled, option_r14.group, option_r14.icon))("ngStyle", ɵngcc0.ɵɵpureFunction4(15, _c7, ctx_r4.optionHeight, ctx_r4.optionHeight, ctx_r4.getOptionStyle(option_r14)["background-color"], ctx_r4.getOptionStyle(option_r14)["color"]));
    ɵngcc0.ɵɵattribute("role", "option")("aria-selected", option_r14.selected)("aria-disabled", option_r14.disabled);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", option_r14.icon !== "");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r4.multiple);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r4.multiple);
} }
function SelectDropdownComponent_li_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "li", 24);
    ɵngcc0.ɵɵelementStart(1, "span");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r5 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngStyle", ɵngcc0.ɵɵpureFunction1(2, _c4, ctx_r5.optionHeight));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r5.notFoundMsg);
} }
const _c8 = function (a0, a1, a2) { return { "top.px": a0, "left.px": a1, "width.px": a2 }; };
const _c9 = function (a0, a1) { return { startHeight: a0, endHeight: a1 }; };
const _c10 = function (a0, a1) { return { value: a0, params: a1 }; };
const _c11 = function (a0) { return { "multiple-select-dropdown": a0 }; };
const _c12 = ["*"];
export class SelectDropdownComponent {
    constructor(_elementRef, _renderer, cdRef) {
        this._elementRef = _elementRef;
        this._renderer = _renderer;
        this.cdRef = cdRef;
        this.customClass = '';
        this.visibleOptions = 4;
        this.selectAllLabel = 'Select all';
        this.outline = false;
        this.close = new EventEmitter();
        this.optionClicked = new EventEmitter();
        this.singleFilterClick = new EventEmitter();
        this.singleFilterInput = new EventEmitter();
        this.singleFilterKeydown = new EventEmitter();
        this.animationDone = new EventEmitter();
        this.animationStart = new EventEmitter();
        this.selectAll = new EventEmitter();
        this.disabledColor = '#fff';
        this.disabledTextColor = '9e9e9e';
        // Used in sliding-down animation
        this.state = 'invisible';
        this.startHeight = 0;
        this.endHeight = 45;
        this.hasOptionsItems = true;
        this._destroy = new Subject();
        this._pressedKeysStream = new Subject();
        this._pressedKeys = [];
        this.selectAllSelected = false;
        this.searchIndex = 0;
        this.previousKey = '';
    }
    onWindowKeydown(event) {
        if ((event.keyCode >= A && event.keyCode <= Z) ||
            (event.keyCode >= ZERO && event.keyCode <= NINE)) {
            this._pressedKeysStream.next(String.fromCharCode(event.keyCode));
        }
    }
    highlightOptionByTyping() {
        this._pressedKeysStream
            .pipe(tap((key) => this._pressedKeys.push(key)), map(() => this._pressedKeys.join('').toLocaleLowerCase()), debounceTime(200), takeUntil(this._destroy))
            .subscribe((searchKey) => {
            const items = Array.from(this.optionList['_options'])
                .filter((elem) => !elem.group)
                .filter((elem) => !elem.disabled)
                .map((el) => el.wrappedOption.label || el.wrappedOption.value);
            this.navigateThroughArray(searchKey, items);
            this.previousKey = searchKey;
        });
    }
    navigateThroughArray(key, itemSource) {
        const items = itemSource.filter((el) => el
            .toString()
            .toLowerCase()
            .startsWith(key.toString().toLowerCase()));
        if (this.searchIndex > items.length - 1 || key !== this.previousKey) {
            this.searchIndex = 0;
        }
        this.highlightedItem = this.optionList.filtered.find((el) => el.wrappedOption.label === items[this.searchIndex]);
        this.searchIndex++;
        if (this.highlightedItem) {
            this.optionList.highlightOption(this.highlightedItem);
            this.cdRef.markForCheck();
        }
        this.moveHighlightedIntoView();
        this._pressedKeys = [];
    }
    /** Event handlers. **/
    onkeyup() {
        this.hasOptionsItems = this.optionList.filtered.length > 0;
        this.updateSelectAllState();
    }
    onkeydown() {
        this.setOptionHeight();
    }
    ngOnInit() {
        this.updateSelectAllState();
        this.optionsReset();
        this.setDropdownHeight();
        this.setVisibleOptionsNumber();
        this.highlightOptionByTyping();
    }
    setDropdownHeight() {
        this.optionList.options.filter(el => () => {
            if (el.icon) {
                this._renderer.setStyle(this.optionsList.nativeElement, 'height', this.dropdownHeight + 8 + 'px');
            }
            else {
                this._renderer.setStyle(this.optionsList.nativeElement, 'height', this.dropdownHeight + 'px');
            }
        });
    }
    setVisibleOptionsNumber() {
        this._renderer.setStyle(this.optionsList.nativeElement, 'max-height', this.dropdownMaxHeight + 'px');
    }
    setOptionHeight() {
        const optionsItems = Array.from(this.optionsList.nativeElement.firstElementChild.children);
        optionsItems.forEach((el) => {
            const isCustomElement = el.classList.contains('custom-select-content');
            if (el.firstElementChild) {
                if (this.optionHeight && el.firstElementChild.tagName !== 'IMG' && !isCustomElement) {
                    this._renderer.setStyle(el.firstElementChild, 'height', `${this.optionHeight}px`);
                }
                if (el.firstElementChild.tagName !== 'IMG' && !isCustomElement) {
                    this._renderer.setStyle(el.firstElementChild, 'line-height', `${this.optionHeight}px`);
                }
            }
        });
    }
    ngOnChanges(changes) {
        if (changes.hasOwnProperty('optionList')) {
            this.optionsReset();
        }
        if (changes.hasOwnProperty('dropdownHeight')) {
            this.setDropdownHeight();
        }
        const container = this._elementRef.nativeElement.classList;
        setTimeout(() => {
            container.add('fadeInSelect');
        }, 200);
    }
    ngAfterViewInit() {
        // Sliding-down animation
        this.endHeight = this.dropdownContent.nativeElement.clientHeight;
        this.state = this.state === 'invisible' ? 'visible' : 'invisible';
        this.cdRef.detectChanges();
        if (this.multiple) {
            const disabledElements = this._elementRef.nativeElement.querySelectorAll('.disabled.optgroup');
            for (let i = 0; i < disabledElements.length; i++) {
                this._renderer.setStyle(disabledElements[i].firstElementChild.lastElementChild, 'display', 'none');
            }
        }
        this.setOptionHeight();
        this.moveHighlightedIntoView();
        if (this.filterEnabled) {
            setTimeout(() => {
                this.filterInput.nativeElement.focus();
            }, 0);
        }
    }
    // Filter input (single select).
    onSingleFilterClick() {
        this.singleFilterClick.emit(null);
    }
    onSingleFilterInput(event) {
        this.singleFilterInput.emit(event.target.value);
    }
    onSingleFilterKeydown(event) {
        this.singleFilterKeydown.emit(event);
    }
    // Options list.
    onOptionsWheel(event) {
        this.handleOptionsWheel(event);
    }
    onOptionClick(option) {
        this.optionClicked.emit(option);
        this.updateSelectAllState();
    }
    /** Initialization. **/
    optionsReset() {
        this.optionList.filter('');
        this.optionList.highlight();
    }
    /** View. **/
    getOptionStyle(option) {
        if (option.highlighted || option.hovered) {
            const optionStyle = {};
            optionStyle['height.px'] = this.optionHeight;
            if (typeof this.highlightColor !== 'undefined') {
                optionStyle['background-color'] = this.highlightColor;
            }
            if (typeof this.highlightTextColor !== 'undefined') {
                optionStyle['color'] = this.highlightTextColor;
            }
            return optionStyle;
        }
        else {
            return {};
        }
    }
    onSelectAllClick() {
        this.selectAllSelected = !this.selectAllSelected;
        this.selectAll.emit(this.selectAllSelected);
    }
    updateSelectAllState() {
        const areAllSelected = this.optionList.filtered
            .filter((option) => !option.disabled)
            .every((option) => {
            return option.selected ? true : false;
        });
        areAllSelected ? (this.selectAllSelected = true) : (this.selectAllSelected = false);
        this.cdRef.detectChanges();
    }
    clearFilterInput() {
        if (this.filterEnabled) {
            this.filterInput.nativeElement.value = '';
        }
    }
    onAnimationDone() {
        this.animationDone.emit();
    }
    onAnimationStart() {
        this.animationStart.emit();
    }
    moveHighlightedIntoView() {
        let listHeight;
        const list = this.optionsList.nativeElement;
        listHeight =
            this.multiple && this.enableSelectAll
                ? list.offsetHeight - this.optionHeight
                : list.offsetHeight;
        const itemIndex = this.optionList.getHighlightedIndex();
        if (itemIndex > -1) {
            const item = list.children[0].children[itemIndex];
            const itemHeight = item.offsetHeight;
            const itemTop = itemIndex * itemHeight;
            const itemBottom = itemTop + itemHeight;
            const viewTop = list.scrollTop;
            const viewBottom = viewTop + listHeight;
            if (itemBottom > viewBottom) {
                list.scrollTop = itemBottom - listHeight;
            }
            else if (itemTop < viewTop) {
                list.scrollTop = itemTop;
            }
        }
    }
    handleOptionsWheel(e) {
        const div = this.optionsList.nativeElement;
        const atTop = div.scrollTop === 0;
        const atBottom = div.offsetHeight + div.scrollTop === div.scrollHeight;
        if (atTop && e.deltaY < 0) {
            e.preventDefault();
        }
        else if (atBottom && e.deltaY > 0) {
            e.preventDefault();
        }
    }
    ngOnDestroy() {
        this._destroy.next();
        this._destroy.complete();
    }
}
SelectDropdownComponent.ɵfac = function SelectDropdownComponent_Factory(t) { return new (t || SelectDropdownComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };
SelectDropdownComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SelectDropdownComponent, selectors: [["mdb-select-dropdown"]], viewQuery: function SelectDropdownComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c0, true);
        ɵngcc0.ɵɵstaticViewQuery(_c1, true);
        ɵngcc0.ɵɵstaticViewQuery(_c2, true);
        ɵngcc0.ɵɵstaticViewQuery(_c3, true);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.filterInput = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.optionsList = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.dropdownContent = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.customContent = _t.first);
    } }, hostBindings: function SelectDropdownComponent_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("keydown", function SelectDropdownComponent_keydown_HostBindingHandler($event) { return ctx.onWindowKeydown($event); }, false, ɵngcc0.ɵɵresolveWindow)("keyup", function SelectDropdownComponent_keyup_HostBindingHandler() { return ctx.onkeyup(); })("input", function SelectDropdownComponent_input_HostBindingHandler() { return ctx.onkeydown(); });
    } }, inputs: { customClass: "customClass", visibleOptions: "visibleOptions", selectAllLabel: "selectAllLabel", outline: "outline", filterEnabled: "filterEnabled", filterAutocomplete: "filterAutocomplete", highlightColor: "highlightColor", highlightTextColor: "highlightTextColor", left: "left", multiple: "multiple", notFoundMsg: "notFoundMsg", optionList: "optionList", top: "top", width: "width", placeholder: "placeholder", dropdownHeight: "dropdownHeight", dropdownMaxHeight: "dropdownMaxHeight", optionHeight: "optionHeight", enableSelectAll: "enableSelectAll" }, outputs: { close: "close", optionClicked: "optionClicked", singleFilterClick: "singleFilterClick", singleFilterInput: "singleFilterInput", singleFilterKeydown: "singleFilterKeydown", animationDone: "animationDone", animationStart: "animationStart", selectAll: "selectAll" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c12, decls: 12, vars: 19, consts: [[1, "dropdown-content", 3, "ngStyle", "click"], ["dropdownContent", ""], ["class", "filter md-form px-2", 4, "ngIf"], [1, "options"], ["optionsList", ""], [1, "select-dropdown", 3, "ngClass", "wheel"], [3, "ngStyle", "click", 4, "ngIf"], [3, "ngClass", "ngStyle", "click", "mouseover", "mouseleave", 4, "ngFor", "ngForOf"], ["class", "message disabled", 3, "ngStyle", 4, "ngIf"], [1, "custom-select-content"], ["customContent", ""], [1, "filter", "md-form", "px-2"], ["type", "text", 1, "search", "form-control", "w-100", "d-block", 3, "placeholder", "input", "keydown"], ["filterInput", ""], [3, "ngStyle", "click"], ["class", "filtrable", 4, "ngIf"], [1, "filtrable"], ["type", "checkbox", 3, "checked"], [3, "ngClass", "ngStyle", "click", "mouseover", "mouseleave"], ["class", "rounded-circle", 3, "src", 4, "ngIf"], ["class", "deselect-option", 3, "ngStyle", 4, "ngIf"], [1, "rounded-circle", 3, "src"], [1, "deselect-option", 3, "ngStyle"], ["type", "checkbox", 3, "checked", "disabled"], [1, "message", "disabled", 3, "ngStyle"]], template: function SelectDropdownComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "div", 0, 1);
        ɵngcc0.ɵɵlistener("click", function SelectDropdownComponent_Template_div_click_0_listener($event) { return $event.stopPropagation(); })("@dropdownAnimation.done", function SelectDropdownComponent_Template_div_animation_dropdownAnimation_done_0_listener() { return ctx.onAnimationDone(); })("@dropdownAnimation.start", function SelectDropdownComponent_Template_div_animation_dropdownAnimation_start_0_listener() { return ctx.onAnimationStart(); });
        ɵngcc0.ɵɵtemplate(2, SelectDropdownComponent_div_2_Template, 3, 3, "div", 2);
        ɵngcc0.ɵɵelementStart(3, "div", 3, 4);
        ɵngcc0.ɵɵelementStart(5, "ul", 5);
        ɵngcc0.ɵɵlistener("wheel", function SelectDropdownComponent_Template_ul_wheel_5_listener($event) { return ctx.onOptionsWheel($event); });
        ɵngcc0.ɵɵtemplate(6, SelectDropdownComponent_li_6_Template, 2, 4, "li", 6);
        ɵngcc0.ɵɵtemplate(7, SelectDropdownComponent_li_7_Template, 4, 20, "li", 7);
        ɵngcc0.ɵɵtemplate(8, SelectDropdownComponent_li_8_Template, 3, 4, "li", 8);
        ɵngcc0.ɵɵelementStart(9, "li", 9, 10);
        ɵngcc0.ɵɵprojection(11);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngStyle", ɵngcc0.ɵɵpureFunction3(7, _c8, ctx.top, ctx.left, ctx.width))("@dropdownAnimation", ɵngcc0.ɵɵpureFunction2(14, _c10, ctx.state, ɵngcc0.ɵɵpureFunction2(11, _c9, ctx.startHeight, ctx.endHeight)));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.filterEnabled);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(17, _c11, ctx.multiple));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.multiple && ctx.enableSelectAll && ctx.hasOptionsItems);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.optionList.filtered);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.hasOptionsItems);
    } }, directives: [ɵngcc1.NgStyle, ɵngcc1.NgIf, ɵngcc1.NgClass, ɵngcc1.NgForOf], encapsulation: 2, data: { animation: [
            trigger('dropdownAnimation', [
                state('invisible', style({ opacity: 0, height: '0px' })),
                state('visible', style({ opacity: 1, height: '*' })),
                transition('invisible => visible', animate('300ms ease')),
                transition('visible => invisible', animate('300ms ease')),
            ]),
        ] }, changeDetection: 0 });
SelectDropdownComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: Renderer2 },
    { type: ChangeDetectorRef }
];
SelectDropdownComponent.propDecorators = {
    filterEnabled: [{ type: Input }],
    filterAutocomplete: [{ type: Input }],
    highlightColor: [{ type: Input }],
    highlightTextColor: [{ type: Input }],
    left: [{ type: Input }],
    multiple: [{ type: Input }],
    notFoundMsg: [{ type: Input }],
    optionList: [{ type: Input }],
    top: [{ type: Input }],
    width: [{ type: Input }],
    placeholder: [{ type: Input }],
    customClass: [{ type: Input }],
    visibleOptions: [{ type: Input }],
    dropdownHeight: [{ type: Input }],
    dropdownMaxHeight: [{ type: Input }],
    optionHeight: [{ type: Input }],
    enableSelectAll: [{ type: Input }],
    selectAllLabel: [{ type: Input }],
    outline: [{ type: Input }],
    close: [{ type: Output }],
    optionClicked: [{ type: Output }],
    singleFilterClick: [{ type: Output }],
    singleFilterInput: [{ type: Output }],
    singleFilterKeydown: [{ type: Output }],
    animationDone: [{ type: Output }],
    animationStart: [{ type: Output }],
    selectAll: [{ type: Output }],
    filterInput: [{ type: ViewChild, args: ['filterInput',] }],
    optionsList: [{ type: ViewChild, args: ['optionsList', { static: true },] }],
    dropdownContent: [{ type: ViewChild, args: ['dropdownContent', { static: true },] }],
    customContent: [{ type: ViewChild, args: ['customContent', { static: true },] }],
    onWindowKeydown: [{ type: HostListener, args: ['window: keydown', ['$event'],] }],
    onkeyup: [{ type: HostListener, args: ['keyup',] }],
    onkeydown: [{ type: HostListener, args: ['input',] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SelectDropdownComponent, [{
        type: Component,
        args: [{
                selector: 'mdb-select-dropdown',
                template: "<div\n  (click)=\"$event.stopPropagation()\"\n  class=\"dropdown-content\"\n  #dropdownContent\n  [ngStyle]=\"{ 'top.px': top, 'left.px': left, 'width.px': width }\"\n  [@dropdownAnimation]=\"{\n    value: state,\n    params: { startHeight: startHeight, endHeight: endHeight }\n  }\"\n  (@dropdownAnimation.done)=\"onAnimationDone()\"\n  (@dropdownAnimation.start)=\"onAnimationStart()\"\n>\n  <div class=\"filter md-form px-2\" *ngIf=\"filterEnabled\">\n    <input\n      type=\"text\"\n      class=\"search form-control w-100 d-block\"\n      #filterInput\n      [attr.autocomplete]=\"filterAutocomplete ? 'on' : 'off'\"\n      [attr.role]=\"'searchbox'\"\n      [placeholder]=\"placeholder\"\n      (input)=\"onSingleFilterInput($event)\"\n      (keydown)=\"onSingleFilterKeydown($event)\"\n    />\n  </div>\n\n  <div class=\"options\" #optionsList>\n    <ul\n      class=\"select-dropdown\"\n      [ngClass]=\"{ 'multiple-select-dropdown': multiple }\"\n      (wheel)=\"onOptionsWheel($event)\"\n    >\n      <li\n        [ngStyle]=\"{ 'height.px': optionHeight }\"\n        *ngIf=\"multiple && enableSelectAll && this.hasOptionsItems\"\n        (click)=\"onSelectAllClick()\"\n      >\n        <span class=\"filtrable\" *ngIf=\"multiple\">\n          <input\n            type=\"checkbox\"\n            [checked]=\"selectAllSelected\"\n            class=\"form-check-input {{ customClass }}\"\n          />\n          <label></label>\n          {{ selectAllLabel }}\n        </span>\n      </li>\n      <li\n        *ngFor=\"let option of optionList.filtered\"\n        [ngClass]=\"{\n          'heavy-rain-gradient': option.highlighted && !highlightColor,\n          active: option.highlighted,\n          selected: option.selected,\n          disabled: option.disabled,\n          optgroup: option.group,\n          'd-flex justify-content-between flex-row-reverse align-items-center': option.icon\n        }\"\n        [ngStyle]=\"{\n          'height.px': optionHeight,\n          'line-height.px': optionHeight,\n          'background-color': getOptionStyle(option)['background-color'],\n          color: getOptionStyle(option)['color']\n        }\"\n        [attr.role]=\"'option'\"\n        [attr.aria-selected]=\"option.selected\"\n        [attr.aria-disabled]=\"option.disabled\"\n        (click)=\"onOptionClick(option)\"\n        (mouseover)=\"option.hovered = true\"\n        (mouseleave)=\"option.hovered = false\"\n      >\n        <img class=\"rounded-circle\" [src]=\"option.icon\" *ngIf=\"option.icon !== ''\" />\n        <span\n          class=\"deselect-option\"\n          *ngIf=\"!multiple\"\n          [ngStyle]=\"{\n            'background-color': getOptionStyle(option)['background-color'],\n            color: getOptionStyle(option)['color']\n          }\"\n          >{{ option.label }}</span\n        >\n        <span\n          class=\"deselect-option\"\n          [ngStyle]=\"{\n            'background-color': getOptionStyle(option)['background-color'],\n            color: getOptionStyle(option)['color']\n          }\"\n          *ngIf=\"multiple\"\n        >\n          <input\n            type=\"checkbox\"\n            [checked]=\"option.selected\"\n            class=\"form-check-input {{ customClass }}\"\n            [disabled]=\"option.disabled\"\n          />\n          <label></label>\n          {{ option.label }}\n        </span>\n      </li>\n      <li\n        *ngIf=\"!this.hasOptionsItems\"\n        class=\"message disabled\"\n        [ngStyle]=\"{ 'height.px': optionHeight }\"\n      >\n        <span>{{ notFoundMsg }}</span>\n      </li>\n      <li #customContent class=\"custom-select-content\">\n        <ng-content></ng-content>\n      </li>\n    </ul>\n  </div>\n</div>\n",
                encapsulation: ViewEncapsulation.None,
                changeDetection: ChangeDetectionStrategy.OnPush,
                animations: [
                    trigger('dropdownAnimation', [
                        state('invisible', style({ opacity: 0, height: '0px' })),
                        state('visible', style({ opacity: 1, height: '*' })),
                        transition('invisible => visible', animate('300ms ease')),
                        transition('visible => invisible', animate('300ms ease')),
                    ]),
                ]
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ChangeDetectorRef }]; }, { customClass: [{
            type: Input
        }], visibleOptions: [{
            type: Input
        }], selectAllLabel: [{
            type: Input
        }], outline: [{
            type: Input
        }], close: [{
            type: Output
        }], optionClicked: [{
            type: Output
        }], singleFilterClick: [{
            type: Output
        }], singleFilterInput: [{
            type: Output
        }], singleFilterKeydown: [{
            type: Output
        }], animationDone: [{
            type: Output
        }], animationStart: [{
            type: Output
        }], selectAll: [{
            type: Output
        }], onWindowKeydown: [{
            type: HostListener,
            args: ['window: keydown', ['$event']]
        }], 
    /** Event handlers. **/
    onkeyup: [{
            type: HostListener,
            args: ['keyup']
        }], onkeydown: [{
            type: HostListener,
            args: ['input']
        }], filterEnabled: [{
            type: Input
        }], filterAutocomplete: [{
            type: Input
        }], highlightColor: [{
            type: Input
        }], highlightTextColor: [{
            type: Input
        }], left: [{
            type: Input
        }], multiple: [{
            type: Input
        }], notFoundMsg: [{
            type: Input
        }], optionList: [{
            type: Input
        }], top: [{
            type: Input
        }], width: [{
            type: Input
        }], placeholder: [{
            type: Input
        }], dropdownHeight: [{
            type: Input
        }], dropdownMaxHeight: [{
            type: Input
        }], optionHeight: [{
            type: Input
        }], enableSelectAll: [{
            type: Input
        }], filterInput: [{
            type: ViewChild,
            args: ['filterInput']
        }], optionsList: [{
            type: ViewChild,
            args: ['optionsList', { static: true }]
        }], dropdownContent: [{
            type: ViewChild,
            args: ['dropdownContent', { static: true }]
        }], customContent: [{
            type: ViewChild,
            args: ['customContent', { static: true }]
        }] }); })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,