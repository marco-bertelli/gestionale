import { NgModule } from '@angular/core';
import { MdbAutoCompleterComponent } from './components/mdb-auto-completer.component';
import { MdbOptionComponent } from './components/mdb-option.component';
import { MdbAutoCompleterDirective } from './directives/mdb-auto-completer.directive';
import { CommonModule } from '@angular/common';
import { HttpClientModule } from '@angular/common/http';
import { FormsModule } from '@angular/forms';
import { MdbAutoCompleterOptionDirective } from './directives/mdb-auto-completer-option.directive';
import * as ɵngcc0 from '@angular/core';
export class AutoCompleterModule {
}
AutoCompleterModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: AutoCompleterModule });
AutoCompleterModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function AutoCompleterModule_Factory(t) { return new (t || AutoCompleterModule)(); }, imports: [[CommonModule, HttpClientModule, FormsModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(AutoCompleterModule, { declarations: function () { return [MdbAutoCompleterComponent,
        MdbOptionComponent,
        MdbAutoCompleterDirective,
        MdbAutoCompleterOptionDirective]; }, imports: function () { return [CommonModule, HttpClientModule, FormsModule]; }, exports: function () { return [MdbAutoCompleterComponent,
        MdbOptionComponent,
        MdbAutoCompleterDirective,
        MdbAutoCompleterOptionDirective]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AutoCompleterModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, HttpClientModule, FormsModule],
                declarations: [
                    MdbAutoCompleterComponent,
                    MdbOptionComponent,
                    MdbAutoCompleterDirective,
                    MdbAutoCompleterOptionDirective,
                ],
                exports: [
                    MdbAutoCompleterComponent,
                    MdbOptionComponent,
                    MdbAutoCompleterDirective,
                    MdbAutoCompleterOptionDirective,
                ]
            }]
    }], null, null); })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0by1jb21wbGV0ZXIubW9kdWxlLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uZy11aWtpdC1wcm8tc3RhbmRhcmQvc3JjL2xpYi9wcm8vYXV0by1jb21wbGV0ZXIvYXV0by1jb21wbGV0ZXIubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFekMsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sMkNBQTJDLENBQUM7QUFDdEYsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sbUNBQW1DLENBQUM7QUFDdkUsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sMkNBQTJDLENBQUM7QUFDdEYsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3hELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM3QyxPQUFPLEVBQUUsK0JBQStCLEVBQUUsTUFBTSxrREFBa0QsQ0FBQzs7QUFpQm5HLE1BQU0sT0FBTyxtQkFBbUI7QUFDaEM7aURBaEJDLFFBQVEsU0FBQztFQUNSLE9BQU8sRUFBRSxDQUFDLFlBQVksRUFBRSxnQkFBZ0IsRUFBRSxXQUFXLENBQUMsbUJBQ3RELFlBQVksRUFBRSx1QkFDWix5QkFBeUIsdUJBQ3pCLGtCQUFrQix1QkFDbEI7aUJBQXlCLHVCQUN6QiwrQkFBK0Isb0JBQ2hDLG1CQUNELE9BQU8sRUFBRSx1QkFDUCx5QkFBeUI7WUFDekI7RUFBa0IsdUJBQ2xCO2VBQXlCLHVCQUN6QiwrQkFBK0Isb0JBQ2hDLGdCQUNGOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBeEJBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFFQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBaUJBLEFBQUEsQUFBQSxBQUFBLEFBZkEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFDQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IE1kYkF1dG9Db21wbGV0ZXJDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvbWRiLWF1dG8tY29tcGxldGVyLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBNZGJPcHRpb25Db21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvbWRiLW9wdGlvbi5jb21wb25lbnQnO1xuaW1wb3J0IHsgTWRiQXV0b0NvbXBsZXRlckRpcmVjdGl2ZSB9IGZyb20gJy4vZGlyZWN0aXZlcy9tZGItYXV0by1jb21wbGV0ZXIuZGlyZWN0aXZlJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBIdHRwQ2xpZW50TW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnO1xuaW1wb3J0IHsgRm9ybXNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBNZGJBdXRvQ29tcGxldGVyT3B0aW9uRGlyZWN0aXZlIH0gZnJvbSAnLi9kaXJlY3RpdmVzL21kYi1hdXRvLWNvbXBsZXRlci1vcHRpb24uZGlyZWN0aXZlJztcblxuQE5nTW9kdWxlKHtcbiAgaW1wb3J0czogW0NvbW1vbk1vZHVsZSwgSHR0cENsaWVudE1vZHVsZSwgRm9ybXNNb2R1bGVdLFxuICBkZWNsYXJhdGlvbnM6IFtcbiAgICBNZGJBdXRvQ29tcGxldGVyQ29tcG9uZW50LFxuICAgIE1kYk9wdGlvbkNvbXBvbmVudCxcbiAgICBNZGJBdXRvQ29tcGxldGVyRGlyZWN0aXZlLFxuICAgIE1kYkF1dG9Db21wbGV0ZXJPcHRpb25EaXJlY3RpdmUsXG4gIF0sXG4gIGV4cG9ydHM6IFtcbiAgICBNZGJBdXRvQ29tcGxldGVyQ29tcG9uZW50LFxuICAgIE1kYk9wdGlvbkNvbXBvbmVudCxcbiAgICBNZGJBdXRvQ29tcGxldGVyRGlyZWN0aXZlLFxuICAgIE1kYkF1dG9Db21wbGV0ZXJPcHRpb25EaXJlY3RpdmUsXG4gIF0sXG59KVxuZXhwb3J0IGNsYXNzIEF1dG9Db21wbGV0ZXJNb2R1bGUge31cbiJdfQ==