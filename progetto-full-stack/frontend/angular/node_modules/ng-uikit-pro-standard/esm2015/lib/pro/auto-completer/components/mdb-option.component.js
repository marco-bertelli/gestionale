import { Component, ElementRef, Input, HostListener, InjectionToken, Optional, Inject, } from '@angular/core';
import { Subject } from 'rxjs';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../directives/mdb-auto-completer-option.directive';
import * as ɵngcc2 from '@angular/common';

const _c0 = function (a0) { return { "height.px": a0 }; };
const _c1 = ["*"];
export const MDB_OPTION_PARENT = new InjectionToken('MDB_OPTION_PARENT');
export class MdbOptionComponent {
    constructor(el, _parent) {
        this.el = el;
        this._parent = _parent;
        this.clicked = false;
        this.clickSource = new Subject();
        this.click$ = this.clickSource.asObservable();
        this.clicked = false;
    }
    get optionHeight() {
        return this._optionHeight;
    }
    onClick() {
        this.clickSource.next(this);
    }
    get label() {
        return this.el.nativeElement.textContent;
    }
    ngOnInit() {
        if (this._parent.visibleOptions && this._parent.optionHeight) {
            this._optionHeight = this._parent.optionHeight;
        }
    }
}
MdbOptionComponent.ɵfac = function MdbOptionComponent_Factory(t) { return new (t || MdbOptionComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MDB_OPTION_PARENT, 8)); };
MdbOptionComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MdbOptionComponent, selectors: [["mdb-option"]], hostBindings: function MdbOptionComponent_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function MdbOptionComponent_click_HostBindingHandler() { return ctx.onClick(); });
    } }, inputs: { value: "value", disabled: "disabled" }, ngContentSelectors: _c1, decls: 2, vars: 3, consts: [["tabindex", "0", "mdbAutoCompleterOption", "", 1, "completer-row", 3, "ngStyle"]], template: function MdbOptionComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵprojection(1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngStyle", ɵngcc0.ɵɵpureFunction1(1, _c0, ctx._optionHeight ? ctx._optionHeight : "auto"));
    } }, directives: [ɵngcc1.MdbAutoCompleterOptionDirective, ɵngcc2.NgStyle], encapsulation: 2 });
MdbOptionComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MDB_OPTION_PARENT,] }] }
];
MdbOptionComponent.propDecorators = {
    value: [{ type: Input }],
    disabled: [{ type: Input }],
    onClick: [{ type: HostListener, args: ['click',] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MdbOptionComponent, [{
        type: Component,
        args: [{
                selector: 'mdb-option',
                template: "<div\n  tabindex=\"0\"\n  class=\"completer-row\"\n  [ngStyle]=\"{\n    'height.px': _optionHeight ? _optionHeight : 'auto'\n  }\"\n  mdbAutoCompleterOption\n>\n  <ng-content></ng-content>\n</div>\n"
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{
                type: Optional
            }, {
                type: Inject,
                args: [MDB_OPTION_PARENT]
            }] }]; }, { onClick: [{
            type: HostListener,
            args: ['click']
        }], value: [{
            type: Input
        }], disabled: [{
            type: Input
        }] }); })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWRiLW9wdGlvbi5jb21wb25lbnQuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25nLXVpa2l0LXByby1zdGFuZGFyZC9zcmMvbGliL3Byby9hdXRvLWNvbXBsZXRlci9jb21wb25lbnRzL21kYi1vcHRpb24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDTCxTQUFTLEVBQ1QsVUFBVSxFQUNWLEtBQUssRUFDTCxZQUFZLEVBQ1osY0FBYyxFQUNkLFFBQVEsRUFDUixNQUFNLEdBRVAsTUFBTSxlQUFlLENBQUM7QUFFdkIsT0FBTyxFQUFFLE9BQU8sRUFBYyxNQUFNLE1BQU0sQ0FBQzs7Ozs7OztBQU8zQyxNQUFNLENBQUMsTUFBTSxpQkFBaUIsR0FBRyxJQUFJLGNBQWMsQ0FBa0IsbUJBQW1CLENBQUMsQ0FBQztBQU0xRixNQUFNLE9BQU8sa0JBQWtCO0FBQUksSUFjakMsWUFDUyxFQUFjLEVBQzBCLE9BQXdCO0FBQ3ZFLFFBRk8sT0FBRSxHQUFGLEVBQUUsQ0FBWTtBQUN6QixRQUFtRCxZQUFPLEdBQVAsT0FBTyxDQUFpQjtBQUMxRSxRQVRDLFlBQU8sR0FBRyxLQUFLLENBQUM7QUFDakIsUUFFQyxnQkFBVyxHQUFnQyxJQUFJLE9BQU8sRUFBc0IsQ0FBQztBQUM5RSxRQUFDLFdBQU0sR0FBbUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxZQUFZLEVBQUUsQ0FBQztBQUUzRSxRQUlJLElBQUksQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDO0FBQ3hCLElBQUMsQ0FBQztBQUVILElBakJFLElBQUksWUFBWTtBQUFNLFFBQ3BCLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQztBQUM3QixJQUFDLENBQUM7QUFFSCxJQWNFLE9BQU87QUFDUixRQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQy9CLElBQUMsQ0FBQztBQUNGLElBQUMsSUFBSSxLQUFLO0FBQ1YsUUFBRyxPQUFPLElBQUksQ0FBQyxFQUFFLENBQUMsYUFBYSxDQUFDLFdBQVcsQ0FBQztBQUM1QyxJQUFDLENBQUM7QUFDRixJQUFDLFFBQVE7QUFDVCxRQUFHLElBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQyxjQUFjLElBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQyxZQUFZLEVBQUU7QUFDakUsWUFBSyxJQUFJLENBQUMsYUFBYSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDO0FBQ3BELFNBQUk7QUFDSixJQUFDLENBQUM7QUFDRjtnREFyQ0EsU0FBUyxTQUFDLG1CQUNULFFBQVEsRUFBRSxZQUFZLG1CQUN0Qjt1SUFBd0MsZUFDekM7Ozs7Ozs7OzttR0FDSztBQUFFO0FBQ1AsWUF2QkMsVUFBVTtBQUNULDRDQXFDRSxRQUFRLFlBQUksTUFBTSxTQUFDLGlCQUFpQjtBQUFTO0FBQUk7QUFFM0Msb0JBakJSLEtBQUs7QUFBTSx1QkFDWCxLQUFLO0FBQU0sc0JBbUJYLFlBQVksU0FBQyxPQUFPO0FBQ2xCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQTlDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBRUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQU9BLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQU1BLEFBQUEsQUFBQSxBQUFBLEFBY0EsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQURBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBUkEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUdBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFNQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFmQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBZ0JBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUNBLEFBQUEsQUFwQ0EsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFyQkEsQUFBQSxBQXNDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFmQSxBQUFBLEFBQ0EsQUFBQSxBQW1CQSxBQUFBLEFBQUEsQUFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIENvbXBvbmVudCxcbiAgRWxlbWVudFJlZixcbiAgSW5wdXQsXG4gIEhvc3RMaXN0ZW5lcixcbiAgSW5qZWN0aW9uVG9rZW4sXG4gIE9wdGlvbmFsLFxuICBJbmplY3QsXG4gIE9uSW5pdCxcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBJU2VsZWN0ZWRPcHRpb24gfSBmcm9tICcuLi9pbnRlcmZhY2VzL3NlbGVjdGVkLW9wdGlvbi5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgU3ViamVjdCwgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuXG5leHBvcnQgaW50ZXJmYWNlIE1kYk9wdGlvblBhcmVudCB7XG4gIG9wdGlvbkhlaWdodDogbnVtYmVyO1xuICB2aXNpYmxlT3B0aW9uczogbnVtYmVyO1xufVxuXG5leHBvcnQgY29uc3QgTURCX09QVElPTl9QQVJFTlQgPSBuZXcgSW5qZWN0aW9uVG9rZW48TWRiT3B0aW9uUGFyZW50PignTURCX09QVElPTl9QQVJFTlQnKTtcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbWRiLW9wdGlvbicsXG4gIHRlbXBsYXRlVXJsOiAnbWRiLW9wdGlvbi5jb21wb25lbnQuaHRtbCcsXG59KVxuZXhwb3J0IGNsYXNzIE1kYk9wdGlvbkNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIEBJbnB1dCgpIHZhbHVlOiBzdHJpbmc7XG4gIEBJbnB1dCgpIGRpc2FibGVkOiBib29sZWFuO1xuICBfb3B0aW9uSGVpZ2h0OiBhbnk7XG4gIGdldCBvcHRpb25IZWlnaHQoKTogYW55IHtcbiAgICByZXR1cm4gdGhpcy5fb3B0aW9uSGVpZ2h0O1xuICB9XG5cbiAgY2xpY2tlZCA9IGZhbHNlO1xuICBzZWxlY3RlZEl0ZW06IElTZWxlY3RlZE9wdGlvbjtcblxuICBjbGlja1NvdXJjZTogU3ViamVjdDxNZGJPcHRpb25Db21wb25lbnQ+ID0gbmV3IFN1YmplY3Q8TWRiT3B0aW9uQ29tcG9uZW50PigpO1xuICBjbGljayQ6IE9ic2VydmFibGU8TWRiT3B0aW9uQ29tcG9uZW50PiA9IHRoaXMuY2xpY2tTb3VyY2UuYXNPYnNlcnZhYmxlKCk7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHVibGljIGVsOiBFbGVtZW50UmVmLFxuICAgIEBPcHRpb25hbCgpIEBJbmplY3QoTURCX09QVElPTl9QQVJFTlQpIHByaXZhdGUgX3BhcmVudDogTWRiT3B0aW9uUGFyZW50XG4gICkge1xuICAgIHRoaXMuY2xpY2tlZCA9IGZhbHNlO1xuICB9XG5cbiAgQEhvc3RMaXN0ZW5lcignY2xpY2snKVxuICBvbkNsaWNrKCkge1xuICAgIHRoaXMuY2xpY2tTb3VyY2UubmV4dCh0aGlzKTtcbiAgfVxuICBnZXQgbGFiZWwoKSB7XG4gICAgcmV0dXJuIHRoaXMuZWwubmF0aXZlRWxlbWVudC50ZXh0Q29udGVudDtcbiAgfVxuICBuZ09uSW5pdCgpIHtcbiAgICBpZiAodGhpcy5fcGFyZW50LnZpc2libGVPcHRpb25zICYmIHRoaXMuX3BhcmVudC5vcHRpb25IZWlnaHQpIHtcbiAgICAgIHRoaXMuX29wdGlvbkhlaWdodCA9IHRoaXMuX3BhcmVudC5vcHRpb25IZWlnaHQ7XG4gICAgfVxuICB9XG59XG4iXX0=