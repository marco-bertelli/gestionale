import { NgModule, NO_ERRORS_SCHEMA } from '@angular/core';
import { MDBBootstrapModule } from './free/mdb-free.module';
import { MDBBootstrapModulePro } from './pro/mdb-pro.module';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './free/mdb-free.module';
import * as ɵngcc2 from './pro/mdb-pro.module';
export { MDBBootstrapModule } from './free/mdb-free.module';
export { MDBBootstrapModulePro } from './pro/mdb-pro.module';
const MODULES = [MDBBootstrapModule, MDBBootstrapModulePro];
export class MDBRootModules {
}
MDBRootModules.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MDBRootModules });
MDBRootModules.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MDBRootModules_Factory(t) { return new (t || MDBRootModules)(); }, providers: [], imports: [[MDBBootstrapModule.forRoot(), MDBBootstrapModulePro.forRoot()], MDBBootstrapModule, MDBBootstrapModulePro] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MDBRootModules, { imports: [ɵngcc1.MDBRootModule, ɵngcc2.MDBRootModulePro], exports: [MDBBootstrapModule, MDBBootstrapModulePro] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MDBRootModules, [{
        type: NgModule,
        args: [{
                imports: [MDBBootstrapModule.forRoot(), MDBBootstrapModulePro.forRoot()],
                exports: MODULES,
                providers: [],
                schemas: [NO_ERRORS_SCHEMA]
            }]
    }], null, null); })();
export class MDBBootstrapModulesPro {
    static forRoot() {
        return { ngModule: MDBRootModules };
    }
}
MDBBootstrapModulesPro.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MDBBootstrapModulesPro });
MDBBootstrapModulesPro.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MDBBootstrapModulesPro_Factory(t) { return new (t || MDBBootstrapModulesPro)(); }, imports: [MDBBootstrapModule, MDBBootstrapModulePro] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MDBBootstrapModulesPro, { exports: [MDBBootstrapModule, MDBBootstrapModulePro] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MDBBootstrapModulesPro, [{
        type: NgModule,
        args: [{ exports: MODULES }]
    }], null, null); })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWRiLm1vZHVsZS5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvbmctdWlraXQtcHJvLXN0YW5kYXJkL3NyYy9saWIvbWRiLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQXVCLFFBQVEsRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUVoRixPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUM1RCxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQzs7OztBQUU3RCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUU1RCxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUU3RCxNQUFNLE9BQU8sR0FBRyxDQUFDLGtCQUFrQixFQUFFLHFCQUFxQixDQUFDLENBQUM7QUFRNUQsTUFBTSxPQUFPLGNBQWM7QUFDM0I7NENBUEMsUUFBUSxTQUFDO09BQ1IsT0FBTyxFQUFFLENBQUMsa0JBQWtCLENBQUMsT0FBTyxFQUFFLEVBQUUscUJBQXFCLENBQUMsT0FBTyxFQUFFLENBQUMsbUJBQ3hFLE9BQU8sRUFBRSxPQUFPLG1CQUNoQixTQUFTLEVBQUUsRUFBRSxtQkFDYixPQUFPLEVBQUUsQ0FBQyxnQkFBZ0IsQ0FBQyxnQkFDNUI7Ozs7Ozs7Ozs7MEJBQ0s7QUFHTixNQUFNLE9BQU8sc0JBQXNCO0FBQ2xDLElBQVEsTUFBTSxDQUFDLE9BQU87QUFBTSxRQUN6QixPQUFPLEVBQUUsUUFBUSxFQUFFLGNBQWMsRUFBRSxDQUFDO0FBQ3ZDLElBQUMsQ0FBQztBQUNGO29EQUxBLFFBQVEsU0FBQyxFQUFFLE9BQU8sRUFBRSxPQUFPO0FBQUU7Ozs7OztBQW5CQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBRUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFFQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQVFBLEFBQUEsQUFBQSxBQUFBLEFBTkEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUlBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUpBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNb2R1bGVXaXRoUHJvdmlkZXJzLCBOZ01vZHVsZSwgTk9fRVJST1JTX1NDSEVNQSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBNREJCb290c3RyYXBNb2R1bGUgfSBmcm9tICcuL2ZyZWUvbWRiLWZyZWUubW9kdWxlJztcbmltcG9ydCB7IE1EQkJvb3RzdHJhcE1vZHVsZVBybyB9IGZyb20gJy4vcHJvL21kYi1wcm8ubW9kdWxlJztcblxuZXhwb3J0IHsgTURCQm9vdHN0cmFwTW9kdWxlIH0gZnJvbSAnLi9mcmVlL21kYi1mcmVlLm1vZHVsZSc7XG5cbmV4cG9ydCB7IE1EQkJvb3RzdHJhcE1vZHVsZVBybyB9IGZyb20gJy4vcHJvL21kYi1wcm8ubW9kdWxlJztcblxuY29uc3QgTU9EVUxFUyA9IFtNREJCb290c3RyYXBNb2R1bGUsIE1EQkJvb3RzdHJhcE1vZHVsZVByb107XG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtNREJCb290c3RyYXBNb2R1bGUuZm9yUm9vdCgpLCBNREJCb290c3RyYXBNb2R1bGVQcm8uZm9yUm9vdCgpXSxcbiAgZXhwb3J0czogTU9EVUxFUyxcbiAgcHJvdmlkZXJzOiBbXSxcbiAgc2NoZW1hczogW05PX0VSUk9SU19TQ0hFTUFdLFxufSlcbmV4cG9ydCBjbGFzcyBNREJSb290TW9kdWxlcyB7fVxuXG5ATmdNb2R1bGUoeyBleHBvcnRzOiBNT0RVTEVTIH0pXG5leHBvcnQgY2xhc3MgTURCQm9vdHN0cmFwTW9kdWxlc1BybyB7XG4gIHB1YmxpYyBzdGF0aWMgZm9yUm9vdCgpOiBNb2R1bGVXaXRoUHJvdmlkZXJzPE1EQlJvb3RNb2R1bGVzPiB7XG4gICAgcmV0dXJuIHsgbmdNb2R1bGU6IE1EQlJvb3RNb2R1bGVzIH07XG4gIH1cbn1cbiJdfQ==