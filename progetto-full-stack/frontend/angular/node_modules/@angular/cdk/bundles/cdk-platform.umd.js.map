{"version":3,"file":"cdk-platform.umd.js","sources":["../../../../../src/cdk/platform/platform.ts","../../../../../src/cdk/platform/platform-module.ts","../../../../../src/cdk/platform/features/input-types.ts","../../../../../src/cdk/platform/features/passive-listeners.ts","../../../../../src/cdk/platform/features/scrolling.ts","../../../../../src/cdk/platform/features/shadow-dom.ts","../../../../../src/cdk/platform/public-api.ts","../../../../../src/cdk/platform/index.ts"],"names":["isPlatformBrowser","Injectable","Inject","PLATFORM_ID","NgModule"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Inject, Injectable, PLATFORM_ID} from '@angular/core';\nimport {isPlatformBrowser} from '@angular/common';\n\n// Whether the current platform supports the V8 Break Iterator. The V8 check\n// is necessary to detect all Blink based browsers.\nlet hasV8BreakIterator: boolean;\n\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n  hasV8BreakIterator = (typeof Intl !== 'undefined' && (Intl as any).v8BreakIterator);\n} catch {\n  hasV8BreakIterator = false;\n}\n\n/**\n * Service to detect the current platform by comparing the userAgent strings and\n * checking browser-specific global properties.\n */\n@Injectable({providedIn: 'root'})\nexport class Platform {\n  // We want to use the Angular platform check because if the Document is shimmed\n  // without the navigator, the following checks will fail. This is preferred because\n  // sometimes the Document may be shimmed without the user's knowledge or intention\n  /** Whether the Angular application is being rendered in the browser. */\n  isBrowser: boolean = this._platformId ?\n      isPlatformBrowser(this._platformId) : typeof document === 'object' && !!document;\n\n  /** Whether the current browser is Microsoft Edge. */\n  EDGE: boolean = this.isBrowser && /(edge)/i.test(navigator.userAgent);\n\n  /** Whether the current rendering engine is Microsoft Trident. */\n  TRIDENT: boolean = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);\n\n  // EdgeHTML and Trident mock Blink specific things and need to be excluded from this check.\n  /** Whether the current rendering engine is Blink. */\n  BLINK: boolean = this.isBrowser && (!!((window as any).chrome || hasV8BreakIterator) &&\n      typeof CSS !== 'undefined' && !this.EDGE && !this.TRIDENT);\n\n  // Webkit is part of the userAgent in EdgeHTML, Blink and Trident. Therefore we need to\n  // ensure that Webkit runs standalone and is not used as another engine's base.\n  /** Whether the current rendering engine is WebKit. */\n  WEBKIT: boolean = this.isBrowser &&\n      /AppleWebKit/i.test(navigator.userAgent) && !this.BLINK && !this.EDGE && !this.TRIDENT;\n\n  /** Whether the current platform is Apple iOS. */\n  IOS: boolean = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) &&\n      !('MSStream' in window);\n\n  // It's difficult to detect the plain Gecko engine, because most of the browsers identify\n  // them self as Gecko-like browsers and modify the userAgent's according to that.\n  // Since we only cover one explicit Firefox case, we can simply check for Firefox\n  // instead of having an unstable check for Gecko.\n  /** Whether the current browser is Firefox. */\n  FIREFOX: boolean = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);\n\n  /** Whether the current platform is Android. */\n  // Trident on mobile adds the android platform to the userAgent to trick detections.\n  ANDROID: boolean = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;\n\n  // Safari browsers will include the Safari keyword in their userAgent. Some browsers may fake\n  // this and just place the Safari keyword in the userAgent. To be more safe about Safari every\n  // Safari browser should also use Webkit as its layout engine.\n  /** Whether the current browser is Safari. */\n  SAFARI: boolean = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;\n\n  constructor(@Inject(PLATFORM_ID) private _platformId: Object) {}\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\n\n\n@NgModule({})\nexport class PlatformModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Cached result Set of input types support by the current browser. */\nlet supportedInputTypes: Set<string>;\n\n/** Types of `<input>` that *might* be supported. */\nconst candidateInputTypes = [\n  // `color` must come first. Chrome 56 shows a warning if we change the type to `color` after\n  // first changing it to something else:\n  // The specified value \"\" does not conform to the required format.\n  // The format is \"#rrggbb\" where rr, gg, bb are two-digit hexadecimal numbers.\n  'color',\n  'button',\n  'checkbox',\n  'date',\n  'datetime-local',\n  'email',\n  'file',\n  'hidden',\n  'image',\n  'month',\n  'number',\n  'password',\n  'radio',\n  'range',\n  'reset',\n  'search',\n  'submit',\n  'tel',\n  'text',\n  'time',\n  'url',\n  'week',\n];\n\n/** @returns The input types supported by this browser. */\nexport function getSupportedInputTypes(): Set<string> {\n  // Result is cached.\n  if (supportedInputTypes) {\n    return supportedInputTypes;\n  }\n\n  // We can't check if an input type is not supported until we're on the browser, so say that\n  // everything is supported when not on the browser. We don't use `Platform` here since it's\n  // just a helper function and can't inject it.\n  if (typeof document !== 'object' || !document) {\n    supportedInputTypes = new Set(candidateInputTypes);\n    return supportedInputTypes;\n  }\n\n  let featureTestInput = document.createElement('input');\n  supportedInputTypes = new Set(candidateInputTypes.filter(value => {\n    featureTestInput.setAttribute('type', value);\n    return featureTestInput.type === value;\n  }));\n\n  return supportedInputTypes;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Cached result of whether the user's browser supports passive event listeners. */\nlet supportsPassiveEvents: boolean;\n\n/**\n * Checks whether the user's browser supports passive event listeners.\n * See: https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n */\nexport function supportsPassiveEventListeners(): boolean {\n  if (supportsPassiveEvents == null && typeof window !== 'undefined') {\n    try {\n      window.addEventListener('test', null!, Object.defineProperty({}, 'passive', {\n        get: () => supportsPassiveEvents = true\n      }));\n    } finally {\n      supportsPassiveEvents = supportsPassiveEvents || false;\n    }\n  }\n\n  return supportsPassiveEvents;\n}\n\n/**\n * Normalizes an `AddEventListener` object to something that can be passed\n * to `addEventListener` on any browser, no matter whether it supports the\n * `options` parameter.\n * @param options Object to be normalized.\n */\nexport function normalizePassiveListenerOptions(options: AddEventListenerOptions):\n  AddEventListenerOptions | boolean {\n  return supportsPassiveEventListeners() ? options : !!options.capture;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** The possible ways the browser may handle the horizontal scroll axis in RTL languages. */\nexport const enum RtlScrollAxisType {\n  /**\n   * scrollLeft is 0 when scrolled all the way left and (scrollWidth - clientWidth) when scrolled\n   * all the way right.\n   */\n  NORMAL,\n  /**\n   * scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and 0 when scrolled\n   * all the way right.\n   */\n  NEGATED,\n  /**\n   * scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and 0 when scrolled\n   * all the way right.\n   */\n  INVERTED\n}\n\n/** Cached result of the way the browser handles the horizontal scroll axis in RTL mode. */\nlet rtlScrollAxisType: RtlScrollAxisType|undefined;\n\n/** Cached result of the check that indicates whether the browser supports scroll behaviors. */\nlet scrollBehaviorSupported: boolean|undefined;\n\n/** Check whether the browser supports scroll behaviors. */\nexport function supportsScrollBehavior(): boolean {\n  if (scrollBehaviorSupported == null) {\n    // If we're not in the browser, it can't be supported.\n    if (typeof document !== 'object' || !document) {\n      scrollBehaviorSupported = false;\n      return scrollBehaviorSupported;\n    }\n\n    // If the element can have a `scrollBehavior` style, we can be sure that it's supported.\n    if ('scrollBehavior' in document.documentElement!.style) {\n      scrollBehaviorSupported = true;\n    } else {\n      // At this point we have 3 possibilities: `scrollTo` isn't supported at all, it's\n      // supported but it doesn't handle scroll behavior, or it has been polyfilled.\n      const scrollToFunction: Function|undefined = Element.prototype.scrollTo;\n\n      if (scrollToFunction) {\n        // We can detect if the function has been polyfilled by calling `toString` on it. Native\n        // functions are obfuscated using `[native code]`, whereas if it was overwritten we'd get\n        // the actual function source. Via https://davidwalsh.name/detect-native-function. Consider\n        // polyfilled functions as supporting scroll behavior.\n        scrollBehaviorSupported = !/\\{\\s*\\[native code\\]\\s*\\}/.test(scrollToFunction.toString());\n      } else {\n        scrollBehaviorSupported = false;\n      }\n    }\n  }\n\n  return scrollBehaviorSupported;\n}\n\n/**\n * Checks the type of RTL scroll axis used by this browser. As of time of writing, Chrome is NORMAL,\n * Firefox & Safari are NEGATED, and IE & Edge are INVERTED.\n */\nexport function getRtlScrollAxisType(): RtlScrollAxisType {\n  // We can't check unless we're on the browser. Just assume 'normal' if we're not.\n  if (typeof document !== 'object' || !document) {\n    return RtlScrollAxisType.NORMAL;\n  }\n\n  if (rtlScrollAxisType == null) {\n    // Create a 1px wide scrolling container and a 2px wide content element.\n    const scrollContainer = document.createElement('div');\n    const containerStyle = scrollContainer.style;\n    scrollContainer.dir = 'rtl';\n    containerStyle.width = '1px';\n    containerStyle.overflow = 'auto';\n    containerStyle.visibility = 'hidden';\n    containerStyle.pointerEvents = 'none';\n    containerStyle.position = 'absolute';\n\n    const content = document.createElement('div');\n    const contentStyle = content.style;\n    contentStyle.width = '2px';\n    contentStyle.height = '1px';\n\n    scrollContainer.appendChild(content);\n    document.body.appendChild(scrollContainer);\n\n    rtlScrollAxisType = RtlScrollAxisType.NORMAL;\n\n    // The viewport starts scrolled all the way to the right in RTL mode. If we are in a NORMAL\n    // browser this would mean that the scrollLeft should be 1. If it's zero instead we know we're\n    // dealing with one of the other two types of browsers.\n    if (scrollContainer.scrollLeft === 0) {\n      // In a NEGATED browser the scrollLeft is always somewhere in [-maxScrollAmount, 0]. For an\n      // INVERTED browser it is always somewhere in [0, maxScrollAmount]. We can determine which by\n      // setting to the scrollLeft to 1. This is past the max for a NEGATED browser, so it will\n      // return 0 when we read it again.\n      scrollContainer.scrollLeft = 1;\n      rtlScrollAxisType =\n          scrollContainer.scrollLeft === 0 ? RtlScrollAxisType.NEGATED : RtlScrollAxisType.INVERTED;\n    }\n\n    scrollContainer.parentNode!.removeChild(scrollContainer);\n  }\n  return rtlScrollAxisType;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nlet shadowDomIsSupported: boolean;\n\n/** Checks whether the user's browser support Shadow DOM. */\nexport function _supportsShadowDom(): boolean {\n  if (shadowDomIsSupported == null) {\n    const head = typeof document !== 'undefined' ? document.head : null;\n    shadowDomIsSupported = !!(head && ((head as any).createShadowRoot || head.attachShadow));\n  }\n\n  return shadowDomIsSupported;\n}\n\n/** Gets the shadow root of an element, if supported and the element is inside the Shadow DOM. */\nexport function _getShadowRoot(element: HTMLElement): Node | null {\n  if (_supportsShadowDom()) {\n    const rootNode = element.getRootNode ? element.getRootNode() : null;\n\n    // Note that this should be caught by `_supportsShadowDom`, but some\n    // teams have been able to hit this code path on unsupported browsers.\n    if (typeof ShadowRoot !== 'undefined' && ShadowRoot && rootNode instanceof ShadowRoot) {\n      return rootNode;\n    }\n  }\n\n  return null;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './platform';\nexport * from './platform-module';\nexport * from './features/input-types';\nexport * from './features/passive-listeners';\nexport * from './features/scrolling';\nexport * from './features/shadow-dom';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}