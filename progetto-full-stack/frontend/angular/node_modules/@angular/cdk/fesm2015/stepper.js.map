{"version":3,"file":"stepper.js","sources":["../../../../../../src/cdk/stepper/step-header.ts","../../../../../../src/cdk/stepper/step-label.ts","../../../../../../src/cdk/stepper/stepper.ts","../../../../../../src/cdk/stepper/stepper-button.ts","../../../../../../src/cdk/stepper/stepper-module.ts","../../../../../../src/cdk/stepper/public-api.ts","../../../../../../src/cdk/stepper/index.ts"],"names":["observableOf"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, ElementRef} from '@angular/core';\nimport {FocusableOption} from '@angular/cdk/a11y';\n\n\n@Directive({\n  selector: '[cdkStepHeader]',\n  host: {\n    'role': 'tab',\n  },\n})\nexport class CdkStepHeader implements FocusableOption {\n  constructor(public _elementRef: ElementRef<HTMLElement>) {}\n\n  /** Focuses the step header. */\n  focus() {\n    this._elementRef.nativeElement.focus();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, TemplateRef} from '@angular/core';\n\n@Directive({\n  selector: '[cdkStepLabel]',\n})\nexport class CdkStepLabel {\n  constructor(/** @docs-private */ public template: TemplateRef<any>) { }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FocusableOption, FocusKeyManager} from '@angular/cdk/a11y';\nimport {Direction, Directionality} from '@angular/cdk/bidi';\nimport {\n  BooleanInput,\n  coerceBooleanProperty,\n  coerceNumberProperty,\n  NumberInput\n} from '@angular/cdk/coercion';\nimport {ENTER, hasModifierKey, SPACE} from '@angular/cdk/keycodes';\nimport {DOCUMENT} from '@angular/common';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  InjectionToken,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  Output,\n  QueryList,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation,\n  AfterContentInit,\n} from '@angular/core';\nimport {Observable, of as observableOf, Subject} from 'rxjs';\nimport {startWith, takeUntil} from 'rxjs/operators';\n\nimport {CdkStepHeader} from './step-header';\nimport {CdkStepLabel} from './step-label';\n\n/** Used to generate unique ID for each stepper component. */\nlet nextId = 0;\n\n/**\n * Position state of the content of each step in stepper that is used for transitioning\n * the content into correct position upon step selection change.\n */\nexport type StepContentPositionState = 'previous'|'current'|'next';\n\n/** Possible orientation of a stepper. */\nexport type StepperOrientation = 'horizontal'|'vertical';\n\n/** Change event emitted on selection changes. */\nexport class StepperSelectionEvent {\n  /** Index of the step now selected. */\n  selectedIndex: number;\n\n  /** Index of the step previously selected. */\n  previouslySelectedIndex: number;\n\n  /** The step instance now selected. */\n  selectedStep: CdkStep;\n\n  /** The step instance previously selected. */\n  previouslySelectedStep: CdkStep;\n}\n\n/** The state of each step. */\nexport type StepState = 'number'|'edit'|'done'|'error'|string;\n\n/** Enum to represent the different states of the steps. */\nexport const STEP_STATE = {\n  NUMBER: 'number',\n  EDIT: 'edit',\n  DONE: 'done',\n  ERROR: 'error'\n};\n\n/** InjectionToken that can be used to specify the global stepper options. */\nexport const STEPPER_GLOBAL_OPTIONS = new InjectionToken<StepperOptions>('STEPPER_GLOBAL_OPTIONS');\n\n/**\n * InjectionToken that can be used to specify the global stepper options.\n * @deprecated Use `STEPPER_GLOBAL_OPTIONS` instead.\n * @breaking-change 8.0.0.\n */\nexport const MAT_STEPPER_GLOBAL_OPTIONS = STEPPER_GLOBAL_OPTIONS;\n\n/** Configurable options for stepper. */\nexport interface StepperOptions {\n  /**\n   * Whether the stepper should display an error state or not.\n   * Default behavior is assumed to be false.\n   */\n  showError?: boolean;\n\n  /**\n   * Whether the stepper should display the default indicator type\n   * or not.\n   * Default behavior is assumed to be true.\n   */\n  displayDefaultIndicatorType?: boolean;\n}\n\n@Component({\n  selector: 'cdk-step',\n  exportAs: 'cdkStep',\n  template: '<ng-template><ng-content></ng-content></ng-template>',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CdkStep implements OnChanges {\n  private _stepperOptions: StepperOptions;\n  _showError: boolean;\n  _displayDefaultIndicatorType: boolean;\n\n  /** Template for step label if it exists. */\n  @ContentChild(CdkStepLabel) stepLabel: CdkStepLabel;\n\n  /** Template for step content. */\n  @ViewChild(TemplateRef, {static: true}) content: TemplateRef<any>;\n\n  /** The top level abstract control of the step. */\n  @Input() stepControl: AbstractControlLike;\n\n  /** Whether user has seen the expanded step content or not. */\n  interacted = false;\n\n  /** Plain text label of the step. */\n  @Input() label: string;\n\n  /** Error message to display when there's an error. */\n  @Input() errorMessage: string;\n\n  /** Aria label for the tab. */\n  @Input('aria-label') ariaLabel: string;\n\n  /**\n   * Reference to the element that the tab is labelled by.\n   * Will be cleared if `aria-label` is set at the same time.\n   */\n  @Input('aria-labelledby') ariaLabelledby: string;\n\n  /** State of the step. */\n  @Input() state: StepState;\n\n  /** Whether the user can return to this step once it has been marked as completed. */\n  @Input()\n  get editable(): boolean {\n    return this._editable;\n  }\n  set editable(value: boolean) {\n    this._editable = coerceBooleanProperty(value);\n  }\n  private _editable = true;\n\n  /** Whether the completion of step is optional. */\n  @Input()\n  get optional(): boolean {\n    return this._optional;\n  }\n  set optional(value: boolean) {\n    this._optional = coerceBooleanProperty(value);\n  }\n  private _optional = false;\n\n  /** Whether step is marked as completed. */\n  @Input()\n  get completed(): boolean {\n    return this._completedOverride == null ? this._getDefaultCompleted() : this._completedOverride;\n  }\n  set completed(value: boolean) {\n    this._completedOverride = coerceBooleanProperty(value);\n  }\n  _completedOverride: boolean|null = null;\n\n  private _getDefaultCompleted() {\n    return this.stepControl ? this.stepControl.valid && this.interacted : this.interacted;\n  }\n\n  /** Whether step has an error. */\n  @Input()\n  get hasError(): boolean {\n    return this._customError == null ? this._getDefaultError() : this._customError;\n  }\n  set hasError(value: boolean) {\n    this._customError = coerceBooleanProperty(value);\n  }\n  private _customError: boolean|null = null;\n\n  private _getDefaultError() {\n    return this.stepControl && this.stepControl.invalid && this.interacted;\n  }\n\n  /** @breaking-change 8.0.0 remove the `?` after `stepperOptions` */\n  constructor(\n      @Inject(forwardRef(() => CdkStepper)) public _stepper: CdkStepper,\n      @Optional() @Inject(STEPPER_GLOBAL_OPTIONS) stepperOptions?: StepperOptions) {\n    this._stepperOptions = stepperOptions ? stepperOptions : {};\n    this._displayDefaultIndicatorType = this._stepperOptions.displayDefaultIndicatorType !== false;\n    this._showError = !!this._stepperOptions.showError;\n  }\n\n  /** Selects this step component. */\n  select(): void {\n    this._stepper.selected = this;\n  }\n\n  /** Resets the step to its initial state. Note that this includes resetting form data. */\n  reset(): void {\n    this.interacted = false;\n\n    if (this._completedOverride != null) {\n      this._completedOverride = false;\n    }\n\n    if (this._customError != null) {\n      this._customError = false;\n    }\n\n    if (this.stepControl) {\n      this.stepControl.reset();\n    }\n  }\n\n  ngOnChanges() {\n    // Since basically all inputs of the MatStep get proxied through the view down to the\n    // underlying MatStepHeader, we have to make sure that change detection runs correctly.\n    this._stepper._stateChanged();\n  }\n\n  static ngAcceptInputType_editable: BooleanInput;\n  static ngAcceptInputType_hasError: BooleanInput;\n  static ngAcceptInputType_optional: BooleanInput;\n  static ngAcceptInputType_completed: BooleanInput;\n}\n\n@Directive({\n  selector: '[cdkStepper]',\n  exportAs: 'cdkStepper',\n})\nexport class CdkStepper implements AfterContentInit, AfterViewInit, OnDestroy {\n  /** Emits when the component is destroyed. */\n  protected _destroyed = new Subject<void>();\n\n  /** Used for managing keyboard focus. */\n  private _keyManager: FocusKeyManager<FocusableOption>;\n\n  /**\n   * @breaking-change 8.0.0 Remove `| undefined` once the `_document`\n   * constructor param is required.\n   */\n  private _document: Document|undefined;\n\n  /** Full list of steps inside the stepper, including inside nested steppers. */\n  @ContentChildren(CdkStep, {descendants: true}) _steps: QueryList<CdkStep>;\n\n  /** Steps that belong to the current stepper, excluding ones from nested steppers. */\n  readonly steps: QueryList<CdkStep> = new QueryList<CdkStep>();\n\n  /**\n   * The list of step headers of the steps in the stepper.\n   * @deprecated Type to be changed to `QueryList<CdkStepHeader>`.\n   * @breaking-change 8.0.0\n   */\n  @ContentChildren(CdkStepHeader, {descendants: true}) _stepHeader: QueryList<FocusableOption>;\n\n  /** Whether the validity of previous steps should be checked or not. */\n  @Input()\n  get linear(): boolean {\n    return this._linear;\n  }\n  set linear(value: boolean) {\n    this._linear = coerceBooleanProperty(value);\n  }\n  private _linear = false;\n\n  /** The index of the selected step. */\n  @Input()\n  get selectedIndex() {\n    return this._selectedIndex;\n  }\n  set selectedIndex(index: number) {\n    const newIndex = coerceNumberProperty(index);\n\n    if (this.steps && this._steps) {\n      // Ensure that the index can't be out of bounds.\n      if (!this._isValidIndex(index) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('cdkStepper: Cannot assign out-of-bounds value to `selectedIndex`.');\n      }\n\n      if (this._selectedIndex !== newIndex && !this._anyControlsInvalidOrPending(newIndex) &&\n          (newIndex >= this._selectedIndex || this.steps.toArray()[newIndex].editable)) {\n        this._updateSelectedItemIndex(index);\n      }\n    } else {\n      this._selectedIndex = newIndex;\n    }\n  }\n  private _selectedIndex = 0;\n\n  /** The step that is selected. */\n  @Input()\n  get selected(): CdkStep {\n    // @breaking-change 8.0.0 Change return type to `CdkStep | undefined`.\n    return this.steps ? this.steps.toArray()[this.selectedIndex] : undefined!;\n  }\n  set selected(step: CdkStep) {\n    this.selectedIndex = this.steps ? this.steps.toArray().indexOf(step) : -1;\n  }\n\n  /** Event emitted when the selected step has changed. */\n  @Output()\n  selectionChange: EventEmitter<StepperSelectionEvent> = new EventEmitter<StepperSelectionEvent>();\n\n  /** Used to track unique ID for each stepper component. */\n  _groupId: number;\n\n  protected _orientation: StepperOrientation = 'horizontal';\n\n  constructor(\n      @Optional() private _dir: Directionality, private _changeDetectorRef: ChangeDetectorRef,\n      // @breaking-change 8.0.0 `_elementRef` and `_document` parameters to become required.\n      private _elementRef?: ElementRef<HTMLElement>, @Inject(DOCUMENT) _document?: any) {\n    this._groupId = nextId++;\n    this._document = _document;\n  }\n\n  ngAfterContentInit() {\n    this._steps.changes\n      .pipe(startWith(this._steps), takeUntil(this._destroyed))\n      .subscribe((steps: QueryList<CdkStep>) => {\n        this.steps.reset(steps.filter(step => step._stepper === this));\n        this.steps.notifyOnChanges();\n      });\n  }\n\n  ngAfterViewInit() {\n    // Note that while the step headers are content children by default, any components that\n    // extend this one might have them as view children. We initialize the keyboard handling in\n    // AfterViewInit so we're guaranteed for both view and content children to be defined.\n    this._keyManager = new FocusKeyManager<FocusableOption>(this._stepHeader)\n                           .withWrap()\n                           .withHomeAndEnd()\n                           .withVerticalOrientation(this._orientation === 'vertical');\n\n    (this._dir ? (this._dir.change as Observable<Direction>) : observableOf<Direction>())\n        .pipe(startWith(this._layoutDirection()), takeUntil(this._destroyed))\n        .subscribe(direction => this._keyManager.withHorizontalOrientation(direction));\n\n    this._keyManager.updateActiveItem(this._selectedIndex);\n\n    // No need to `takeUntil` here, because we're the ones destroying `steps`.\n    this.steps.changes.subscribe(() => {\n      if (!this.selected) {\n        this._selectedIndex = Math.max(this._selectedIndex - 1, 0);\n      }\n    });\n\n    // The logic which asserts that the selected index is within bounds doesn't run before the\n    // steps are initialized, because we don't how many steps there are yet so we may have an\n    // invalid index on init. If that's the case, auto-correct to the default so we don't throw.\n    if (!this._isValidIndex(this._selectedIndex)) {\n      this._selectedIndex = 0;\n    }\n  }\n\n  ngOnDestroy() {\n    this.steps.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n\n  /** Selects and focuses the next step in list. */\n  next(): void {\n    this.selectedIndex = Math.min(this._selectedIndex + 1, this.steps.length - 1);\n  }\n\n  /** Selects and focuses the previous step in list. */\n  previous(): void {\n    this.selectedIndex = Math.max(this._selectedIndex - 1, 0);\n  }\n\n  /** Resets the stepper to its initial state. Note that this includes clearing form data. */\n  reset(): void {\n    this._updateSelectedItemIndex(0);\n    this.steps.forEach(step => step.reset());\n    this._stateChanged();\n  }\n\n  /** Returns a unique id for each step label element. */\n  _getStepLabelId(i: number): string {\n    return `cdk-step-label-${this._groupId}-${i}`;\n  }\n\n  /** Returns unique id for each step content element. */\n  _getStepContentId(i: number): string {\n    return `cdk-step-content-${this._groupId}-${i}`;\n  }\n\n  /** Marks the component to be change detected. */\n  _stateChanged() {\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Returns position state of the step with the given index. */\n  _getAnimationDirection(index: number): StepContentPositionState {\n    const position = index - this._selectedIndex;\n    if (position < 0) {\n      return this._layoutDirection() === 'rtl' ? 'next' : 'previous';\n    } else if (position > 0) {\n      return this._layoutDirection() === 'rtl' ? 'previous' : 'next';\n    }\n    return 'current';\n  }\n\n  /** Returns the type of icon to be displayed. */\n  _getIndicatorType(index: number, state: StepState = STEP_STATE.NUMBER): StepState {\n    const step = this.steps.toArray()[index];\n    const isCurrentStep = this._isCurrentStep(index);\n\n    return step._displayDefaultIndicatorType ? this._getDefaultIndicatorLogic(step, isCurrentStep) :\n                                               this._getGuidelineLogic(step, isCurrentStep, state);\n  }\n\n  private _getDefaultIndicatorLogic(step: CdkStep, isCurrentStep: boolean): StepState {\n    if (step._showError && step.hasError && !isCurrentStep) {\n      return STEP_STATE.ERROR;\n    } else if (!step.completed || isCurrentStep) {\n      return STEP_STATE.NUMBER;\n    } else {\n      return step.editable ? STEP_STATE.EDIT : STEP_STATE.DONE;\n    }\n  }\n\n  private _getGuidelineLogic(\n      step: CdkStep, isCurrentStep: boolean, state: StepState = STEP_STATE.NUMBER): StepState {\n    if (step._showError && step.hasError && !isCurrentStep) {\n      return STEP_STATE.ERROR;\n    } else if (step.completed && !isCurrentStep) {\n      return STEP_STATE.DONE;\n    } else if (step.completed && isCurrentStep) {\n      return state;\n    } else if (step.editable && isCurrentStep) {\n      return STEP_STATE.EDIT;\n    } else {\n      return state;\n    }\n  }\n\n  private _isCurrentStep(index: number) {\n    return this._selectedIndex === index;\n  }\n\n  /** Returns the index of the currently-focused step header. */\n  _getFocusIndex() {\n    return this._keyManager ? this._keyManager.activeItemIndex : this._selectedIndex;\n  }\n\n  private _updateSelectedItemIndex(newIndex: number): void {\n    const stepsArray = this.steps.toArray();\n    this.selectionChange.emit({\n      selectedIndex: newIndex,\n      previouslySelectedIndex: this._selectedIndex,\n      selectedStep: stepsArray[newIndex],\n      previouslySelectedStep: stepsArray[this._selectedIndex],\n    });\n\n    // If focus is inside the stepper, move it to the next header, otherwise it may become\n    // lost when the active step content is hidden. We can't be more granular with the check\n    // (e.g. checking whether focus is inside the active step), because we don't have a\n    // reference to the elements that are rendering out the content.\n    this._containsFocus() ? this._keyManager.setActiveItem(newIndex) :\n                            this._keyManager.updateActiveItem(newIndex);\n\n    this._selectedIndex = newIndex;\n    this._stateChanged();\n  }\n\n  _onKeydown(event: KeyboardEvent) {\n    const hasModifier = hasModifierKey(event);\n    const keyCode = event.keyCode;\n    const manager = this._keyManager;\n\n    if (manager.activeItemIndex != null && !hasModifier &&\n        (keyCode === SPACE || keyCode === ENTER)) {\n      this.selectedIndex = manager.activeItemIndex;\n      event.preventDefault();\n    } else {\n      manager.onKeydown(event);\n    }\n  }\n\n  private _anyControlsInvalidOrPending(index: number): boolean {\n    const steps = this.steps.toArray();\n\n    steps[this._selectedIndex].interacted = true;\n\n    if (this._linear && index >= 0) {\n      return steps.slice(0, index).some(step => {\n        const control = step.stepControl;\n        const isIncomplete =\n            control ? (control.invalid || control.pending || !step.interacted) : !step.completed;\n        return isIncomplete && !step.optional && !step._completedOverride;\n      });\n    }\n\n    return false;\n  }\n\n  private _layoutDirection(): Direction {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n\n  /** Checks whether the stepper contains the focused element. */\n  private _containsFocus(): boolean {\n    if (!this._document || !this._elementRef) {\n      return false;\n    }\n\n    const stepperElement = this._elementRef.nativeElement;\n    const focusedElement = this._document.activeElement;\n    return stepperElement === focusedElement || stepperElement.contains(focusedElement);\n  }\n\n  /** Checks whether the passed-in index is a valid step index. */\n  private _isValidIndex(index: number): boolean {\n    return index > -1 && (!this.steps || index < this.steps.length);\n  }\n\n  static ngAcceptInputType_editable: BooleanInput;\n  static ngAcceptInputType_optional: BooleanInput;\n  static ngAcceptInputType_completed: BooleanInput;\n  static ngAcceptInputType_hasError: BooleanInput;\n  static ngAcceptInputType_linear: BooleanInput;\n  static ngAcceptInputType_selectedIndex: NumberInput;\n}\n\n\n/**\n * Simplified representation of an \"AbstractControl\" from @angular/forms.\n * Used to avoid having to bring in @angular/forms for a single optional interface.\n * @docs-private\n */\ninterface AbstractControlLike {\n  asyncValidator: ((control: any) => any) | null;\n  dirty: boolean;\n  disabled: boolean;\n  enabled: boolean;\n  errors: {[key: string]: any} | null;\n  invalid: boolean;\n  parent: any;\n  pending: boolean;\n  pristine: boolean;\n  root: AbstractControlLike;\n  status: string;\n  statusChanges: Observable<any>;\n  touched: boolean;\n  untouched: boolean;\n  updateOn: any;\n  valid: boolean;\n  validator: ((control: any) => any) | null;\n  value: any;\n  valueChanges: Observable<any>;\n  clearAsyncValidators(): void;\n  clearValidators(): void;\n  disable(opts?: any): void;\n  enable(opts?: any): void;\n  get(path: (string | number)[] | string): AbstractControlLike | null;\n  getError(errorCode: string, path?: (string | number)[] | string): any;\n  hasError(errorCode: string, path?: (string | number)[] | string): boolean;\n  markAllAsTouched(): void;\n  markAsDirty(opts?: any): void;\n  markAsPending(opts?: any): void;\n  markAsPristine(opts?: any): void;\n  markAsTouched(opts?: any): void;\n  markAsUntouched(opts?: any): void;\n  patchValue(value: any, options?: Object): void;\n  reset(value?: any, options?: Object): void;\n  setAsyncValidators(newValidator: (control: any) => any |\n    ((control: any) => any)[] | null): void;\n  setErrors(errors: {[key: string]: any} | null, opts?: any): void;\n  setParent(parent: any): void;\n  setValidators(newValidator: (control: any) => any |\n    ((control: any) => any)[] | null): void;\n  setValue(value: any, options?: Object): void;\n  updateValueAndValidity(opts?: any): void;\n  patchValue(value: any, options?: any): void;\n  reset(formState?: any, options?: any): void;\n  setValue(value: any, options?: any): void;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, HostListener, Input} from '@angular/core';\n\nimport {CdkStepper} from './stepper';\n\n/** Button that moves to the next step in a stepper workflow. */\n@Directive({\n  selector: 'button[cdkStepperNext]',\n  host: {\n    '[type]': 'type',\n  }\n})\nexport class CdkStepperNext {\n  /** Type of the next button. Defaults to \"submit\" if not specified. */\n  @Input() type: string = 'submit';\n\n  constructor(public _stepper: CdkStepper) {}\n\n  // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n  // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n  // ViewEngine they're overwritten.\n  // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n  // tslint:disable-next-line:no-host-decorator-in-concrete\n  @HostListener('click')\n  _handleClick() {\n    this._stepper.next();\n  }\n}\n\n/** Button that moves to the previous step in a stepper workflow. */\n@Directive({\n  selector: 'button[cdkStepperPrevious]',\n  host: {\n    '[type]': 'type',\n  }\n})\nexport class CdkStepperPrevious {\n  /** Type of the previous button. Defaults to \"button\" if not specified. */\n  @Input() type: string = 'button';\n\n  constructor(public _stepper: CdkStepper) {}\n\n  // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n  // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n  // ViewEngine they're overwritten.\n  // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n  // tslint:disable-next-line:no-host-decorator-in-concrete\n  @HostListener('click')\n  _handleClick() {\n    this._stepper.previous();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {CdkStepper, CdkStep} from './stepper';\nimport {CdkStepLabel} from './step-label';\nimport {CdkStepperNext, CdkStepperPrevious} from './stepper-button';\nimport {CdkStepHeader} from './step-header';\nimport {BidiModule} from '@angular/cdk/bidi';\n\n@NgModule({\n  imports: [BidiModule],\n  exports: [\n    CdkStep,\n    CdkStepper,\n    CdkStepHeader,\n    CdkStepLabel,\n    CdkStepperNext,\n    CdkStepperPrevious,\n  ],\n  declarations: [\n    CdkStep,\n    CdkStepper,\n    CdkStepHeader,\n    CdkStepLabel,\n    CdkStepperNext,\n    CdkStepperPrevious,\n  ]\n})\nexport class CdkStepperModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './stepper';\nexport * from './step-label';\nexport * from './stepper-button';\nexport * from './stepper-module';\nexport * from './step-header';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}